/*! For license information please see teachablemachine-pose.min.js.LICENSE.txt */
var tmPose;(()=>{var e={6898:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.partNames=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],t.NUM_KEYPOINTS=t.partNames.length,t.partIds=t.partNames.reduce((function(e,t,n){return e[t]=n,e}),{});t.poseChain=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]],t.connectedPartIndices=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map((function(e){var n=e[0],r=e[1];return[t.partIds[n],t.partIds[r]]})),t.partChannels=["left_face","right_face","right_upper_leg_front","right_lower_leg_back","right_upper_leg_back","left_lower_leg_front","left_upper_leg_front","left_upper_leg_back","left_lower_leg_back","right_feet","right_lower_leg_front","left_feet","torso_front","torso_back","right_upper_arm_front","right_upper_arm_back","right_lower_arm_back","left_lower_arm_front","left_upper_arm_front","left_upper_arm_back","left_lower_arm_back","right_hand","right_lower_arm_front","left_hand"]},6469:(e,t,n)=>{"use strict";n.r(t),n.d(t,{MobileNet:()=>Xe,PoseNet:()=>Xt,decodeMultiplePoses:()=>bt,decodeSinglePose:()=>Nt,getAdjacentKeyPoints:()=>Et,getBoundingBox:()=>Mt,getBoundingBoxPoints:()=>Ot,load:()=>Zt,partChannels:()=>st,partIds:()=>tt,partNames:()=>Je,poseChain:()=>nt,scaleAndFlipPoses:()=>zt,scalePose:()=>Dt,version:()=>Jt});var r={};n.r(r),n.d(r,{json:()=>R});var s={};n.r(s),n.d(s,{json:()=>V});var a={};n.r(a),n.d(a,{json:()=>C});var o={};n.r(o),n.d(o,{json:()=>F});var i={};n.r(i),n.d(i,{json:()=>P});var u={};n.r(u),n.d(u,{json:()=>L});var l={};n.r(l),n.d(l,{json:()=>z});var c={};n.r(c),n.d(c,{json:()=>W});var p={};n.r(p),n.d(p,{json:()=>q});var h={};n.r(h),n.d(h,{json:()=>U});var d={};n.r(d),n.d(d,{json:()=>G});var m={};n.r(m),n.d(m,{json:()=>H});var f={};n.r(f),n.d(f,{json:()=>j});var g={};n.r(g),n.d(g,{json:()=>K});var y={};n.r(y),n.d(y,{json:()=>X});var b={};n.r(b),n.d(b,{json:()=>Q});var w={};n.r(w),n.d(w,{json:()=>Y});var v={};n.r(v),n.d(v,{json:()=>Z});var x={};n.r(x),n.d(x,{json:()=>J});var N={};n.r(N),n.d(N,{OP_SCOPE_SUFFIX:()=>ge.zvA,abs:()=>ge.WnP,acos:()=>ge.Khb,acosh:()=>ge.__u,add:()=>ge.IHx,addN:()=>ge.QBD,all:()=>ge.$6P,any:()=>ge.YjB,argMax:()=>ge.NqF,argMin:()=>ge.vHJ,asin:()=>ge.ZRM,asinh:()=>ge.VfV,atan:()=>ge.z4N,atan2:()=>ge.fvJ,atanh:()=>ge.C80,avgPool:()=>ge.wS1,avgPool3d:()=>ge.uR5,basicLSTMCell:()=>ge.zEQ,batchNorm:()=>ge.tgs,batchNorm2d:()=>ge.Dxk,batchNorm3d:()=>ge.JY5,batchNorm4d:()=>ge.p3b,batchToSpaceND:()=>ge.E4h,bincount:()=>ge.yE8,booleanMaskAsync:()=>ge.anm,broadcastArgs:()=>ge.XsQ,broadcastTo:()=>ge.UFq,buffer:()=>ge.f3b,cast:()=>ge.pju,ceil:()=>ge.mDi,clipByValue:()=>ge.iUl,clone:()=>ge.d9v,complex:()=>ge.PYB,concat:()=>ge.zoF,concat1d:()=>ge.gME,concat2d:()=>ge.Izb,concat3d:()=>ge.MNy,concat4d:()=>ge.ZaL,conv1d:()=>ge.PAt,conv2d:()=>ge.Tek,conv2dTranspose:()=>ge.bc,conv3d:()=>ge.pdZ,conv3dTranspose:()=>ge.$QV,cos:()=>ge.mCk,cosh:()=>ge.f9Y,cosineWindow:()=>ge.mew,cumprod:()=>ge.$Gn,cumsum:()=>ge.zbp,denseBincount:()=>ge.ppE,depthToSpace:()=>ge.nTT,depthwiseConv2d:()=>ge.B10,diag:()=>ge.Ka3,dilation2d:()=>ge.WmZ,div:()=>ge.hiC,divNoNan:()=>ge.NTj,dot:()=>ge.AKD,dropout:()=>ge.rvX,einsum:()=>ge.WYO,elu:()=>ge.pyx,enclosingPowerOfTwo:()=>ge.GRh,equal:()=>ge.DgJ,erf:()=>ge.qNN,euclideanNorm:()=>ge.d2q,exp:()=>ge.Qqt,expandDims:()=>ge.dt4,expm1:()=>ge.t$B,eye:()=>ge.iyy,fft:()=>ge.kp_,fill:()=>ge.hlL,floor:()=>ge.GWj,floorDiv:()=>ge.qPi,fused:()=>ge.imm,gather:()=>ge.Iqj,gatherND:()=>ge.dbB,greater:()=>ge.pjt,greaterEqual:()=>ge.brS,ifft:()=>ge.Sxn,imag:()=>ge.asL,image:()=>ge.BHj,inTopKAsync:()=>ge.V3u,irfft:()=>ge.wx0,isFinite:()=>ge.xVT,isInf:()=>ge.UWc,isNaN:()=>ge.i2d,leakyRelu:()=>ge.hi7,less:()=>ge.d9m,lessEqual:()=>ge.zN1,linalg:()=>ge.$r2,linspace:()=>ge.SX3,localResponseNormalization:()=>ge.G9k,log:()=>ge.cM7,log1p:()=>ge.Krr,logSigmoid:()=>ge.e_t,logSoftmax:()=>ge.CmS,logSumExp:()=>ge.l_t,logicalAnd:()=>ge.HvI,logicalNot:()=>ge.hJK,logicalOr:()=>ge.K5V,logicalXor:()=>ge.egP,losses:()=>ge.MB5,lowerBound:()=>ge.eab,matMul:()=>ge.OI3,max:()=>ge.Fp7,maxPool:()=>ge._sB,maxPool3d:()=>ge.YQQ,maxPoolWithArgmax:()=>ge.Ip$,maximum:()=>ge.gWQ,mean:()=>ge.J69,meshgrid:()=>ge.ry_,min:()=>ge.VV$,minimum:()=>ge.LTh,mirrorPad:()=>ge.VdP,mod:()=>ge.wQq,moments:()=>ge.Gi7,movingAverage:()=>ge.p_,mul:()=>ge.dC7,multiRNNCell:()=>ge.rq4,multinomial:()=>ge.SJ_,neg:()=>ge.W76,norm:()=>ge.KOy,notEqual:()=>ge.Quu,oneHot:()=>ge.lfX,ones:()=>ge.iUs,onesLike:()=>ge.JpU,op:()=>ge.op,outerProduct:()=>ge.N2O,pad:()=>ge.vku,pad1d:()=>ge.pNR,pad2d:()=>ge.koy,pad3d:()=>ge.t1L,pad4d:()=>ge.lGY,pool:()=>ge.d_R,pow:()=>ge.sQ3,prelu:()=>ge.AL3,print:()=>ge.S0v,prod:()=>ge.WVs,raggedGather:()=>ge.$gW,raggedTensorToTensor:()=>ge.N89,rand:()=>ge.TN_,randomGamma:()=>ge.wzB,randomNormal:()=>ge.nGf,randomStandardNormal:()=>ge.ruB,randomUniform:()=>ge.LGj,range:()=>ge.w6H,real:()=>ge.kwC,reciprocal:()=>ge.M25,relu:()=>ge.UYe,relu6:()=>ge.btT,reshape:()=>ge.XLQ,reverse:()=>ge.GYS,reverse1d:()=>ge.SDf,reverse2d:()=>ge.diP,reverse3d:()=>ge.sx7,reverse4d:()=>ge.mG2,rfft:()=>ge.QEs,round:()=>ge.NMM,rsqrt:()=>ge.bp0,scalar:()=>ge.iD$,scatterND:()=>ge.snQ,searchSorted:()=>ge.zcT,selu:()=>ge.U8D,separableConv2d:()=>ge.U_I,setdiff1dAsync:()=>ge.ODp,sigmoid:()=>ge.XD2,sign:()=>ge.Xxe,signal:()=>ge.tdS,sin:()=>ge.O$l,sinh:()=>ge.R_K,slice:()=>ge.tPi,slice1d:()=>ge.jZU,slice2d:()=>ge.SmN,slice3d:()=>ge.CnO,slice4d:()=>ge.p0P,softmax:()=>ge.XAC,softplus:()=>ge.Wvh,spaceToBatchND:()=>ge.fBT,sparse:()=>ge.rVs,sparseToDense:()=>ge.ers,spectral:()=>ge.uN7,split:()=>ge.Vl2,sqrt:()=>ge._b3,square:()=>ge.h62,squaredDifference:()=>ge.$i,squeeze:()=>ge.L9e,stack:()=>ge.knu,step:()=>ge.Nbs,stridedSlice:()=>ge.NXj,string:()=>ge.Z_8,sub:()=>ge.luU,sum:()=>ge.Smz,tan:()=>ge.ORZ,tanh:()=>ge.AEp,tensor:()=>ge.XeE,tensor1d:()=>ge.RRF,tensor2d:()=>ge.odF,tensor3d:()=>ge.wOQ,tensor4d:()=>ge.yXz,tensor5d:()=>ge.Bfx,tensor6d:()=>ge.xZs,tile:()=>ge.Gg6,topk:()=>ge.hg7,transpose:()=>ge.p4s,truncatedNormal:()=>ge.Xu6,unique:()=>ge.Two,unsortedSegmentSum:()=>ge.pUJ,unstack:()=>ge.HHK,upperBound:()=>ge.GaM,variable:()=>ge.VD$,where:()=>ge.arb,whereAsync:()=>ge.itS,zeros:()=>ge.lls,zerosLike:()=>ge.P84});var _=n(3646);var S,k;(0,_.env)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(S||(S={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(k||(k={}));const T={};function E(e){return T[e]}function I(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,o=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd;if("tensor"===a.type)return A(t.inputNames[a.inputIndexStart],n,r,s);if("tensors"===a.type){return t.inputNames.slice(e,o).map((e=>A(e,n,r,s)))}const i=A(t.inputNames.slice(e)[0],n,r,s),u=i.dataSync();return"number"===a.type?u[0]:_.util.toNestedArray(i.shape,u)}const o=t.attrParams[e];return o&&o.value}function A(e,t,n,r){const[s,a]=$(e);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[O(s,e)]));return void 0!==o?t[O(s,o)][a]:void 0}function M(e,t){const[n,r,s]=$(e);return[O(n,t&&t.currentContextId),r,s]}function O(e,t){return t?`${e}-${t}`:e}function $(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function D(e,t,n){let r=I("pad",e,t,n);if("explicit"===r){r=I("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function B(e){return e.kept?e:(0,_.clone)(e)}const R=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],V=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],C=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],F=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],P=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],L=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],z=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],W=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],q=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],U=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],G=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],H=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],j=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],K=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],X=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Q=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Y=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Z=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],J=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class ee{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[r,s,a,o,i,u,l,c,p,h,d,m,f,g,y,b,w,v,x].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],s=[],a=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let i=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const p=Object.keys(o);p.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=M(e),a=o[r];if(null!=a.outputs){const e=a.outputs.indexOf(s);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?p.forEach((e=>{const t=o[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=M(e),n=o[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=M(e),n=o[t];n&&(n.signatureKey=l[e],i.push(n))})):i=r;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:o,inputs:i,outputs:u,weights:s,placeholders:r,signature:t,functions:h};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=E(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=ne(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ne(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=he(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=he(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=se(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=se(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=pe(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=pe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=re(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=re(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=me(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=me(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=ce(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ce(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=de(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=de(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=ie(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ie(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=ue(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ue(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=oe(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=M(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ae(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[s,,a]=M(e),o=r[s];if(null!=o.outputs){const e=o.outputs.indexOf(a);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(o),o.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=M(o[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))}));const i=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function te(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,_.env)().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function ne(e,t,n,r=!1){const s=e[t];return null!=s?te(s.s,r):n}function re(e,t,n){const r=e[t];return r?r.b:n}function se(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function ae(e){switch("string"==typeof e&&(e=S[e]),e){case S.DT_FLOAT:case S.DT_HALF:return"float32";case S.DT_INT32:case S.DT_INT64:case S.DT_INT8:case S.DT_UINT8:return"int32";case S.DT_BOOL:return"bool";case S.DT_DOUBLE:return"float32";case S.DT_STRING:return"string";default:return null}}function oe(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function ie(e,t,n){const r=e[t];return r&&r.type?ae(r.type):n}function ue(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>ae(e))):n}function le(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function ce(e,t,n){const r=e[t];return r&&r.shape?le(r.shape):n}function pe(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function he(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>te(e,r))):n}function de(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>le(e))):n}function me(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class fe{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return A(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return A(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return se(this.node.rawAttrs,e,t);if(null!=n.s)return ne(this.node.rawAttrs,e,t);if(null!=n.b)return re(this.node.rawAttrs,e,t);if(null!=n.shape)return ce(this.node.rawAttrs,e,t);if(null!=n.type)return ie(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return pe(this.node.rawAttrs,e,t);if(null!=n.list.s)return he(this.node.rawAttrs,e,t);if(null!=n.list.shape)return de(this.node.rawAttrs,e,t);if(null!=n.list.b)return me(this.node.rawAttrs,e,t);if(null!=n.list.type)return ue(this.node.rawAttrs,e,t)}return t}}var ge=n(2930);function ye(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){_.util.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const s=e[r],a=t[r];_.util.assert(s<0||a<0||s===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function be(e){return"number"!=typeof e&&!e.some((e=>e<0))}function we(e,t,n){let r=ve(e,n);const s=!be(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach((e=>{r=ve(e.shape,r)})),!be(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function ve(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}class xe{constructor(e,t,n,r,s,a,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=(0,_.scalar)(0),(0,_.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),ye(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,_.keep)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,_.tensor)([],[0].concat(this.elementShape));const n=this.readMany(e);return ye(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,_.stack)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,_.tensor)([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return ye(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,_.concat)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,_.unstack)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];(0,_.tidy)((()=>{t=(0,_.reshape)(t,[1,n,s]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:r[n-1],0],i=[1,e[n],s];a[n]=(0,_.reshape)((0,_.slice)(t,o,i),this.elementShape)}return a}));const o=[];for(let t=0;t<e.length;t++)o[t]=t;this.writeMany(o,a)}}class Ne{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);ye(t,e.shape,"TensorList shape mismatch: "),(0,_.keep)(e)})),this.idTensor=(0,_.scalar)(0),this.maxNumElements=r,(0,_.keep)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Ne([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);ye(e,this.elementShape,"TensorList shape mismatch: ");const r=we(this.elementShape,this.tensors,e);return(0,_.tidy)((()=>{const e=this.tensors.map((e=>(0,_.reshape)(e,r)));return(0,_.stack)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=we(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,ye(r.shape,e,"TensorList shape mismatch: "),(0,_.reshape)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(ye(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,_.keep)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Ne([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);ye(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=we(this.elementShape,this.tensors,t);return(0,_.reshape)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);ye(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,_.keep)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);ye(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=we(this.elementShape,this.tensors,n);return 0===e.length?(0,_.tensor)([],[0].concat(r)):(0,_.tidy)((()=>{const t=e.map((e=>(0,_.reshape)(this.tensors[e],r)));return(0,_.stack)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);ye(this.elementShape,t,"TensorList shape mismatch: ");const n=we(this.elementShape,this.tensors,t);return 0===this.size()?(0,_.tensor)([],[0].concat(n)):(0,_.tidy)((()=>{const e=this.tensors.map((e=>(0,_.reshape)(e,n)));return(0,_.concat)(e,0)}))}}const _e=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=I("thenBranch",e,t,n),s=I("elseBranch",e,t,n),a=I("cond",e,t,n),o=I("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=I("body",e,t,n),s=I("cond",e,t,n),a=I("args",e,t,n),o=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map((e=>e.id));let u=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let l=a;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await a[0].data(),a.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[B(I("pred",e,t,n))];case"Switch":{const r=I("pred",e,t,n);let s=I("data",e,t,n);return s.kept||(s=B(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==A(e,t,n)));if(r){return[B(A(r,t,n))]}return}case"Enter":{const r=I("frameName",e,t,n),s=I("tensor",e,t,n);return n.enterFrame(r),[B(s)]}case"Exit":{const r=I("tensor",e,t,n);return n.exitFrame(),[B(r)]}case"NextIteration":{const r=I("tensor",e,t,n);return n.nextIteration(),[B(r)]}case"TensorArrayV3":{const r=I("size",e,t,n),s=I("dtype",e,t,n),a=I("elementShape",e,t,n),o=I("dynamicSize",e,t,n),i=I("clearAfterRead",e,t,n),u=I("identicalElementShapes",e,t,n),l=I("name",e,t,n),c=new xe(l,s,r,a,u,o,i);return n.addTensorArray(c),[c.idTensor,(0,_.scalar)(1)]}case"TensorArrayWriteV3":{const r=I("tensorArrayId",e,t,n),s=I("index",e,t,n),a=I("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(s,a),[o.idTensor]}case"TensorArrayReadV3":{const r=I("tensorArrayId",e,t,n),s=I("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=I("tensorArrayId",e,t,n),s=I("indices",e,t,n),a=I("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=I("tensorArrayId",e,t,n),s=I("indices",e,t,n),a=I("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(s,a),[o.idTensor]}case"TensorArrayConcatV3":{const r=I("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=I("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=I("tensorArrayId",e,t,n),s=I("tensor",e,t,n),a=I("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(a,s),[o.idTensor]}case"TensorArraySizeV3":{const r=I("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return[(0,_.scalar)(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=I("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=I("tensorListId",e,t,n),s=I("index",e,t,n),a=I("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(s,a),[o.idTensor]}case"TensorListGetItem":{const r=I("tensorListId",e,t,n),s=I("index",e,t,n),a=I("elementShape",e,t,n),o=I("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=I("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new Ne([],n,e.dtype,r),o=(0,_.unstack)(e,0);return t.forEach(((e,t)=>{a.setItem(e,o[t])})),a}(I("tensor",e,t,n),r,I("elementShape",e,t,n),I("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=I("elementShape",e,t,n),s=I("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=I(a,e,t,n),i=function(e,t,n,r){return new Ne([],e,t,r)}(r,s,0,"TensorListReserve"===e.op?-1:o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=I("tensorListId",e,t,n),s=I("indices",e,t,n),a=I("elementShape",e,t,n),o=I("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,o,a)]}case"TensorListStack":{const r=I("tensorListId",e,t,n),s=I("elementShape",e,t,n),a=I("elementDType",e,t,n),o=I("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,o)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);ye(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=(0,_.unstack)(e);return new Ne(s,t,r)}(I("tensor",e,t,n),I("elementShape",e,t,n),I("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=I("tensorListId",e,t,n),s=n.getTensorList(r.id),a=I("dtype",e,t,n),o=I("elementShape",e,t,n);return[s.concat(a,o)]}case"TensorListPushBack":{const r=I("tensorListId",e,t,n),s=I("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=I("tensorListId",e,t,n),s=I("elementShape",e,t,n),a=I("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=I("tensor",e,t,n),s=I("elementShape",e,t,n),a=function(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=ve(e.shape.slice(1),n),o=0===r?0:e.size/r,i=(0,_.tidy)((()=>{const n=[];e=(0,_.reshape)(e,[1,r,o]);for(let r=0;r<t.length;++r){const i=[0,0===r?0:s[r-1],0],u=[1,t[r],o];n[r]=(0,_.reshape)((0,_.slice)(e,i,u),a)}return e.dispose(),n})),u=new Ne([],n,e.dtype,t.length);for(let e=0;e<i.length;e++)u.setItem(e,i[e]);return u}(r,I("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=I("tensorListId",e,t,n),s=n.getTensorList(r.id);return[(0,_.scalar)(s.size(),"int32")]}case"TensorListResize":{const r=I("tensorListId",e,t,n),s=I("size",e,t,n),a=n.getTensorList(r.id).resize(s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Se(e,t,n){const[r,s]=I("fusedOps",e,t,n),a="biasadd"===r,o=!a,i="prelu"===s,u="fusedbatchnorm"===r,l=I("numArgs",e,t,n);if(a){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=I("strides",e,t,n),p=D(e,t,n),h=I("dataFormat",e,t,n).toUpperCase(),d=I("dilations",e,t,n);let[m,f]=I("args",e,t,n);o&&(f=m,m=void 0);return{stride:c,pad:p,dataFormat:h,dilations:d,biasArg:m,preluArg:f,activationFunc:s,leakyreluAlpha:I("leakyreluAlpha",e,t,n)}}function ke(e,t,n){return{boxes:I("boxes",e,t,n),scores:I("scores",e,t,n),maxOutputSize:I("maxOutputSize",e,t,n),iouThreshold:I("iouThreshold",e,t,n),scoreThreshold:I("scoreThreshold",e,t,n),softNmsSigma:I("softNmsSigma",e,t,n)}}var Te=n(6461);class Ee{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,_.scalar)(0),this.tensorMap=new Map,(0,_.keep)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Te.i(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,_.tidy)((()=>{const e=(0,_.unstack)(t),r=n.length,s=e.length;_.util.assert(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];(0,_.keep)(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,_.tidy)((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return(0,_.stack)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function Ie(e,t,n,r,s=_.tidy){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(I("a",e,t,n),I("b",e,t,n))];case"AddN":return[r.addN(I("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(I("a",e,t,n),I("b",e,t,n))];case"Mul":return[r.mul(I("a",e,t,n),I("b",e,t,n))];case"RealDiv":case"Div":return[r.div(I("a",e,t,n),I("b",e,t,n))];case"DivNoNan":return[r.divNoNan(I("a",e,t,n),I("b",e,t,n))];case"FloorDiv":return[r.floorDiv(I("a",e,t,n),I("b",e,t,n))];case"Sub":return[r.sub(I("a",e,t,n),I("b",e,t,n))];case"Minimum":return[r.minimum(I("a",e,t,n),I("b",e,t,n))];case"Maximum":return[r.maximum(I("a",e,t,n),I("b",e,t,n))];case"Pow":return[r.pow(I("a",e,t,n),I("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(I("x",e,t,n))];case"Acos":return[r.acos(I("x",e,t,n))];case"Acosh":return[r.acosh(I("x",e,t,n))];case"Asin":return[r.asin(I("x",e,t,n))];case"Asinh":return[r.asinh(I("x",e,t,n))];case"Atan":return[r.atan(I("x",e,t,n))];case"Atan2":return[r.atan2(I("x",e,t,n),I("y",e,t,n))];case"Atanh":return[r.atanh(I("x",e,t,n))];case"Ceil":return[r.ceil(I("x",e,t,n))];case"Complex":return[r.complex(I("real",e,t,n),I("imag",e,t,n))];case"Cos":return[r.cos(I("x",e,t,n))];case"Cosh":return[r.cosh(I("x",e,t,n))];case"Elu":return[r.elu(I("x",e,t,n))];case"Erf":return[r.erf(I("x",e,t,n))];case"Exp":return[r.exp(I("x",e,t,n))];case"Expm1":return[r.expm1(I("x",e,t,n))];case"Floor":return[r.floor(I("x",e,t,n))];case"Log":return[r.log(I("x",e,t,n))];case"Log1p":return[r.log1p(I("x",e,t,n))];case"Imag":return[r.imag(I("x",e,t,n))];case"Neg":return[r.neg(I("x",e,t,n))];case"Reciprocal":return[r.reciprocal(I("x",e,t,n))];case"Real":return[r.real(I("x",e,t,n))];case"Relu":return[r.relu(I("x",e,t,n))];case"Round":return[r.round(I("x",e,t,n))];case"Selu":return[r.selu(I("x",e,t,n))];case"Sigmoid":return[r.sigmoid(I("x",e,t,n))];case"Sin":return[r.sin(I("x",e,t,n))];case"Sign":return[r.sign(I("x",e,t,n))];case"Sinh":return[r.sinh(I("x",e,t,n))];case"Softplus":return[r.softplus(I("x",e,t,n))];case"Sqrt":return[r.sqrt(I("x",e,t,n))];case"Square":return[r.square(I("x",e,t,n))];case"Tanh":return[r.tanh(I("x",e,t,n))];case"Tan":return[r.tan(I("x",e,t,n))];case"ClipByValue":return[r.clipByValue(I("x",e,t,n),I("clipValueMin",e,t,n),I("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(I("x",e,t,n))];case"Rsqrt":return[r.rsqrt(A(e.inputNames[0],t,n))];case"Prod":return[r.prod(I("x",e,t,n),I("axes",e,t,n))];case"LeakyRelu":return[r.leakyRelu(I("x",e,t,n),I("alpha",e,t,n))];case"Prelu":return[r.prelu(I("x",e,t,n),I("alpha",e,t,n))];case"IsNan":return[r.isNaN(A(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return _e(e,t,n);case"convolution":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"Conv1D":{const s=I("stride",e,t,n),a=I("pad",e,t,n),o=I("dataFormat",e,t,n).toUpperCase(),i=I("dilation",e,t,n);return[r.conv1d(I("x",e,t,n),I("filter",e,t,n),s,a,o,i)]}case"Conv2D":{const s=I("strides",e,t,n),a=D(e,t,n),o=I("dataFormat",e,t,n).toUpperCase(),i=I("dilations",e,t,n);return[r.conv2d(I("x",e,t,n),I("filter",e,t,n),[s[1],s[2]],a,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:s,pad:a,dataFormat:o,dilations:i,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:p}=Se(e,t,n);return[r.fused.conv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:o,dilations:[i[1],i[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:a,dataFormat:o,dilations:i,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:p}=Se(e,t,n);return[r.fused.depthwiseConv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:o,dilations:[i[1],i[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=I("outputShape",e,t,n),a=I("strides",e,t,n),o=D(e,t,n);return[r.conv2dTranspose(I("x",e,t,n),I("filter",e,t,n),s,[a[1],a[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=I("strides",e,t,n),a=D(e,t,n),o=I("dilations",e,t,n),i=I("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(I("input",e,t,n),I("filter",e,t,n),[s[1],s[2]],a,i,[o[1],o[2]])]}case"Conv3D":{const s=I("strides",e,t,n),a=I("pad",e,t,n),o=I("dataFormat",e,t,n).toUpperCase(),i=I("dilations",e,t,n);return[r.conv3d(I("x",e,t,n),I("filter",e,t,n),[s[1],s[2],s[3]],a,o,[i[1],i[2],i[3]])]}case"AvgPool":{const s=I("strides",e,t,n),a=I("pad",e,t,n),o=I("kernelSize",e,t,n);return[r.avgPool(I("x",e,t,n),[o[1],o[2]],[s[1],s[2]],a)]}case"MaxPool":{const s=I("strides",e,t,n),a=I("pad",e,t,n),o=I("kernelSize",e,t,n);return[r.maxPool(I("x",e,t,n),[o[1],o[2]],[s[1],s[2]],a)]}case"MaxPoolWithArgmax":{const s=I("strides",e,t,n),a=I("pad",e,t,n),o=I("kernelSize",e,t,n),i=I("includeBatchInIndex",e,t,n),{result:u,indexes:l}=r.maxPoolWithArgmax(I("x",e,t,n),[o[1],o[2]],[s[1],s[2]],a,i);return[u,l]}case"AvgPool3D":{const s=I("strides",e,t,n),a=I("pad",e,t,n),o=I("kernelSize",e,t,n);return[r.avgPool3d(I("x",e,t,n),[o[1],o[2],o[3]],[s[1],s[2],s[3]],a)]}case"MaxPool3D":{const s=I("strides",e,t,n),a=I("pad",e,t,n),o=I("kernelSize",e,t,n);return[r.maxPool3d(I("x",e,t,n),[o[1],o[2],o[3]],[s[1],s[2],s[3]],a)]}case"Dilation2D":{const s=I("strides",e,t,n),a=I("pad",e,t,n),o=I("dilations",e,t,n),i=s[1],u=s[2],l=o[1],c=o[2];return[r.dilation2d(I("x",e,t,n),I("filter",e,t,n),[i,u],a,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"Fill":{const s=I("shape",e,t,n),a=I("dtype",e,t,n),o=I("value",e,t,n);return[r.fill(s,o,a)]}case"LinSpace":{const s=I("start",e,t,n),a=I("stop",e,t,n),o=I("num",e,t,n);return[r.linspace(s,a,o)]}case"Multinomial":{const s=I("logits",e,t,n),a=I("numSamples",e,t,n),o=I("seed",e,t,n);return[r.multinomial(s,a,o)]}case"OneHot":{const s=I("indices",e,t,n),a=I("depth",e,t,n),o=I("onValue",e,t,n),i=I("offValue",e,t,n),u=I("dtype",e,t,n);return[r.oneHot(s,a,o,i,u)]}case"Ones":return[r.ones(I("shape",e,t,n),I("dtype",e,t,n))];case"OnesLike":return[r.onesLike(I("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(I("shape",e,t,n),I("dtype",e,t,n),I("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(I("shape",e,t,n),I("minval",e,t,n),I("maxval",e,t,n),I("dtype",e,t,n))];case"Range":{const s=I("start",e,t,n),a=I("stop",e,t,n),o=I("step",e,t,n);return[r.range(s,a,o,I("dtype",e,t,n))]}case"TruncatedNormal":{const s=I("shape",e,t,n),a=I("mean",e,t,n),o=I("stdDev",e,t,n),i=I("seed",e,t,n);return[r.truncatedNormal(s,a,o,I("dtype",e,t,n),i)]}case"Zeros":return[r.zeros(I("shape",e,t,n),I("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,r,s=N)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=ke(e,t,n),c=await s.image.nonMaxSuppressionWithScoreAsync(r,a,o,i,u,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=ke(e,t,n),l=I("padToMaxOutputSize",e,t,n),c=await s.image.nonMaxSuppressionPaddedAsync(r,a,o,i,u,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=ke(e,t,n);return[await s.image.nonMaxSuppressionAsync(r,a,o,i,u)]}case"Where":{const r=s.cast(I("condition",e,t,n),"bool"),a=[await s.whereAsync(r)];return r.dispose(),a}case"ListDiff":return s.setdiff1dAsync(I("x",e,t,n),I("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"LowerBound":{const s=I("sortedSequence",e,t,n),a=I("values",e,t,n);return[r.lowerBound(s,a)]}case"TopKV2":{const s=I("x",e,t,n),a=I("k",e,t,n),o=I("sorted",e,t,n),i=r.topk(s,a,o);return[i.values,i.indices]}case"UpperBound":{const s=I("sortedSequence",e,t,n),a=I("values",e,t,n);return[r.upperBound(s,a)]}case"Unique":{const s=I("x",e,t,n),a=r.unique(s);return[a.values,a.indices]}case"UniqueV2":{const s=I("x",e,t,n),a=I("axis",e,t,n),o=r.unique(s,a);return[o.values,o.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"ResizeBilinear":{const s=I("images",e,t,n),a=I("size",e,t,n),o=I("alignCorners",e,t,n),i=I("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(s,[a[0],a[1]],o,i)]}case"ResizeNearestNeighbor":{const s=I("images",e,t,n),a=I("size",e,t,n),o=I("alignCorners",e,t,n),i=I("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(s,[a[0],a[1]],o,i)]}case"CropAndResize":{const s=I("image",e,t,n),a=I("boxes",e,t,n),o=I("boxInd",e,t,n),i=I("cropSize",e,t,n),u=I("method",e,t,n),l=I("extrapolationValue",e,t,n);return[r.image.cropAndResize(s,a,o,i,u,l)]}case"ImageProjectiveTransformV3":{const s=I("images",e,t,n),a=I("transforms",e,t,n),o=I("outputShape",e,t,n),i=I("fillValue",e,t,n),u=I("interpolation",e,t,n),l=I("fillMode",e,t,n);return[r.image.transform(s,a,u.toLowerCase(),l.toLowerCase(),i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=I("default",e,t,n);return[A(e.name,t,n)||s];case"Placeholder":return[A(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[B(I("x",e,t,n))];case"IdentityN":return I("x",e,t,n).map((e=>B(e)));case"Shape":return[r.tensor1d(I("x",e,t,n).shape,"int32")];case"ShapeN":return I("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(I("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(I("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=I("x",e,t,n),o=I("data",e,t,n),i=I("message",e,t,n),u=I("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,u));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"Equal":return[r.equal(I("a",e,t,n),I("b",e,t,n))];case"NotEqual":return[r.notEqual(I("a",e,t,n),I("b",e,t,n))];case"Greater":return[r.greater(I("a",e,t,n),I("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(I("a",e,t,n),I("b",e,t,n))];case"Less":return[r.less(I("a",e,t,n),I("b",e,t,n))];case"LessEqual":return[r.lessEqual(I("a",e,t,n),I("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(I("a",e,t,n),I("b",e,t,n))];case"LogicalNot":return[r.logicalNot(I("a",e,t,n))];case"LogicalOr":return[r.logicalOr(I("a",e,t,n),I("b",e,t,n))];case"Select":case"SelectV2":return[r.where(I("condition",e,t,n),I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(I("a",e,t,n),I("b",e,t,n),I("transposeA",e,t,n),I("transposeB",e,t,n))];case"Einsum":return[r.einsum(I("equation",e,t,n),...I("tensors",e,t,n))];case"Transpose":return[r.transpose(I("x",e,t,n),I("perm",e,t,n))];case"_FusedMatMul":const[s,a]=I("fusedOps",e,t,n),o="biasadd"===s,i="prelu"===a,u=I("numArgs",e,t,n),l=I("leakyreluAlpha",e,t,n);if(o){if(i&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,p]=I("args",e,t,n);return[r.fused.matMul({a:I("a",e,t,n),b:I("b",e,t,n),transposeA:I("transposeA",e,t,n),transposeB:I("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:p,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(I("x",e,t,n),I("axis",e,t,n),I("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(I("x",e,t,n),I("mean",e,t,n),I("variance",e,t,n),I("offset",e,t,n),I("scale",e,t,n),I("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(I("x",e,t,n),I("radius",e,t,n),I("bias",e,t,n),I("alpha",e,t,n),I("beta",e,t,n))];case"Softmax":return[r.softmax(I("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(I("x",e,t,n))];case"SparseToDense":return[r.sparseToDense(I("sparseIndices",e,t,n),I("outputShape",e,t,n),I("sparseValues",e,t,n),I("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"Max":{const s=I("axis",e,t,n),a=I("keepDims",e,t,n);return[r.max(I("x",e,t,n),s,a)]}case"Mean":{const s=I("axis",e,t,n),a=I("keepDims",e,t,n);return[r.mean(I("x",e,t,n),s,a)]}case"Min":{const s=I("axis",e,t,n),a=I("keepDims",e,t,n);return[r.min(I("x",e,t,n),s,a)]}case"Sum":{const s=I("axis",e,t,n),a=I("keepDims",e,t,n);return[r.sum(I("x",e,t,n),s,a)]}case"All":{const s=I("axis",e,t,n),a=I("keepDims",e,t,n);return[r.all(I("x",e,t,n),s,a)]}case"Any":{const s=I("axis",e,t,n),a=I("keepDims",e,t,n);return[r.any(I("x",e,t,n),s,a)]}case"ArgMax":{const s=I("axis",e,t,n);return[r.argMax(I("x",e,t,n),s)]}case"ArgMin":{const s=I("axis",e,t,n);return[r.argMin(I("x",e,t,n),s)]}case"Prod":{const s=I("axis",e,t,n),a=I("keepDims",e,t,n);return[r.prod(I("x",e,t,n),s,a)]}case"Cumprod":{const s=I("axis",e,t,n),a=I("exclusive",e,t,n),o=I("reverse",e,t,n);return[r.cumprod(I("x",e,t,n),s,a,o)]}case"Cumsum":{const s=I("axis",e,t,n),a=I("exclusive",e,t,n),o=I("reverse",e,t,n);return[r.cumsum(I("x",e,t,n),s,a,o)]}case"Bincount":const s=I("x",e,t,n),a=I("weights",e,t,n),o=I("size",e,t,n);return[r.bincount(s,a,o)];case"DenseBincount":{const s=I("x",e,t,n),a=I("weights",e,t,n),o=I("size",e,t,n),i=I("binaryOutput",e,t,n);return[r.denseBincount(s,a,o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"ConcatV2":case"Concat":{const s=I("n",e,t,n),a=I("axis",e,t,n);let o=I("tensors",e,t,n);return o=o.slice(0,s),[r.concat(o,a)]}case"Gather":{const s=I("x",e,t,n),a=I("indices",e,t,n);return[r.gather(s,r.cast(a,"int32"),0)]}case"GatherV2":{const s=I("axis",e,t,n),a=I("batchDims",e,t,n),o=I("x",e,t,n),i=I("indices",e,t,n);return[r.gather(o,r.cast(i,"int32"),s,a)]}case"Reverse":{const s=I("dims",e,t,n),a=[];for(let e=0;e<s.length;e++)s[e]&&a.push(e);const o=I("x",e,t,n);return[r.reverse(o,a)]}case"ReverseV2":{const s=I("axis",e,t,n),a=I("x",e,t,n);return[r.reverse(a,s)]}case"Slice":{const s=I("begin",e,t,n),a=I("size",e,t,n);return[r.slice(I("x",e,t,n),s,a)]}case"StridedSlice":{const s=I("begin",e,t,n),a=I("end",e,t,n),o=I("strides",e,t,n),i=I("beginMask",e,t,n),u=I("endMask",e,t,n),l=I("ellipsisMask",e,t,n),c=I("newAxisMask",e,t,n),p=I("shrinkAxisMask",e,t,n),h=I("x",e,t,n);return[r.stridedSlice(h,s,a,o,i,u,l,c,p)]}case"Pack":return(0,_.tidy)((()=>{const s=I("axis",e,t,n),a=I("tensors",e,t,n),o=a[0].shape,i=r.squeeze(a[0]).shape,u=a.map((e=>{const t=_.util.arraysEqual(e.shape,o);if(!t&&!_.util.arraysEqual(r.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,o)}));return[r.stack(u,s)]}));case"Unpack":{const s=I("axis",e,t,n),a=I("tensor",e,t,n);return r.unstack(a,s)}case"Tile":{const s=I("reps",e,t,n);return[r.tile(I("x",e,t,n),s)]}case"Split":case"SplitV":{const s=I("axis",e,t,n),a=I("numOrSizeSplits",e,t,n),o=I("x",e,t,n);return r.split(o,a,s)}case"ScatterNd":{const s=I("indices",e,t,n),a=I("values",e,t,n),o=I("shape",e,t,n);return[r.scatterND(s,a,o)]}case"GatherNd":{const s=I("x",e,t,n),a=I("indices",e,t,n);return[r.gatherND(s,a)]}case"SparseToDense":{const s=I("sparseIndices",e,t,n),a=I("outputShape",e,t,n),o=I("sparseValues",e,t,n),i=I("defaultValue",e,t,n);return[r.sparseToDense(s,o,a,o.dtype===i.dtype?i:r.cast(i,o.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:a,emptyRowIndicator:o,reverseIndexMap:i}=r.sparse.sparseFillEmptyRows(I("indices",e,t,n),I("values",e,t,n),I("denseShape",e,t,n),I("defaultValue",e,t,n));return[s,a,o,i]}case"SparseReshape":{const{outputIndices:s,outputShape:a}=r.sparse.sparseReshape(I("inputIndices",e,t,n),I("inputShape",e,t,n),I("newShape",e,t,n));return[s,a]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(I("data",e,t,n),I("indices",e,t,n),I("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(I("data",e,t,n),I("indices",e,t,n),I("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"FFT":return[r.fft(I("x",e,t,n))];case"IFFT":return[r.ifft(I("x",e,t,n))];case"RFFT":return[r.rfft(I("x",e,t,n))];case"IRFFT":return[r.irfft(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"StringNGrams":{const{nGrams:s,nGramsSplits:a}=r.string.stringNGrams(I("data",e,t,n),I("dataSplits",e,t,n),I("separator",e,t,n),I("nGramWidths",e,t,n),I("leftPad",e,t,n),I("rightPad",e,t,n),I("padWidth",e,t,n),I("preserveShortSequences",e,t,n));return[s,a]}case"StringSplit":{const{indices:s,values:a,shape:o}=r.string.stringSplit(I("input",e,t,n),I("delimiter",e,t,n),I("skipEmpty",e,t,n));return[s,a,o]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(I("input",e,t,n),I("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return s((()=>((e,t,n,r=N)=>{switch(e.op){case"Cast":return[r.cast(I("x",e,t,n),I("dtype",e,t,n))];case"ExpandDims":{const s=I("axis",e,t,n);return[r.expandDims(I("x",e,t,n),s)]}case"Squeeze":{const s=I("axis",e,t,n);return[r.squeeze(I("x",e,t,n),s)]}case"Reshape":return[r.reshape(I("x",e,t,n),I("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(I("x",e,t,n),I("padding",e,t,n),I("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(I("x",e,t,n),I("padding",e,t,n),I("constantValue",e,t,n))];case"SpaceToBatchND":{const s=I("blockShape",e,t,n),a=I("paddings",e,t,n);return[r.spaceToBatchND(I("x",e,t,n),s,a)]}case"BatchToSpaceND":{const s=I("blockShape",e,t,n),a=I("crops",e,t,n);return[r.batchToSpaceND(I("x",e,t,n),s,a)]}case"DepthToSpace":{const s=I("blockSize",e,t,n),a=I("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(I("x",e,t,n),s,a)]}case"BroadcastTo":return[r.broadcastTo(I("x",e,t,n),I("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(I("s0",e,t,n),I("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=I("keyDType",e,t,n),a=I("valueDType",e,t,n),o=new Ee(s,a);return r.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{const s=I("tableHandle",e,t,n,r),a=I("keys",e,t,n),o=I("values",e,t,n),i=r.getHashTableById(s.id);return[await i.import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{const s=I("tableHandle",e,t,n,r),a=I("keys",e,t,n),o=I("defaultValue",e,t,n),i=r.getHashTableById(s.id);return[await i.find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=I("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=E(e.op);if(a&&a.customExecutor)return a.customExecutor(new fe(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return _.util.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}class Ae{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Me(e,t,n,r){const s=new Set,a=[];let o=null,i=null;const u=new Set,l=Object.keys(e).map((e=>$(e)[0]));let c=[];null!=r&&(c=r.map((e=>$(e.name)[0])));const p=[...t];for(;p.length>0;){const e=p.pop();(Be(e)||Re(e)||Ve(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&(-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),p.push(e))})):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:o,syncInputs:i}}const Oe=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],$e=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],De=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Be(e){return Oe.indexOf(e.op)>=0}function Re(e){return $e.indexOf(e.op)>=0}function Ve(e){return De.indexOf(e.op)>=0}class Ce{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Ce(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=Me(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:s}=n,a=[],o=Object.keys(s).map((e=>$(e)[0])).map((t=>e.nodes[t])),i=e.initNodes;o.forEach((e=>{r.has(e.name)&&a.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&a.push(e)})),null!=i&&i.forEach((e=>{r.has(e.name)&&a.push(e)}));const u=new Set,l=[];for(;a.length>0;){const e=a.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&a.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[$(e)[0]])),s=t.map((e=>$(e)[0]));let a=s.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===a.length&&(a=this._outputs);const o=this.getCompilationKey(r,a);let i=this.compiledMap.get(o);null==i&&(i=this.compile(e,a),this.compiledMap.set(o,i));const u={},l={};return(0,_.tidy)((()=>{const n=new Ae(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,s]=$(t),a=[];a[s]=e[t],r[n]=a}));const a=this.getFrozenTensorIds(r),o={};for(let e=0;e<i.length;e++){const t=i[e];if(!r[t.name]){const e=Ie(t,r,n,this._resourceManager);if(_.util.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,a,s,o)}}return null==this.parent&&n.dispose(a),t.map((e=>A(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,o){"control"!==t.category&&-1===a.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(o[e.id]=(o[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const a=function(e,t,n){return t[O(e,n.currentContextId)]}(e.name,n,r);null!=a&&a.forEach((e=>{if(e&&!e.kept&&!s.has(e.id)){const n=o[e.id];if(1===n){if(this.keepTensorForDebug){const[n,s]=M(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][s]=e}else e.dispose();delete o[e.id]}else null!=n&&o[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=(0,_.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();const a=new Ae(this.weightMap,r,s,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);const o=t.map((e=>A(e,this.tensorsMap,a))),i=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...i,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&a.dispose(this.keepIds),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map((e=>this.graph.nodes[$(e)[0]])),o=n.map((e=>$(e)[0]));let i=o.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:p}=Me(e,i,this.weightMap,this._initNodes),h=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=$(t),s=[];s[r]=e[t],d[n]=s}));const m={},f=this.getFrozenTensorIds(d),g={};for(;h.length>0;){const e=this.processStack(a,h,t,d,g,f,o,m,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=i.filter((e=>!Be(e)&&!A(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${l}]. ${e}`)}return d}processStack(e,t,n,r,s,a,o,i,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&I("isConstant",e.node,r,n)&&([c]=M(e.node.name,n)),null==r[e.node.name]){const p=Ie(e.node,r,n,this._resourceManager);c||([c]=M(e.node.name,n));const h=n.currentContext;_.util.isPromise(p)?l.push(p.then((l=>(r[c]=l,n.currentContext=h,this.checkTensorForDisposal(c,e.node,r,n,a,o,i),this.processChildNodes(e.node,t,n,r,s,u),l)))):(r[c]=p,this.checkTensorForDisposal(c,e.node,r,n,a,o,i),this.processChildNodes(e.node,t,n,r,s,u))}else this.processChildNodes(e.node,t,n,r,s,u)}return l}processChildNodes(e,t,n,r,s,a){e.children.forEach((e=>{const[o]=M(e.name,n);!s[o]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!A(e,r,n)))&&(s[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!A(e,r,n)))&&(s[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=$(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));_.util.assert(t,(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&_.util.assert(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=$(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]){return this._signature.outputs[e].name}return e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=$(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Fe{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const Pe="?tfjs-format=file",Le="model.json";class ze{constructor(e,t={},n=_.io){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new Fe}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return _.util.isPromise(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Ce(ee.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=ee.Instance.transformGraph(e.modelInitializer);this.initializer=new Ce(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){const n=this.execute(e,this.outputNodes);if(this.structuredOutputKeys){const e=n instanceof _.Tensor?[n]:n,t={};return e.forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return n}normalizeInputs(e){if(!(e instanceof _.Tensor||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function We(e,t={},n=_.io){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){e.endsWith("/")||(e+="/");return`${e}${Le}${Pe}`}(e));const r=new ze(e,t,n);return await r.load(),r}var qe=function(e,t){return(qe=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function Ue(e,t){function n(){this.constructor=e}qe(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var Ge=function(){return(Ge=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};function He(e,t,n,r){return new(n||(n=Promise))((function(s,a){function o(e){try{u(r.next(e))}catch(e){a(e)}}function i(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){e.done?s(e.value):new n((function(t){t(e.value)})).then(o,i)}u((r=r.apply(e,t||[])).next())}))}function je(e,t){var n,r,s,a,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function i(a){return function(i){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!(s=(s=o.trys).length>0&&s[s.length-1])&&(6===a[0]||2===a[0])){o=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){o.label=a[1];break}if(6===a[0]&&o.label<s[1]){o.label=s[1],s=a;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(a);break}s[2]&&o.ops.pop(),o.trys.pop();continue}a=t.call(e,o)}catch(e){a=[6,e],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,i])}}}var Ke=function(){function e(e,t){this.model=e,this.outputStride=t;var n=this.model.inputs[0].shape;_.util.assert(-1===n[1]&&-1===n[2],(function(){return"Input shape ["+n[1]+", "+n[2]+"] must both be equal to or -1"}))}return e.prototype.predict=function(e){var t=this;return(0,_.tidy)((function(){var n=t.preprocessInput((0,_.cast)(e,"float32")),r=(0,_.expandDims)(n,0),s=t.model.predict(r).map((function(e){return(0,_.squeeze)(e,[0])})),a=t.nameOutputResults(s);return{heatmapScores:(0,_.sigmoid)(a.heatmap),offsets:a.offsets,displacementFwd:a.displacementFwd,displacementBwd:a.displacementBwd}}))},e.prototype.dispose=function(){this.model.dispose()},e}(),Xe=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return Ue(t,e),t.prototype.preprocessInput=function(e){return(0,_.tidy)((function(){return(0,_.sub)((0,_.div)(e,127.5),1)}))},t.prototype.nameOutputResults=function(e){return{offsets:e[0],heatmap:e[1],displacementFwd:e[2],displacementBwd:e[3]}},t}(Ke);function Qe(e){return Math.floor(e/2)}var Ye=function(){function e(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return e.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},e.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},e.prototype.empty=function(){return-1===this.numberOfElements},e.prototype.size=function(){return this.numberOfElements+1},e.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},e.prototype.max=function(){return this.priorityQueue[0]},e.prototype.swim=function(e){for(;e>0&&this.less(Qe(e),e);)this.exchange(e,Qe(e)),e=Qe(e)},e.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},e.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},e.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},e.prototype.exchange=function(e,t){var n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n},e}();function Ze(e,t,n,r,s,a){for(var o=a.shape,i=o[0],u=o[1],l=!0,c=Math.max(n-s,0),p=Math.min(n+s+1,i),h=c;h<p;++h){for(var d=Math.max(r-s,0),m=Math.min(r+s+1,u),f=d;f<m;++f)if(a.get(h,f,e)>t){l=!1;break}if(!l)break}return l}var Je=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],et=Je.length,tt=Je.reduce((function(e,t,n){return e[t]=n,e}),{}),nt=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]],rt=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map((function(e){var t=e[0],n=e[1];return[tt[t],tt[n]]})),st=["left_face","right_face","right_upper_leg_front","right_lower_leg_back","right_upper_leg_back","left_lower_leg_front","left_upper_leg_front","left_upper_leg_back","left_lower_leg_back","right_feet","right_lower_leg_front","left_feet","torso_front","torso_back","right_upper_arm_front","right_upper_arm_back","right_lower_arm_back","left_lower_arm_front","left_upper_arm_front","left_upper_arm_back","left_lower_arm_back","right_hand","right_lower_arm_front","left_hand"];function at(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+et)}}function ot(e,t,n){var r=at(e.heatmapY,e.heatmapX,e.id,n),s=r.y,a=r.x;return{x:e.heatmapX*t+a,y:e.heatmapY*t+s}}function it(e,t,n){return e<t?t:e>n?n:e}function ut(e,t){return{x:e.x+t.x,y:e.y+t.y}}var lt=nt.map((function(e){var t=e[0],n=e[1];return[tt[t],tt[n]]})),ct=lt.map((function(e){return e[1]})),pt=lt.map((function(e){return e[0]}));function ht(e,t,n,r){return{y:it(Math.round(e.y/t),0,n-1),x:it(Math.round(e.x/t),0,r-1)}}function dt(e,t,n,r,s,a,o,i){void 0===i&&(i=2);for(var u=r.shape,l=u[0],c=u[1],p=function(e,t,n){var r=n.shape[2]/2;return{y:n.get(t.y,t.x,e),x:n.get(t.y,t.x,r+e)}}(e,ht(t.position,a,l,c),o),h=ut(t.position,p),d=0;d<i;d++){var m=ht(h,a,l,c),f=at(m.y,m.x,n,s);h=ut({x:m.x*a,y:m.y*a},{x:f.x,y:f.y})}var g=ht(h,a,l,c),y=r.get(g.y,g.x,n);return{position:h,part:Je[n],score:y}}function mt(e,t,n,r,s,a){var o=t.shape[2],i=ct.length,u=new Array(o),l=e.part,c=e.score,p=ot(l,r,n);u[l.id]={score:c,part:Je[l.id],position:p};for(var h=i-1;h>=0;--h){var d=ct[h],m=pt[h];u[d]&&!u[m]&&(u[m]=dt(h,u[d],m,t,n,r,a))}for(h=0;h<i;++h)d=pt[h],m=ct[h],u[d]&&!u[m]&&(u[m]=dt(h,u[d],m,t,n,r,s));return u}function ft(e,t,n,r){var s=n.x,a=n.y;return e.some((function(e){var n=e.keypoints[r].position;return function(e,t,n,r){var s=n-e,a=r-t;return s*s+a*a}(a,s,n.y,n.x)<=t}))}function gt(e,t,n){return n.reduce((function(n,r,s){var a=r.position,o=r.score;return ft(e,t,a,s)||(n+=o),n}),0)/n.length}var yt=1;function bt(e,t,n,r,s,a,o,i){void 0===o&&(o=.5),void 0===i&&(i=20);for(var u=[],l=function(e,t,n){for(var r=n.shape,s=r[0],a=r[1],o=r[2],i=new Ye(s*a*o,(function(e){return e.score})),u=0;u<s;++u)for(var l=0;l<a;++l)for(var c=0;c<o;++c){var p=n.get(u,l,c);p<e||Ze(c,p,u,l,t,n)&&i.enqueue({score:p,part:{heatmapY:u,heatmapX:l,id:c}})}return i}(o,yt,e),c=i*i;u.length<a&&!l.empty();){var p=l.dequeue();if(!ft(u,c,ot(p.part,s,t),p.part.id)){var h=mt(p,e,t,s,n,r),d=gt(u,c,h);u.push({keypoints:h,score:d})}}return u}function wt(e){var t=e.shape,n=t[0],r=t[1],s=t[2];return(0,_.tidy)((function(){var t=(0,_.reshape)(e,[n*r,s]),a=(0,_.argMax)(t,0),o=(0,_.expandDims)((0,_.div)(a,(0,_.scalar)(r,"int32")),1),i=(0,_.expandDims)(function(e,t){return(0,_.tidy)((function(){var n=(0,_.div)(e,(0,_.scalar)(t,"int32"));return(0,_.sub)(e,(0,_.mul)(n,(0,_.scalar)(t,"int32")))}))}(a,r),1);return(0,_.concat)([o,i],1)}))}function vt(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+et)}}function xt(e,t,n){return(0,_.tidy)((function(){var r=function(e,t){for(var n=[],r=0;r<et;r++){var s=vt(e.get(r,0).valueOf(),e.get(r,1).valueOf(),r,t),a=s.x,o=s.y;n.push(o),n.push(a)}return(0,_.tensor2d)(n,[et,2])}(e,n);return(0,_.add)((0,_.cast)((0,_.mul)(e.toTensor(),(0,_.scalar)(t,"int32")),"float32"),r)}))}function Nt(e,t,n){return He(this,void 0,void 0,(function(){var r,s,a,o,i,u,l,c,p,h;return je(this,(function(d){switch(d.label){case 0:return r=0,s=wt(e),[4,Promise.all([e.buffer(),t.buffer(),s.buffer()])];case 1:return a=d.sent(),o=a[0],i=a[1],u=a[2],[4,(l=xt(u,n,i)).buffer()];case 2:return c=d.sent(),p=Array.from(function(e,t){for(var n=t.shape[0],r=new Float32Array(n),s=0;s<n;s++){var a=t.get(s,0),o=t.get(s,1);r[s]=e.get(a,o,s)}return r}(o,u)),h=p.map((function(e,t){return r+=e,{position:{y:c.get(t,0),x:c.get(t,1)},part:Je[t],score:e}})),s.dispose(),l.dispose(),[2,{keypoints:h,score:r/h.length}]}}))}))}var _t="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",St="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";var kt=[-123.15,-115.9,-103.06],Tt=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return Ue(t,e),t.prototype.preprocessInput=function(e){return(0,_.add)(e,kt)},t.prototype.nameOutputResults=function(e){var t=e[0],n=e[1];return{offsets:e[2],heatmap:e[3],displacementFwd:t,displacementBwd:n}},t}(Ke);function Et(e,t){return rt.reduce((function(n,r){var s=r[0],a=r[1];return function(e,t,n){return e<n||t<n}(e[s].score,e[a].score,t)||n.push([e[s],e[a]]),n}),[])}var It=Number.NEGATIVE_INFINITY,At=Number.POSITIVE_INFINITY;function Mt(e){return e.reduce((function(e,t){var n=e.maxX,r=e.maxY,s=e.minX,a=e.minY,o=t.position,i=o.x,u=o.y;return{maxX:Math.max(n,i),maxY:Math.max(r,u),minX:Math.min(s,i),minY:Math.min(a,u)}}),{maxX:It,maxY:It,minX:At,minY:At})}function Ot(e){var t=Mt(e),n=t.minX,r=t.minY,s=t.maxX,a=t.maxY;return[{x:n,y:r},{x:s,y:r},{x:s,y:a},{x:n,y:a}]}function $t(e){return He(this,void 0,void 0,(function(){return je(this,(function(t){return[2,Promise.all(e.map((function(e){return e.buffer()})))]}))}))}function Dt(e,t,n,r,s){return void 0===r&&(r=0),void 0===s&&(s=0),{score:e.score,keypoints:e.keypoints.map((function(e){var a=e.score,o=e.part,i=e.position;return{score:a,part:o,position:{x:i.x*n+s,y:i.y*t+r}}}))}}function Bt(e,t){return Ft(e,t)?e:Math.floor(e/t)*t+1}function Rt(e){_.util.assert("number"==typeof e||"object"==typeof e,(function(){return"Invalid inputResolution "+e+". Should be a number or an object with width and height"})),"object"==typeof e&&(_.util.assert("number"==typeof e.width,(function(){return"inputResolution.width has a value of "+e.width+" which is invalid; it must be a number"})),_.util.assert("number"==typeof e.height,(function(){return"inputResolution.height has a value of "+e.height+" which is invalid; it must be a number"})))}function Vt(e,t){return Rt(e),"object"==typeof e?[Bt(e.height,t),Bt(e.width,t)]:[Bt(e,t),Bt(e,t)]}var Ct=[8,16,32];function Ft(e,t){return(e-1)%t==0}function Pt(e){return e instanceof _.Tensor?[e.shape[0],e.shape[1]]:[e.height,e.width]}function Lt(e,t){var n=t[0],r=t[1],s=Pt(e),a=s[0],o=s[1],i=r/n,u=[0,0,0,0],l=u[0],c=u[1],p=u[2],h=u[3];return o/a<i?(l=0,c=0,p=Math.round(.5*(i*a-o)),h=Math.round(.5*(i*a-o))):(l=Math.round(.5*(1/i*o-a)),c=Math.round(.5*(1/i*o-a)),p=0,h=0),{resized:(0,_.tidy)((function(){var t=function(e){return e instanceof _.Tensor?e:_.browser.fromPixels(e)}(e);return t=(0,_.pad3d)(t,[[l,c],[p,h],[0,0]]),_.image.resizeBilinear(t,[n,r])})),padding:{top:l,left:p,right:h,bottom:c}}}function zt(e,t,n,r,s){var a=t[0],o=t[1],i=n[0],u=n[1],l=function(e,t,n,r,s){return void 0===r&&(r=0),void 0===s&&(s=0),1===n&&1===t&&0===r&&0===s?e:e.map((function(e){return Dt(e,t,n,r,s)}))}(e,(a+r.top+r.bottom)/i,(o+r.left+r.right)/u,-r.top,-r.left);return s?function(e,t){return t<=0?e:e.map((function(e){return function(e,t){return{score:e.score,keypoints:e.keypoints.map((function(e){var n=e.score,r=e.part,s=e.position;return{score:n,part:r,position:{x:t-1-s.x,y:s.y}}}))}}(e,t)}))}(l,o):l}var Wt={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:257},qt=["MobileNetV1","ResNet50"],Ut={MobileNetV1:[8,16,32],ResNet50:[32,16]},Gt={MobileNetV1:[.5,.75,1],ResNet50:[1]},Ht=[1,2,4];var jt={flipHorizontal:!1},Kt={flipHorizontal:!1,maxDetections:5,scoreThreshold:.5,nmsRadius:20};var Xt=function(){function e(e,t){(function(e){_.util.assert("number"==typeof e,(function(){return"outputStride is not a number"})),_.util.assert(Ct.indexOf(e)>=0,(function(){return"outputStride of "+e+" is invalid. It must be either 8, 16, or 32"}))})(e.outputStride),function(e,t){_.util.assert("number"==typeof e[0]&&"number"==typeof e[1],(function(){return"both resolution values must be a number but had values "+e})),_.util.assert(Ft(e[0],t),(function(){return"height of "+e[0]+" is invalid for output stride "+t+"."})),_.util.assert(Ft(e[1],t),(function(){return"width of "+e[1]+" is invalid for output stride "+t+"."}))}(t,e.outputStride),this.baseModel=e,this.inputResolution=t}return e.prototype.estimateMultiplePoses=function(e,t){return void 0===t&&(t=Kt),He(this,void 0,void 0,(function(){var n,r,s,a,o,i,u,l,c,p,h,d,m,f,g,y,b,w,v,x,N;return je(this,(function(_){switch(_.label){case 0:return n=Ge({},Kt,t),function(e){var t=e.maxDetections,n=e.scoreThreshold,r=e.nmsRadius;if(t<=0)throw new Error("Invalid maxDetections "+t+". Should be > 0");if(n<0||n>1)throw new Error("Invalid scoreThreshold "+n+". Should be in range [0.0, 1.0]");if(r<=0)throw new Error("Invalid nmsRadius "+r+".")}(t),r=this.baseModel.outputStride,s=this.inputResolution,a=Pt(e),o=a[0],i=a[1],u=Lt(e,s),l=u.resized,c=u.padding,p=this.baseModel.predict(l),h=p.heatmapScores,d=p.offsets,m=p.displacementFwd,f=p.displacementBwd,[4,$t([h,d,m,f])];case 1:return g=_.sent(),y=g[0],b=g[1],w=g[2],v=g[3],[4,bt(y,b,w,v,r,n.maxDetections,n.scoreThreshold,n.nmsRadius)];case 2:return x=_.sent(),N=zt(x,[o,i],s,c,n.flipHorizontal),h.dispose(),d.dispose(),m.dispose(),f.dispose(),l.dispose(),[2,N]}}))}))},e.prototype.estimateSinglePose=function(e,t){return void 0===t&&(t=jt),He(this,void 0,void 0,(function(){var n,r,s,a,o,i,u,l,c,p,h,d,m,f,g,y;return je(this,(function(b){switch(b.label){case 0:return n=Ge({},jt,t),r=this.baseModel.outputStride,s=this.inputResolution,a=Pt(e),o=a[0],i=a[1],u=Lt(e,s),l=u.resized,c=u.padding,p=this.baseModel.predict(l),h=p.heatmapScores,d=p.offsets,m=p.displacementFwd,f=p.displacementBwd,[4,Nt(h,d,r)];case 1:return g=b.sent(),y=zt([g],[o,i],s,c,n.flipHorizontal),h.dispose(),d.dispose(),m.dispose(),f.dispose(),l.dispose(),[2,y[0]]}}))}))},e.prototype.estimatePoses=function(e,t){return He(this,void 0,void 0,(function(){return je(this,(function(n){switch(n.label){case 0:return"single-person"!==t.decodingMethod?[3,2]:[4,this.estimateSinglePose(e,t)];case 1:return[2,[n.sent()]];case 2:return[2,this.estimateMultiplePoses(e,t)]}}))}))},e.prototype.dispose=function(){this.baseModel.dispose()},e}();function Qt(e){return He(this,void 0,void 0,(function(){var t,n,r,s,a,o,i;return je(this,(function(u){switch(u.label){case 0:if(t=e.outputStride,n=e.quantBytes,r=e.multiplier,null==_)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return s=function(e,t,n){var r={1:"100",.75:"075",.5:"050"},s="model-stride"+e+".json";return 4===n?_t+"float/"+r[t]+"/"+s:_t+"quant"+n+"/"+r[t]+"/"+s}(t,r,n),[4,We(e.modelUrl||s)];case 1:return a=u.sent(),o=new Xe(a,t),i=Vt(e.inputResolution,o.outputStride),[2,new Xt(o,i)]}}))}))}function Yt(e){return He(this,void 0,void 0,(function(){var t,n,r,s,a,o;return je(this,(function(i){switch(i.label){case 0:if(t=e.outputStride,n=e.quantBytes,null==_)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return r=function(e,t){var n="model-stride"+e+".json";return 4===t?St+"float/"+n:St+"quant"+t+"/"+n}(t,n),[4,We(e.modelUrl||r)];case 1:return s=i.sent(),a=new Tt(s,t),o=Vt(e.inputResolution,a.outputStride),[2,new Xt(a,o)]}}))}))}function Zt(e){return void 0===e&&(e=Wt),He(this,void 0,void 0,(function(){return je(this,(function(t){return"ResNet50"===(e=function(e){if(null==(e=e||Wt).architecture&&(e.architecture="MobileNetV1"),qt.indexOf(e.architecture)<0)throw new Error("Invalid architecture "+e.architecture+". Should be one of "+qt);if(null==e.inputResolution&&(e.inputResolution=257),Rt(e.inputResolution),null==e.outputStride&&(e.outputStride=16),Ut[e.architecture].indexOf(e.outputStride)<0)throw new Error("Invalid outputStride "+e.outputStride+". Should be one of "+Ut[e.architecture]+" for architecture "+e.architecture+".");if(null==e.multiplier&&(e.multiplier=1),Gt[e.architecture].indexOf(e.multiplier)<0)throw new Error("Invalid multiplier "+e.multiplier+". Should be one of "+Gt[e.architecture]+" for architecture "+e.architecture+".");if(null==e.quantBytes&&(e.quantBytes=4),Ht.indexOf(e.quantBytes)<0)throw new Error("Invalid quantBytes "+e.quantBytes+". Should be one of "+Ht+" for architecture "+e.architecture+".");if("MobileNetV1"===e.architecture&&32===e.outputStride&&1!==e.multiplier)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return e}(e)).architecture?[2,Yt(e)]:"MobileNetV1"===e.architecture?[2,Qt(e)]:[2,null]}))}))}var Jt="2.2.2"},7874:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(s,a){function o(e){try{u(r.next(e))}catch(e){a(e)}}function i(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){e.done?s(e.value):new n((function(t){t(e.value)})).then(o,i)}u((r=r.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var n,r,s,a,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function i(a){return function(i){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!(s=o.trys,(s=s.length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){o.label=a[1];break}if(6===a[0]&&o.label<s[1]){o.label=s[1],s=a;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(a);break}s[2]&&o.ops.pop(),o.trys.pop();continue}a=t.call(e,o)}catch(e){a=[6,e],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,i])}}};Object.defineProperty(t,"__esModule",{value:!0});var a=n(3646),o=n(6898);t.getAdjacentKeyPoints=function(e,t){return o.connectedPartIndices.reduce((function(n,r){var s=r[0],a=r[1];return function(e,t,n){return e<n||t<n}(e[s].score,e[a].score,t)||n.push([e[s],e[a]]),n}),[])};var i=Number.NEGATIVE_INFINITY,u=Number.POSITIVE_INFINITY;function l(e){return e.reduce((function(e,t){var n=e.maxX,r=e.maxY,s=e.minX,a=e.minY,o=t.position,i=o.x,u=o.y;return{maxX:Math.max(n,i),maxY:Math.max(r,u),minX:Math.min(s,i),minY:Math.min(a,u)}}),{maxX:i,maxY:i,minX:u,minY:u})}function c(e,t,n,r,s){return void 0===r&&(r=0),void 0===s&&(s=0),{score:e.score,keypoints:e.keypoints.map((function(e){var a=e.score,o=e.part,i=e.position;return{score:a,part:o,position:{x:i.x*n+s,y:i.y*t+r}}}))}}function p(e,t,n,r,s){return void 0===r&&(r=0),void 0===s&&(s=0),1===n&&1===t&&0===r&&0===s?e:e.map((function(e){return c(e,t,n,r,s)}))}function h(e,t){return{score:e.score,keypoints:e.keypoints.map((function(e){var n=e.score,r=e.part,s=e.position;return{score:n,part:r,position:{x:t-1-s.x,y:s.y}}}))}}function d(e,t){return t<=0?e:e.map((function(e){return h(e,t)}))}function m(e,t){return y(e,t)?e:Math.floor(e/t)*t+1}function f(e){a.util.assert("number"==typeof e||"object"==typeof e,(function(){return"Invalid inputResolution "+e+". Should be a number or an object with width and height"})),"object"==typeof e&&(a.util.assert("number"==typeof e.width,(function(){return"inputResolution.width has a value of "+e.width+" which is invalid; it must be a number"})),a.util.assert("number"==typeof e.height,(function(){return"inputResolution.height has a value of "+e.height+" which is invalid; it must be a number"})))}t.getBoundingBox=l,t.getBoundingBoxPoints=function(e){var t=l(e),n=t.minX,r=t.minY,s=t.maxX,a=t.maxY;return[{x:n,y:r},{x:s,y:r},{x:s,y:a},{x:n,y:a}]},t.toTensorBuffers3D=function(e){return r(this,void 0,void 0,(function(){return s(this,(function(t){return[2,Promise.all(e.map((function(e){return e.buffer()})))]}))}))},t.scalePose=c,t.scalePoses=p,t.flipPoseHorizontal=h,t.flipPosesHorizontal=d,t.toValidInputResolution=m,t.validateInputResolution=f,t.getValidInputResolutionDimensions=function(e,t){return f(e),"object"==typeof e?[m(e.height,t),m(e.width,t)]:[m(e,t),m(e,t)]};var g=[8,16,32];function y(e,t){return(e-1)%t==0}function b(e){return e instanceof a.Tensor?[e.shape[0],e.shape[1]]:[e.height,e.width]}function w(e){return e instanceof a.Tensor?e:a.browser.fromPixels(e)}t.assertValidOutputStride=function(e){a.util.assert("number"==typeof e,(function(){return"outputStride is not a number"})),a.util.assert(g.indexOf(e)>=0,(function(){return"outputStride of "+e+" is invalid. It must be either 8, 16, or 32"}))},t.assertValidResolution=function(e,t){a.util.assert("number"==typeof e[0]&&"number"==typeof e[1],(function(){return"both resolution values must be a number but had values "+e})),a.util.assert(y(e[0],t),(function(){return"height of "+e[0]+" is invalid for output stride "+t+"."})),a.util.assert(y(e[1],t),(function(){return"width of "+e[1]+" is invalid for output stride "+t+"."}))},t.getInputTensorDimensions=b,t.toInputTensor=w,t.toResizedInputTensor=function(e,t,n,r){return a.tidy((function(){var s=w(e);return r?a.image.resizeBilinear(a.reverse(s,1),[t,n]):a.image.resizeBilinear(s,[t,n])}))},t.padAndResizeTo=function(e,t){var n=t[0],r=t[1],s=b(e),o=s[0],i=s[1],u=r/n,l=[0,0,0,0],c=l[0],p=l[1],h=l[2],d=l[3];return i/o<u?(c=0,p=0,h=Math.round(.5*(u*o-i)),d=Math.round(.5*(u*o-i))):(c=Math.round(.5*(1/u*i-o)),p=Math.round(.5*(1/u*i-o)),h=0,d=0),{resized:a.tidy((function(){var t=w(e);return t=a.pad3d(t,[[c,p],[h,d],[0,0]]),a.image.resizeBilinear(t,[n,r])})),padding:{top:c,left:h,right:d,bottom:p}}},t.scaleAndFlipPoses=function(e,t,n,r,s){var a=t[0],o=t[1],i=n[0],u=n[1],l=p(e,(a+r.top+r.bottom)/i,(o+r.left+r.right)/u,-r.top,-r.left);return s?d(l,o):l}},4810:(e,t,n)=>{"use strict";n.d(t,{JL:()=>r,Zu:()=>s});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class s{refCount(e){return a("refCount")}incRef(e){return a("incRef")}timerAvailable(){return!0}time(e){return a("time")}read(e){return a("read")}readSync(e){return a("readSync")}readToGPU(e,t){return a("readToGPU")}numDataIds(){return a("numDataIds")}disposeData(e,t){return a("disposeData")}write(e,t,n){return a("write")}move(e,t,n,r,s){return a("move")}memory(){return a("memory")}floatPrecision(){return a("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return a("dispose")}}function a(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},447:(e,t,n)=>{"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,o=!1;for(;r<s;){a=r+(s-r>>>1);const i=n(t,e[a]);i>0?r=a+1:(s=a,o=!i)}return o?r:-r-1}(e,t,n||s)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function s(e,t){return e>t?1:e<t?-1:0}function a(e,t,n,r,s){return u(e,t,n,r,s,0)}function o(e,t,n,r,s,a){return u(e,t,n,r,s,0,!1,a,!0)}function i(e,t,n,r,s,a){return u(e,t,n,r,s,a,!0)}function u(e,t,n,s,a,o,i=!1,u=!1,h=!1){const d=[];for(let e=0;e<t.length;e++)t[e]>a&&d.push({score:t[e],boxIndex:e,suppressBeginIndex:0});d.sort(p);const m=o>0?-.5/o:0,f=[],g=[];for(;f.length<n&&d.length>0;){const t=d.pop(),{score:n,boxIndex:o,suppressBeginIndex:i}=t;if(n<a)break;let u=!1;for(let n=f.length-1;n>=i;--n){const r=l(e,o,f[n]);if(r>=s){u=!0;break}if(t.score=t.score*c(s,m,r),t.score<=a)break}t.suppressBeginIndex=f.length,u||(t.score===n?(f.push(o),g.push(t.score)):t.score>a&&r(d,t,p))}const y=f.length,b=n-y;u&&b>0&&(f.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const w={selectedIndices:f};return i&&(w.selectedScores=g),h&&(w.validOutputs=y),w}function l(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),p=Math.max(s[0],s[2]),h=Math.max(s[1],s[3]),d=(i-a)*(u-o),m=(p-l)*(h-c);if(d<=0||m<=0)return 0;const f=Math.max(a,l),g=Math.max(o,c),y=Math.min(i,p),b=Math.min(u,h),w=Math.max(y-f,0)*Math.max(b-g,0);return w/(d+m-w)}function c(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function p(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{GP:()=>a,qP:()=>o,pA:()=>i})},9490:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(3746);function s(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const s=(0,r.f)(e,"int32"),a=(0,r.f)([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const r=s.indexToLoc(n[t]),o=t*e.length;a.values.set(r,o)}return a.toTensor()}},2543:(e,t,n)=>{"use strict";n.d(t,{BV:()=>v,wv:()=>w});var r=n(4810),s=n(1055),a=n(137),o=n(3986),i=n(8854),u=n(1741),l=n(6646),c=n(7186);class p{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new d)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let o;const i=l.now();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();o=Promise.resolve({kernelMs:l.now()-i})}if((0,s.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{h(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:o.then((e=>e.kernelMs)),extraInfo:o.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function h(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class d{logKernelProfile(e,t,n,r,s,a){const o="number"==typeof r?c.oj(`${r}ms`,9):r.error,i=c.oj(e,25),u=t.rank,l=t.size,p=c.oj(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${i}\t%c${o}\t%c${u}D ${p}\t%c${l}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var m=n(7184),f=n(5810);function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class b{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(u.Z(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new p(this.backendInstance),!0}setupRegisteredKernels(){(0,i.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,i.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.Zu||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,u.Z(`Initialization of backend ${e} failed`),u.Z(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return u.Z(`Initialization of backend ${e} failed`),u.Z(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(e){const t=v.runKernel(o.iJz,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return v.runKernel(o.RFZ,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=(0,i.pI)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-s-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let o,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const l=(0,i.pI)(t,this.backendName);c.hu(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();u=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const o=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const i=o.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:p,attrs:h}=e,d=g(e)?null:e.backwardsFunc;let m;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(m=this.profiler.profileKernel(l,p,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(m),t=m.outputs):t=o()})),r&&this.addTapeNode(l,p,t,d,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map((e=>null!=p[e]?p[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:m.timeMs,extraInfo:m.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=(0,i.uk)(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(c.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const o=n.filter(((e,t)=>s[t]));return a.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&c.HD(e[0])&&(s=e.map((e=>l.encodeString(e))));const a=r.write(s,t,n),o=new m.es(t,n,a,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const e=this.state.tensorInfo.get(a),t=(0,c.Ub)(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new m.es(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new m._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof m._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},u=(0,i.uk)(e);null!=u&&(r=u.gradFunc),null!=r&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=c.wT(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,f.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(c.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));c.hu(s instanceof m.es,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],o=a.inputs;for(const e in o){const n=o[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),i=!0,s[a.id]=!0;break}if(i)break}}const a={};a[n.id]=!0;const o={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,o[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&o[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=(0,c.p8)((0,c.NA)(e),"float32");return v.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],o=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const i=a.gradient(o);for(const t in a.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const s=n((()=>i[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const o=a.inputs[t];if(!c.cO(s.shape,o.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=s;else{const t=e[o.id];e[o.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),x);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return c.hu(c.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;c.hu(t.every((e=>e instanceof m.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),c.hu(n.value instanceof m.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),c.hu(c.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];c.hu(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),c.hu(a.every((e=>e instanceof m.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return a.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,l.now)(),n=await this.backend.time(e);return n.wallMs=(0,l.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function w(){const e=(0,a.D)();if(null==e._tfengine){const t=new s.qA(e);e._tfengine=new b(t)}return(0,s.iG)(e._tfengine.ENV),(0,m.Vi)((()=>e._tfengine)),e._tfengine}b.nextTensorId=0,b.nextVariableId=0;const v=w();function x(e,t){const n={a:e,b:t};return v.runKernel(o.mm_,n)}},1055:(e,t,n)=>{"use strict";n.d(t,{OB:()=>i,Vi:()=>u,iG:()=>l,qA:()=>a});var r=n(7186);const s="tfjsflags";class a{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=o,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(i().getBool("IS_TEST")||i().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];i().getBool("IS_TEST")||i().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(s in e){e[s].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}}function o(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function i(){return u}let u=null;function l(e){u=e}},137:(e,t,n)=>{"use strict";let r;function s(){if(null==r){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}r=e}return r}function a(e,t){const n=function(){const e=s();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,{D:()=>s,R:()=>a})},2811:(e,t,n)=>{"use strict";n.d(t,{B9:()=>g,CQ:()=>w,Cd:()=>v,Cn:()=>y,G4:()=>i,MX:()=>c,N5:()=>m,N8:()=>p,N_:()=>x,R:()=>u,SR:()=>h,VY:()=>E,XV:()=>b,cF:()=>l,cj:()=>N,jq:()=>k,lu:()=>f,sq:()=>d,x3:()=>_,y3:()=>T,ze:()=>S});var r=n(2543),s=n(1055),a=n(7184),o=n(5810);function i(){(0,s.OB)().set("PROD",!0)}function u(){(0,s.OB)().set("DEBUG",!0)}function l(){(0,s.OB)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function c(e){(0,s.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function p(){r.BV.disposeVariables()}function h(){return r.BV}function d(){return r.BV.memory()}function m(e){return r.BV.profile(e)}function f(e,t){return r.BV.tidy(e,t)}function g(e){(0,o.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function y(e){return r.BV.keep(e)}function b(e){return r.BV.time(e)}function w(e){return r.BV.setBackend(e)}function v(){return r.BV.ready()}function x(){return r.BV.backendName}function N(e){r.BV.removeBackend(e)}function _(e){return r.BV.findBackend(e)}function S(e){return r.BV.findBackendFactory(e)}function k(e,t,n=1){return r.BV.registerBackend(e,t,n)}function T(){return r.BV.backend}function E(e,t){(0,s.OB)().setPlatform(e,t)}(0,a.FZ)(c)},9541:(e,t,n)=>{"use strict";n.d(t,{UQ:()=>i,cb:()=>h,fN:()=>c,h7:()=>l,pn:()=>p,ti:()=>u});var r=n(2543),s=n(7184),a=n(2595),o=n(7186);function i(e){return o.hu(o.mf(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const s=(0,a._1)(t,"x","tf.grad","string_or_numeric"),i=null!=n?(0,a._1)(n,"dy","tf.grad"):null;return r.BV.tidy((()=>{const{value:t,grads:n}=r.BV.gradients((()=>e(s)),[s],i);return null!=i&&o.k5(t.shape,i.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),d(n),n[0]}))}}function u(e){return o.hu(o.mf(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{o.hu(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const s=(0,a.sI)(t,"args","tf.grads","string_or_numeric"),i=null!=n?(0,a._1)(n,"dy","tf.grads"):null;return r.BV.tidy((()=>{const{value:t,grads:n}=r.BV.gradients((()=>e(...s)),s,i);return null!=i&&o.k5(t.shape,i.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),d(n),n}))}}function l(e){return o.hu(o.mf(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{o.hu(t instanceof s.es,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),o.hu(null==n||n instanceof s.es,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:a,value:i}=r.BV.gradients((()=>e(t)),[t],n);return d(a),{grad:a[0],value:i}}}function c(e){return o.hu(o.mf(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{o.hu(Array.isArray(t)&&t.every((e=>e instanceof s.es)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),o.hu(null==n||n instanceof s.es,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const a=r.BV.gradients((()=>e(...t)),t,n);return null!=n&&o.k5(a.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),d(a.grads),a}}function p(e,t){o.hu(o.mf(e),(()=>"The f passed in variableGrads(f) must be a function")),o.hu(null==t||Array.isArray(t)&&t.every((e=>e instanceof s._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.BV.registeredVariables)t.push(r.BV.registeredVariables[e])}const a=n?t.filter((e=>!e.trainable)):null,i=t.length;t=t.filter((e=>e.trainable)),o.hu(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`));const{value:u,grads:l}=r.BV.gradients(e,t,null,!0);o.hu(l.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),o.hu(0===u.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`));const c={};return t.forEach(((e,t)=>{null!=l[t]&&(c[e.name]=l[t])})),null!=a&&a.forEach((e=>c[e.name]=null)),{value:u,grads:c}}function h(e){return r.BV.customGrad(e)}function d(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},3646:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>nt.SYM,Acos:()=>nt.VGw,Acosh:()=>nt.SpW,AdadeltaOptimizer:()=>ln,AdagradOptimizer:()=>pn,AdamOptimizer:()=>mn,AdamaxOptimizer:()=>yn,Add:()=>nt.mm_,AddN:()=>nt.Xze,All:()=>nt.oT6,Any:()=>nt.IKK,ArgMax:()=>nt.sJF,ArgMin:()=>nt.aJk,Asin:()=>nt.M2y,Asinh:()=>nt.qw7,Atan:()=>nt.jMg,Atan2:()=>nt.QCc,Atanh:()=>nt.Oyi,AvgPool:()=>nt.JhU,AvgPool3D:()=>nt._k9,AvgPool3DGrad:()=>nt.IMb,AvgPoolGrad:()=>nt.ROF,BatchMatMul:()=>nt.XLW,BatchToSpaceND:()=>nt.zws,Bincount:()=>nt.zvY,BroadcastArgs:()=>nt.eEB,BroadcastTo:()=>nt.Ly9,Cast:()=>nt.RFZ,Ceil:()=>nt.gJX,ClipByValue:()=>nt.xnO,Complex:()=>nt.Zz9,ComplexAbs:()=>nt.yj2,Concat:()=>nt.Eh3,Conv2D:()=>nt.mhS,Conv2DBackpropFilter:()=>nt.wUP,Conv2DBackpropInput:()=>nt.wm,Conv3D:()=>nt.x12,Conv3DBackpropFilterV2:()=>nt.o2y,Conv3DBackpropInputV2:()=>nt.ik2,Cos:()=>nt.mc4,Cosh:()=>nt.TR1,CropAndResize:()=>nt.VcC,Cumprod:()=>nt.Byc,Cumsum:()=>nt.iHb,DataStorage:()=>Pr.JL,DenseBincount:()=>nt.QRR,DepthToSpace:()=>nt.T0n,DepthwiseConv2dNative:()=>nt.cie,DepthwiseConv2dNativeBackpropFilter:()=>nt.sL$,DepthwiseConv2dNativeBackpropInput:()=>nt.y7R,Diag:()=>nt.$w,Dilation2D:()=>nt.p4S,Dilation2DBackpropFilter:()=>nt.Vn9,Dilation2DBackpropInput:()=>nt.ekb,ENV:()=>w.Vi,Einsum:()=>nt.$g6,Elu:()=>nt.SX0,EluGrad:()=>nt.HEU,Environment:()=>w.qA,Equal:()=>nt.hdR,Erf:()=>nt.Omj,Exp:()=>nt.NEP,ExpandDims:()=>nt.YFo,Expm1:()=>nt.Y0y,FFT:()=>nt.vwp,Fill:()=>nt.deh,FlipLeftRight:()=>nt.Uyb,Floor:()=>nt.OR,FloorDiv:()=>nt.jeX,FromPixels:()=>nt.eBW,FusedBatchNorm:()=>nt.sHE,FusedConv2D:()=>nt._V0,FusedDepthwiseConv2D:()=>nt.luS,GatherNd:()=>nt.q1x,GatherV2:()=>nt.qi_,Greater:()=>nt.iZT,GreaterEqual:()=>nt.Acj,IFFT:()=>nt.Qg5,Identity:()=>nt.iJz,Imag:()=>nt.J_u,IsFinite:()=>nt.avt,IsInf:()=>nt.iWB,IsNan:()=>nt.r7n,KernelBackend:()=>Pr.Zu,LRN:()=>nt.eZ0,LRNGrad:()=>nt.Hhh,LeakyRelu:()=>nt.J$2,Less:()=>nt.vtC,LessEqual:()=>nt.CAk,LinSpace:()=>nt.e7N,Log:()=>nt.ZbH,Log1p:()=>nt.kU,LogSoftmax:()=>nt.qCd,LogicalAnd:()=>nt.PYm,LogicalNot:()=>nt.VfG,LogicalOr:()=>nt.MZg,LogicalXor:()=>nt.w6g,LowerBound:()=>nt.qIC,Max:()=>nt.YoZ,MaxPool:()=>nt.mTV,MaxPool3D:()=>nt.OAf,MaxPool3DGrad:()=>nt.OU7,MaxPoolGrad:()=>nt.OV7,MaxPoolWithArgmax:()=>nt.vFR,Maximum:()=>nt.BMI,Mean:()=>nt.q2K,Min:()=>nt.c17,Minimum:()=>nt.q8u,MirrorPad:()=>nt.jQs,Mod:()=>nt.Vbg,MomentumOptimizer:()=>wn,Multinomial:()=>nt.NZg,Multiply:()=>nt.wYn,Neg:()=>nt.kuV,NonMaxSuppressionV3:()=>nt.uv1,NonMaxSuppressionV4:()=>nt.cye,NonMaxSuppressionV5:()=>nt.W0H,NotEqual:()=>nt.yQU,OP_SCOPE_SUFFIX:()=>_n.zvA,OneHot:()=>nt.we_,OnesLike:()=>nt.qWM,Optimizer:()=>un,OptimizerConstructors:()=>xn,Pack:()=>nt.QiL,PadV2:()=>nt.lyA,Pool:()=>nt.Kgp,Pow:()=>nt.pe_,Prelu:()=>nt.o0g,Prod:()=>nt.DlI,RMSPropOptimizer:()=>vn,RaggedGather:()=>nt.dDz,RaggedTensorToTensor:()=>nt.BiW,Range:()=>nt.e6w,Rank:()=>Nn.yw,Real:()=>nt.xJR,RealDiv:()=>nt.oHH,Reciprocal:()=>nt.$HU,Reduction:()=>Sn.I,Relu:()=>nt.qkr,Relu6:()=>nt.SbG,Reshape:()=>nt.HZH,ResizeBilinear:()=>nt._Yw,ResizeBilinearGrad:()=>nt.zbQ,ResizeNearestNeighbor:()=>nt.dpD,ResizeNearestNeighborGrad:()=>nt.Hmb,Reverse:()=>nt.mKl,RotateWithOffset:()=>nt.b9H,Round:()=>nt.e07,Rsqrt:()=>nt.bV0,SGDOptimizer:()=>bn,ScatterNd:()=>nt.xQA,SearchSorted:()=>nt.nr8,Select:()=>nt.PhF,Selu:()=>nt.oFR,Sigmoid:()=>nt.a5O,Sign:()=>nt.i5y,Sin:()=>nt.RQH,Sinh:()=>nt.wYB,Slice:()=>nt.p2w,Softmax:()=>nt.Gcp,Softplus:()=>nt.MRv,SpaceToBatchND:()=>nt.TQc,SparseFillEmptyRows:()=>nt.O3z,SparseReshape:()=>nt.nhH,SparseSegmentMean:()=>nt.w3H,SparseSegmentSum:()=>nt.ZjV,SparseToDense:()=>nt.D2d,SplitV:()=>nt.L8s,Sqrt:()=>nt.FKq,Square:()=>nt.bK0,SquaredDifference:()=>nt._tC,Step:()=>nt.h8e,StridedSlice:()=>nt.jQk,StringNGrams:()=>nt._JP,StringSplit:()=>nt.s1s,StringToHashBucketFast:()=>nt.XkS,Sub:()=>nt.Tr8,Sum:()=>nt.GBy,Tan:()=>nt.sEM,Tanh:()=>nt.MIZ,Tensor:()=>Ee.es,TensorBuffer:()=>Ee.YD,Tile:()=>nt.n9L,TopK:()=>nt.cWu,Transform:()=>nt.wx7,Transpose:()=>nt.G3Y,Unique:()=>nt.kpP,Unpack:()=>nt.ToN,UnsortedSegmentSum:()=>nt.Qvg,UpperBound:()=>nt.XDQ,Variable:()=>Ee._w,ZerosLike:()=>nt.RuY,_FusedMatMul:()=>nt.usg,abs:()=>_n.WnP,acos:()=>_n.Khb,acosh:()=>_n.__u,add:()=>_n.IHx,addN:()=>_n.QBD,all:()=>_n.$6P,any:()=>_n.YjB,argMax:()=>_n.NqF,argMin:()=>_n.vHJ,asin:()=>_n.ZRM,asinh:()=>_n.VfV,atan:()=>_n.z4N,atan2:()=>_n.fvJ,atanh:()=>_n.C80,avgPool:()=>_n.wS1,avgPool3d:()=>_n.uR5,backend:()=>Zt.y3,backend_util:()=>h,basicLSTMCell:()=>_n.zEQ,batchNorm:()=>_n.tgs,batchNorm2d:()=>_n.Dxk,batchNorm3d:()=>_n.JY5,batchNorm4d:()=>_n.p3b,batchToSpaceND:()=>_n.E4h,bincount:()=>_n.yE8,booleanMaskAsync:()=>_n.anm,broadcastArgs:()=>_n.XsQ,broadcastTo:()=>_n.UFq,broadcast_util:()=>tt,browser:()=>o,buffer:()=>_n.f3b,cast:()=>_n.pju,ceil:()=>_n.mDi,clipByValue:()=>_n.iUl,clone:()=>_n.d9v,complex:()=>_n.PYB,concat:()=>_n.zoF,concat1d:()=>_n.gME,concat2d:()=>_n.Izb,concat3d:()=>_n.MNy,concat4d:()=>_n.ZaL,conv1d:()=>_n.PAt,conv2d:()=>_n.Tek,conv2dTranspose:()=>_n.bc,conv3d:()=>_n.pdZ,conv3dTranspose:()=>_n.$QV,copyRegisteredKernels:()=>rt.T3,cos:()=>_n.mCk,cosh:()=>_n.f9Y,cosineWindow:()=>_n.mew,cumprod:()=>_n.$Gn,cumsum:()=>_n.zbp,customGrad:()=>an.cb,denseBincount:()=>_n.ppE,deprecationWarn:()=>Zt.MX,depthToSpace:()=>_n.nTT,depthwiseConv2d:()=>_n.B10,device_util:()=>r,diag:()=>_n.Ka3,dilation2d:()=>_n.WmZ,disableDeprecationWarnings:()=>Zt.cF,dispose:()=>Zt.B9,disposeVariables:()=>Zt.N8,div:()=>_n.hiC,divNoNan:()=>_n.NTj,dot:()=>_n.AKD,dropout:()=>_n.rvX,einsum:()=>_n.WYO,elu:()=>_n.pyx,enableDebugMode:()=>Zt.R,enableProdMode:()=>Zt.G4,enclosingPowerOfTwo:()=>_n.GRh,engine:()=>Zt.SR,env:()=>w.OB,equal:()=>_n.DgJ,erf:()=>_n.qNN,euclideanNorm:()=>_n.d2q,exp:()=>_n.Qqt,expandDims:()=>_n.dt4,expm1:()=>_n.t$B,eye:()=>_n.iyy,fft:()=>_n.kp_,fill:()=>_n.hlL,findBackend:()=>Zt.x3,findBackendFactory:()=>Zt.ze,floor:()=>_n.GWj,floorDiv:()=>_n.qPi,fused:()=>_n.imm,gather:()=>_n.Iqj,gatherND:()=>_n.dbB,gather_util:()=>i,getBackend:()=>Zt.N_,getGradient:()=>rt.uk,getKernel:()=>rt.pI,getKernelsForBackend:()=>rt.tr,grad:()=>an.UQ,grads:()=>an.ti,greater:()=>_n.pjt,greaterEqual:()=>_n.brS,ifft:()=>_n.Sxn,imag:()=>_n.asL,image:()=>_n.BHj,inTopKAsync:()=>_n.V3u,io:()=>s,irfft:()=>_n.wx0,isFinite:()=>_n.xVT,isInf:()=>_n.UWc,isNaN:()=>_n.i2d,keep:()=>Zt.Cn,kernel_impls:()=>d,leakyRelu:()=>_n.hi7,less:()=>_n.d9m,lessEqual:()=>_n.zN1,linalg:()=>_n.$r2,linspace:()=>_n.SX3,localResponseNormalization:()=>_n.G9k,log:()=>_n.cM7,log1p:()=>_n.Krr,logSigmoid:()=>_n.e_t,logSoftmax:()=>_n.CmS,logSumExp:()=>_n.l_t,logicalAnd:()=>_n.HvI,logicalNot:()=>_n.hJK,logicalOr:()=>_n.K5V,logicalXor:()=>_n.egP,losses:()=>_n.MB5,lowerBound:()=>_n.eab,matMul:()=>_n.OI3,math:()=>a,max:()=>_n.Fp7,maxPool:()=>_n._sB,maxPool3d:()=>_n.YQQ,maxPoolWithArgmax:()=>_n.Ip$,maximum:()=>_n.gWQ,mean:()=>_n.J69,memory:()=>Zt.sq,meshgrid:()=>_n.ry_,min:()=>_n.VV$,minimum:()=>_n.LTh,mirrorPad:()=>_n.VdP,mod:()=>_n.wQq,moments:()=>_n.Gi7,movingAverage:()=>_n.p_,mul:()=>_n.dC7,multiRNNCell:()=>_n.rq4,multinomial:()=>_n.SJ_,neg:()=>_n.W76,nextFrame:()=>En,norm:()=>_n.KOy,notEqual:()=>_n.Quu,oneHot:()=>_n.lfX,ones:()=>_n.iUs,onesLike:()=>_n.JpU,op:()=>_n.op,outerProduct:()=>_n.N2O,pad:()=>_n.vku,pad1d:()=>_n.pNR,pad2d:()=>_n.koy,pad3d:()=>_n.t1L,pad4d:()=>_n.lGY,pool:()=>_n.d_R,pow:()=>_n.sQ3,prelu:()=>_n.AL3,print:()=>_n.S0v,prod:()=>_n.WVs,profile:()=>Zt.N5,raggedGather:()=>_n.$gW,raggedTensorToTensor:()=>_n.N89,rand:()=>_n.TN_,randomGamma:()=>_n.wzB,randomNormal:()=>_n.nGf,randomStandardNormal:()=>_n.ruB,randomUniform:()=>_n.LGj,range:()=>_n.w6H,ready:()=>Zt.Cd,real:()=>_n.kwC,reciprocal:()=>_n.M25,registerBackend:()=>Zt.jq,registerGradient:()=>rt.Li,registerKernel:()=>rt.wC,relu:()=>_n.UYe,relu6:()=>_n.btT,removeBackend:()=>Zt.cj,reshape:()=>_n.XLQ,reverse:()=>_n.GYS,reverse1d:()=>_n.SDf,reverse2d:()=>_n.diP,reverse3d:()=>_n.sx7,reverse4d:()=>_n.mG2,rfft:()=>_n.QEs,round:()=>_n.NMM,rsqrt:()=>_n.bp0,scalar:()=>_n.iD$,scatterND:()=>_n.snQ,scatter_util:()=>ht,searchSorted:()=>_n.zcT,selu:()=>_n.U8D,separableConv2d:()=>_n.U_I,serialization:()=>l,setBackend:()=>Zt.CQ,setPlatform:()=>Zt.VY,setdiff1dAsync:()=>_n.ODp,sigmoid:()=>_n.XD2,sign:()=>_n.Xxe,signal:()=>_n.tdS,sin:()=>_n.O$l,sinh:()=>_n.R_K,slice:()=>_n.tPi,slice1d:()=>_n.jZU,slice2d:()=>_n.SmN,slice3d:()=>_n.CnO,slice4d:()=>_n.p0P,slice_util:()=>u,softmax:()=>_n.XAC,softplus:()=>_n.Wvh,spaceToBatchND:()=>_n.fBT,sparse:()=>_n.rVs,sparseToDense:()=>_n.ers,spectral:()=>_n.uN7,split:()=>_n.Vl2,sqrt:()=>_n._b3,square:()=>_n.h62,squaredDifference:()=>_n.$i,squeeze:()=>_n.L9e,stack:()=>_n.knu,step:()=>_n.Nbs,stridedSlice:()=>_n.NXj,string:()=>_n.Z_8,sub:()=>_n.luU,sum:()=>_n.Smz,sumOutType:()=>Nn.z4,tan:()=>_n.ORZ,tanh:()=>_n.AEp,tensor:()=>_n.XeE,tensor1d:()=>_n.RRF,tensor2d:()=>_n.odF,tensor3d:()=>_n.wOQ,tensor4d:()=>_n.yXz,tensor5d:()=>_n.Bfx,tensor6d:()=>_n.xZs,tensor_util:()=>Rt,test_util:()=>c,tidy:()=>Zt.lu,tile:()=>_n.Gg6,time:()=>Zt.XV,topk:()=>_n.hg7,train:()=>kn,transpose:()=>_n.p4s,truncatedNormal:()=>_n.Xu6,unique:()=>_n.Two,unregisterGradient:()=>rt.bt,unregisterKernel:()=>rt.nE,unsortedSegmentSum:()=>_n.pUJ,unstack:()=>_n.HHK,upcastType:()=>Nn.x8,upperBound:()=>_n.GaM,util:()=>Vt,valueAndGrad:()=>an.h7,valueAndGrads:()=>an.fN,variable:()=>_n.VD$,variableGrads:()=>an.pn,version_core:()=>Yt,where:()=>_n.arb,whereAsync:()=>_n.itS,zeros:()=>_n.lls,zerosLike:()=>_n.P84});var r={};n.r(r),n.d(r,{isBrowser:()=>b,isMobile:()=>y,mockIsMobile:()=>g});var s={};n.r(s),n.d(s,{browserFiles:()=>$e,browserHTTPRequest:()=>ze,concatenateArrayBuffers:()=>O,copyModel:()=>ye,decodeWeights:()=>E,encodeWeights:()=>T,fromMemory:()=>Ge,fromMemorySync:()=>He,getLoadHandlers:()=>q,getModelArtifactsForJSON:()=>R,getModelArtifactsForJSONSync:()=>B,getModelArtifactsInfoForJSON:()=>V,getSaveHandlers:()=>W,getWeightSpecs:()=>C,http:()=>Le,isHTTPScheme:()=>Fe,listModels:()=>fe,loadWeights:()=>Re,moveModel:()=>be,registerLoadRouter:()=>z,registerSaveRouter:()=>L,removeModel:()=>ge,weightsLoaderFactory:()=>Ve,withSaveHandler:()=>je,withSaveHandlerSync:()=>Ke});var a={};n.r(a),n.d(a,{confusionMatrix:()=>et});var o={};n.r(o),n.d(o,{fromPixels:()=>ct,fromPixelsAsync:()=>ut,toPixels:()=>lt});var i={};n.r(i),n.d(i,{prepareAndValidate:()=>pt});var u={};n.r(u),n.d(u,{assertParamsValid:()=>ft,computeFlatOffset:()=>It,computeOutShape:()=>yt,getNormalizedAxes:()=>xt,isSliceContinous:()=>Et,maskToAxes:()=>gt,parseSliceParams:()=>At,sliceInfo:()=>Mt,startForAxis:()=>kt,startIndicesWithElidedDims:()=>Nt,stopForAxis:()=>Tt,stopIndicesWithElidedDims:()=>_t,stridesForAxis:()=>St,stridesWithElidedDims:()=>bt});var l={};n.r(l),n.d(l,{Serializable:()=>$t,SerializationMap:()=>Dt,registerClass:()=>Bt});var c={};n.r(c),n.d(c,{TEST_EPSILON_FLOAT16:()=>Ft,createVideoElement:()=>Xt,encodeStrings:()=>Kt,expectArrayBuffersEqual:()=>jt,expectArraysClose:()=>Pt,expectArraysEqual:()=>qt,expectNumbersClose:()=>Ut,expectPromiseToFail:()=>Wt,expectValuesInRange:()=>Ht,play:()=>Qt,testEpsilon:()=>Lt});var p={};n.r(p),n.d(p,{collectGatherOpShapeInfo:()=>Br,computeOutShape:()=>Dr,segOpComputeOptimalWindowSize:()=>$r});var h={};n.r(h),n.d(h,{ERF_A1:()=>Xn,ERF_A2:()=>Qn,ERF_A3:()=>Yn,ERF_A4:()=>Zn,ERF_A5:()=>Jn,ERF_P:()=>Kn,PARALLELIZE_THRESHOLD:()=>Fn,RowPartitionType:()=>On,SELU_SCALE:()=>jn,SELU_SCALEALPHA:()=>Hn,applyActivation:()=>Dn.QH,assertAndGetBroadcastShape:()=>tt.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>In.lB,assertParamsConsistent:()=>An,assignToTypedArray:()=>or,axesAreInnerMostDims:()=>In.YB,calculateShapes:()=>ht.calculateShapes,checkEinsumDimSizes:()=>fr,checkPadOnDimRoundingMode:()=>$n.m,combineLocations:()=>In.Vh,combineRaggedTensorToTensorShapes:()=>Bn,complexWithEvenIndex:()=>rr,complexWithOddIndex:()=>sr,computeConv2DInfo:()=>$n.Ix,computeConv3DInfo:()=>$n.jw,computeDefaultPad:()=>$n.aO,computeDilation2DInfo:()=>$n.Rf,computeOptimalWindowSize:()=>Pn,computeOutAndReduceShapes:()=>In.kz,computeOutShape:()=>Mn,computePool2DInfo:()=>$n.Xw,computePool3DInfo:()=>$n.pl,convertConv2DDataFormat:()=>$n.sl,decodeEinsumEquation:()=>dr,eitherStridesOrDilationsAreOne:()=>$n.jT,expandShapeToKeepDim:()=>In.rv,exponent:()=>ur,exponents:()=>ir,fromStringArrayToUint8:()=>Vr,fromUint8ToStringArray:()=>Rr,getAxesPermutation:()=>In.Q3,getBroadcastDims:()=>tt.getBroadcastDims,getComplexWithIndex:()=>ar,getEinsumComputePath:()=>gr,getEinsumPermutation:()=>mr,getFusedBiasGradient:()=>Dn.pf,getFusedDyActivation:()=>Dn.Fr,getImageCenter:()=>Ln,getInnerMostAxes:()=>In.sY,getPermuted:()=>Wn,getRaggedRank:()=>Vn,getReductionAxes:()=>tt.getReductionAxes,getReshaped:()=>zn,getReshapedPermuted:()=>qn,getRowPartitionTypesHelper:()=>Rn,getSliceBeginCoords:()=>Un,getSliceSize:()=>Gn,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>vr,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>xr,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Nr,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>kr,getSparseReshapeInputOutputMismatchErrorMessage:()=>Er,getSparseReshapeInputOutputMultipleErrorMessage:()=>Tr,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>_r,getSparseReshapeNegativeOutputDimErrorMessage:()=>Sr,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Or,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Ir,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Ar,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Mr,getUndoAxesPermutation:()=>In.LJ,isIdentityPermutation:()=>yr,log:()=>er.c,mergeRealAndImagArrays:()=>tr,prepareAndValidate:()=>pt,prepareSplitSize:()=>wr,segment_util:()=>p,shouldFuse:()=>Dn.uy,slice_util:()=>u,splitRealAndImagArrays:()=>nr,tupleValuesAreOne:()=>$n.I0,upcastType:()=>Nn.x8,validateDefaultValueShape:()=>Cn,validateInput:()=>ht.validateInput,validateUpdateShape:()=>ht.validateUpdateShape,warn:()=>er.Z});var d={};n.r(d),n.d(d,{nonMaxSuppressionV3Impl:()=>Cr.GP,nonMaxSuppressionV4Impl:()=>Cr.qP,nonMaxSuppressionV5Impl:()=>Cr.pA,whereImpl:()=>Fr.Z});var m=n(2543);let f;function g(e){f=e}function y(e){if(void 0!==f)return f;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function b(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var w=n(1055);const v=(0,w.OB)();v.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),v.registerFlag("IS_BROWSER",(()=>b())),v.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),v.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),v.registerFlag("PROD",(()=>!1)),v.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>v.getBool("DEBUG"))),v.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),v.registerFlag("IS_TEST",(()=>!1)),v.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),v.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),v.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1)),v.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),v.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var x=n(6194),N=n(8061),_=n(7186);const S={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},k=4;async function T(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const o=s[a],i=Array.isArray(e)?e[a].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${i.dtype}`);const u={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+k*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=k,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:I(await Promise.all(r)),specs:n}}function E(e,t){const n={};let r,s=0;for(const a of t){const t=a.name,o=a.dtype,i=a.shape,u=(0,_.NA)(i);let l;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${o}.`)}const i=S[n.dtype],c=e.slice(s,s+u*i),p="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===o)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=F()),l=r(p)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];l[e]=Math.round(t*n.scale+n.min)}}s+=u*i}else if("string"===o){const t=(0,_.NA)(a.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(s,s+k))[0];s+=k;const n=new Uint8Array(e.slice(s,s+t));l.push(n),s+=t}}else{const r=S[o],a=e.slice(s,s+u*r);if("float32"===o)l=new Float32Array(a);else if("int32"===o)l=new Int32Array(a);else if("bool"===o)l=new Uint8Array(a);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);{l=new Float32Array(a);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const s=(0,N.X)(e,i,"float32"),o=(0,N.X)(r,i,"float32");n[t]=(0,x.P)(s,o),s.dispose(),o.dispose()}}s+=u*r}"complex64"!==o&&(n[t]=(0,N.X)(l,i,o))}return n}function I(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const A="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function M(e){return A?Buffer.byteLength(e):new Blob([e]).size}function O(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function $(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function D(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function B(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),r}async function R(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),B(e,n,r)}function V(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:M(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:M(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function C(e){const t=[];for(const n of e)t.push(...n.weights);return t}function F(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const o=r[s],i=e[n[o>>10]+(1023&o)]+t[o>>10];a[s]=i}return new Float32Array(s)}}class P{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==P.instance&&(P.instance=new P),P.instance}static registerSaveRouter(e){P.getInstance().saveRouters.push(e)}static registerLoadRouter(e){P.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return P.getHandlers(e,"save")}static getLoadHandlers(e,t){return P.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?P.getInstance().loadRouters:P.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const L=e=>P.registerSaveRouter(e),z=e=>P.registerLoadRouter(e),W=e=>P.getSaveHandlers(e),q=(e,t)=>P.getLoadHandlers(e,t),U="tensorflowjs",G="models_store",H="model_info_store";function j(){if(!(0,w.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function K(e){const t=e.result;t.createObjectStore(G,{keyPath:"modelPath"}),t.createObjectStore(H,{keyPath:"modelPath"})}class X{constructor(e){if(this.indexedDB=j(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(U,1);r.onupgradeneeded=()=>K(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(G,"readonly"),r=t.objectStore(G).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=V(t),a=s.transaction(H,"readwrite");let o=a.objectStore(H);const i=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=s.transaction(G,"readwrite");const i=u.objectStore(G).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{o=a.objectStore(H);const t=o.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(i.error)),t.onerror=e=>(s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}X.URL_SCHEME="indexeddb://";const Q=e=>{return(0,w.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(X.URL_SCHEME)?(t=e.slice(X.URL_SCHEME.length),new X(t)):null;var t};P.registerSaveRouter(Q),P.registerLoadRouter(Q);class Y{constructor(){this.indexedDB=j()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(U,1);n.onupgradeneeded=()=>K(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(H,"readonly"),a=s.objectStore(H).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(X.URL_SCHEME)?t.slice(X.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(U,1);r.onupgradeneeded=()=>K(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(H,"readwrite"),o=a.objectStore(H),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),a=()=>{u=s.transaction(G,"readwrite");const r=u.objectStore(G).delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const Z="/",J="tensorflowjs_models",ee="info",te="model_topology",ne="weight_specs",re="weight_data",se="model_metadata";function ae(e){return{info:[J,e,ee].join(Z),topology:[J,e,te].join(Z),weightSpecs:[J,e,ne].join(Z),weightData:[J,e,re].join(Z),modelMetadata:[J,e,se].join(Z)}}function oe(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function ie(e){const t=e.split(Z);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Z)}class ue{constructor(e){if(!(0,w.OB)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ae(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=V(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(A)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw oe(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(A){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}ue.URL_SCHEME="localstorage://";const le=e=>{return(0,w.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ue.URL_SCHEME)?(t=e.slice(ue.URL_SCHEME.length),new ue(t)):null;var t};P.registerSaveRouter(le),P.registerLoadRouter(le);class ce{constructor(){(0,_.hu)((0,w.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,_.hu)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=J+Z,n=Z+ee;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){e[ie(s)]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){var t;const n=ae(e=(t=e).startsWith(ue.URL_SCHEME)?t.slice(ue.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return oe(n),r}}const pe="://";class he{constructor(){this.managers={}}static getInstance(){return null==he.instance&&(he.instance=new he),he.instance}static registerManager(e,t){(0,_.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(pe)&&(e=e.slice(0,e.indexOf(pe))),(0,_.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=he.getInstance();(0,_.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=he.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(he.getInstance().managers)}}function de(e){if(-1===e.indexOf(pe))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${he.getSchemes().join(",")}`);return{scheme:e.split(pe)[0],path:e.split(pe)[1]}}async function me(e,t,n=!1){(0,_.hu)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=P.getLoadHandlers(e);(0,_.hu)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,_.hu)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],a=P.getSaveHandlers(t);(0,_.hu)(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,_.hu)(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const o=a[0],i=de(e).scheme,u=de(e).path,l=i===de(e).scheme,c=await s.load();n&&l&&await he.getManager(i).removeModel(u);const p=await o.save(c);return n&&!l&&await he.getManager(i).removeModel(u),p.modelArtifactsInfo}async function fe(){const e=he.getSchemes(),t={};for(const n of e){const e=await he.getManager(n).listModels();for(const r in e){t[n+pe+r]=e[r]}}return t}async function ge(e){const t=de(e);return he.getManager(t.scheme).removeModel(t.path)}async function ye(e,t){return me(e,t,!1)}async function be(e,t){return me(e,t,!0)}class we{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){window&&(0,w.OB)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}}if((0,w.OB)().get("IS_BROWSER")){(0,w.OB)().setPlatform("browser",new we);try{he.registerManager(ue.URL_SCHEME,new ce)}catch(e){}try{he.registerManager(X.URL_SCHEME,new Y)}catch(e){}}const ve=()=>n(5410);let xe;class Ne{constructor(){this.util=n(8628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,w.OB)().global.fetch?(0,w.OB)().global.fetch(e,t):(null==xe&&(xe=ve()),xe(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}(0,w.OB)().get("IS_NODE")&&!(0,w.OB)().get("IS_BROWSER")&&(0,w.OB)().setPlatform("node",new Ne);var _e=n(3746),Se=n(6202),ke=n(1754),Te=n(3854),Ee=n(7184);(0,m.wv)();const Ie={buffer:_e.f,cast:Se.p,clone:ke.d,print:Te.S};(0,Ee.Vp)(Ie);function Ae(e){return new Promise((e=>setTimeout(e))).then(e)}class Me{constructor(e){if(!(0,w.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Me.URL_SCHEME)&&(e=e.slice(Me.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=D(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await Ae((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Ae((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:V(e)}}}}Me.URL_SCHEME="downloads://";class Oe{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const a=R(r,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(s).then((e=>[t,O(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>$(e.name))),r={};for(const s of e)s.paths.forEach((e=>{const s=$(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function $e(e){return new Oe(e)}function De(e,t,n,r){!function(e){(0,_.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,_.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,_.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,_.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const o=n+ ++s/e.length*(r-n);return t(o),a})),a))))}async function Be(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,w.OB)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await De(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await De(s,t.onProgress,.5,1)}async function Re(e,t="",n,r){return Ve((e=>Be(e,{requestInit:r})))(e,t,n)}function Ve(e){return async(t,n="",r)=>{const s=t.map((()=>!1)),a={},o=null!=r?r.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=S[u]*_.NA(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),o[n]=!0)})):c(),i.push(e.name),n+=l}))})),!o.every((e=>e))){const e=r.filter(((e,t)=>!o[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${i.join(", ")}.`)}const u=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),p={};let h=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[h+e].byteLength;const s=new ArrayBuffer(r),o=new Uint8Array(s);let i=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[h+e]);o.set(t,i),i+=t.byteLength}a[e].forEach((e=>{const t=E(s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)p[e]=t[e]})),h+=n})),p}}P.registerSaveRouter((e=>(0,w.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Me.URL_SCHEME)?function(e="model"){return new Me(e)}(e.slice(Me.URL_SCHEME.length)):null));class Ce{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,_.hu)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,w.OB)().platform.fetch,(0,_.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,_.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=D(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:V(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return R(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}(t),s=this.weightPathPrefix||n,a=C(e),o=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):o.push(s+e+r);this.weightUrlConverter&&o.push(...await Promise.all(i));return[a,O(await Be(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Fe(e){return null!=e.match(Ce.URL_SCHEME_REGEX)}Ce.URL_SCHEME_REGEX=/^https?:\/\//;const Pe=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Fe(e))):Fe(e),n)return Le(e,t)}return null};function Le(e,t){return new Ce(e,t)}function ze(e,t){return Le(e,t)}P.registerSaveRouter(Pe),P.registerLoadRouter(Pe);class We{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class qe{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class Ue{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function Ge(e,t,n,r){return new Ue(He(...arguments))}function He(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new We(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new We({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new We({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function je(e){return new qe(e)}function Ke(e){return new qe(e)}var Xe=n(2595),Qe=n(6793),Ye=n(5673),Ze=n(6273),Je=n(5347);const et=(0,Ze.op)({confusionMatrix_:function(e,t,n){const r=(0,Xe._1)(e,"labels","confusionMatrix"),s=(0,Xe._1)(t,"predictions","confusionMatrix");_.hu(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),_.hu(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),_.hu(1===s.rank,(()=>`Expected the rank of predictions to be 1, but got ${s.rank}`)),_.hu(r.shape[0]===s.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`)),_.hu(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const a=(0,Ye.l)((0,Se.p)(r,"int32"),n),o=(0,Ye.l)((0,Se.p)(s,"int32"),n),i=(0,Je.p)(a),u=(0,Qe.O)(i,o);return(0,Se.p)(u,"int32")}});var tt=n(4555),nt=n(3986),rt=n(8854),st=n(183);let at;function ot(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);i=!0}if(null!=(0,rt.pI)(nt.eBW,m.BV.backendName)){const n={pixels:e},r={numChannels:t};return m.BV.runKernel(nt.eBW,n,r)}const[u,l]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,p;if(o)c=e.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)c=e.data;else if(a||s||i){if(null==at)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");at=new OffscreenCanvas(1,1).getContext("2d")}else at=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});at.canvas.width=u,at.canvas.height=l,at.drawImage(e,0,0,u,l),c=at.getImageData(0,0,u,l).data}if(4===t)p=new Int32Array(c);else{const e=u*l;p=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)p[n*t+e]=c[4*n+e]}const h=[l,u,t];return(0,st.w)(p,h,"int32")}function it(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function ut(e,t=3){let n=null;if((0,w.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&it(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return ot(n,t)}async function lt(e,t){let n=(0,Xe._1)(e,"img","toPixels");if(!(e instanceof Ee.es)){const e=n;n=(0,Se.p)(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const o=await n.data(),i="float32"===n.dtype?255:1,u=new Uint8ClampedArray(s*r*4);for(let e=0;e<r*s;++e){const t=[0,0,0,255];for(let r=0;r<a;r++){const s=o[e*a+r];if("float32"===n.dtype){if(s<0||s>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${s}.`)}else if("int32"===n.dtype&&(s<0||s>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${s}.`);1===a?(t[0]=s*i,t[1]=s*i,t[2]=s*i):t[r]=s*i}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const ct=(0,Ze.op)({fromPixels_:ot});function pt(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===(0,_.NA)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let o=1;for(let e=0;e<s.length-1;++e)o*=s[e];const i=e.shape,u=s.slice();u.pop();let l=1;for(let e=a;e<n;++e)l*=i[e],u.push(i[e]);const c=[...(0,_.e3)(e.shape).map((e=>e/l)),1].slice(0,a);return[u,o,l,c]}var ht=n(1498);const dt=-2,mt=-1;function ft(e,t,n){const r=e.shape.length;_.hu(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),_.hu(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)_.hu(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function gt(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function yt(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function bt(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function wt(e,t,n){return n<=e?n:n-(t-1)}function vt(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function xt(e,t,n,r,s,a,o,i,u){const l=e.length;let c=new Array(l),p=new Array(l),h=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=Nt(o,u,l,r,e),p=_t(i,u,l,s,e),h=bt(a,u,l,e)}else for(let t=0;t<l;t++)c[t]=kt(o,r,a,e,t,u),p[t]=Tt(i,s,a,e,t,u),h[t]=St(a,t,u);return{begin:c,end:p,strides:h}}function Nt(e,t,n,r,s){const a=[...s],o=vt(n,t);for(let s=0;s<a.length;s++)if(o.indexOf(s)>-1)a[s]=0;else{const o=wt(t,n,s);let i=r[o];e&1<<o&&(i=0),a[s]=i}return a}function _t(e,t,n,r,s){const a=[...s],o=vt(n,t);for(let s=0;s<a.length;s++)if(o.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const o=wt(t,n,s);let i=r[o];e&1<<o&&(i=Number.MAX_SAFE_INTEGER),a[s]=i}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=_.uZ(0,a[e],s[e])}return a}function St(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function kt(e,t,n,r,s,a){let o=t[s];const i=n[s]||1;(e&1<<s||a&1<<s||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[s];return o<0&&(o+=u),o=_.uZ(0,o,u-1),o}function Tt(e,t,n,r,s,a){let o=t[s];const i=n[s]||1;(e&1<<s||a&1<<s||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[s];return o<0&&(o+=u),o=i>0?_.uZ(0,o,u):_.uZ(-1,o,u-1),o}function Et(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function It(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function At(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{_.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(_.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Mt(e,t,n,r,s,a,o,i,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=o&&0!=(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const p={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:s,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};for(let e=0;e<p.dims;e++)c&&0!=(1<<e&i)&&p.numAddAxisAfterEllipsis++,1<<e&o&&(c=!0);c||(p.ellipsisMask|=1<<p.dims,p.dims++);const h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(dt),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(mt),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(p,h);let d=!0,m=!0,f=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===h.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(h.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const s=[h.beginMask&1<<t,h.endMask&1<<t],a=[h.strides[t]>0?0:-1,h.strides[t]>0?r:r-1];if(n&&h.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");f=f&&1===h.strides[t];const o=!!(h.beginMask&1<<t&&h.endMask&1<<t);if(h.beginValid&&h.endValid){if(n){const e=h.begin[t]<0?r+h.begin[t]:h.begin[t];if(h.begin[t]=e,h.end[t]=h.begin[t]+1,e<0||e>=r)throw Error(`slice index ${h.begin[t]} of dimension ${t} out of bounds.`)}else h.begin[t]=Ot(h.begin[t],0,h.strides[t],r,s,a),h.end[t]=Ot(h.end[t],1,h.strides[t],r,s,a);const e=1===h.strides[t]&&0===h.begin[t]&&h.end[t]===r;d=d&&e,m=m&&(0===t&&1===h.strides[t]||e)}else d=d&&1===h.strides[t]&&o,m=m&&(0===t&&1===h.strides[t]||o);let i,u=!1;if(h.beginValid&&h.endValid?(i=h.end[t]-h.begin[t],u=!0):n?(i=1,u=!0):o&&r>=0&&(i=h.strides[t]<0?-r:r,u=!0),u){let e;e=0===i||i<0!=h.strides[t]<0?0:Math.trunc(i/h.strides[t])+(i%h.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<h.finalShapeGatherIndices.length;++e){const t=h.finalShapeGatherIndices[e];t>=0?y.push(g[t]):t===dt&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>h.finalShapeGatherIndices[t]!==dt)),finalShape:y,isIdentity:d,sliceDim0:m,isSimpleSlice:f,begin:h.begin,end:h.end,strides:h.strides}}function Ot(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}class $t{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Dt{constructor(){this.classNameMap={}}static getMap(){return null==Dt.instance&&(Dt.instance=new Dt),Dt.instance}static register(e){Dt.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Bt(e){(0,_.hu)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,_.hu)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,_.hu)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Dt.register(e)}var Rt=n(5810),Vt=n(6646);const Ct=.001,Ft=.1;function Pt(e,t,n){return null==n&&(n=Lt()),zt(e,t,((e,t)=>Gt(e,t,n)))}function Lt(){return 32===m.BV.backend.floatPrecision()?Ct:Ft}function zt(e,t,n){let r=!0;if(((0,_.fU)(e)||(0,_.fU)(t))&&(r=!1),(0,_.fU)(e)&&(0,_.fU)(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=(0,Xe.C)(e),r=(0,Xe.C)(t);if(!(0,_.cO)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=(0,_.fU)(e)?e:(0,_.xH)(e),a=(0,_.fU)(t)?t:(0,_.xH)(t);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.\nActual:   ${s}.\nExpected: ${a}.`);for(let e=0;e<a.length;++e){const t=s[e],r=a[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${s}.\nExpected: ${a}.`)}"undefined"!=typeof expect&&expect().nothing()}function Wt(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!=typeof expect&&expect().nothing()}function qt(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return(0,_.HD)(e)||(0,_.HD)(e[0])||(0,_.HD)(t)||(0,_.HD)(t[0])?zt(e,n,((e,t)=>e==t)):zt(e,t,((e,t)=>Gt(e,t,0)))}function Ut(e,t,n){if(null==n&&(n=Lt()),!Gt(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function Gt(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Ht(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function jt(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function Kt(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Kt(n):e[t]=(0,Vt.encodeString)(n)}return e}function Xt(e){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function Qt(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}const Yt="3.21.0";var Zt=n(2811),Jt=n(2889),en=n(6129),tn=n(3510),nn=n(8460),rn=n(5272),sn=n(2448),an=n(9541),on=n(6461);class un extends $t{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return(0,Zt.B9)(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,an.pn)(e,t)}dispose(){null!=this.iterations_&&(0,Zt.B9)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,on.i)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(un,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class ln extends un{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=m.BV.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=m.BV.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:(0,Zt.lu)((()=>(0,sn.P)(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:(0,Zt.lu)((()=>(0,sn.P)(r).variable(false)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;(0,Zt.lu)((()=>{const e=(0,Jt.I)((0,tn.d)(a,this.rho),(0,tn.d)((0,rn.h)(s),1-this.rho)),t=(0,tn.d)((0,en.h)((0,nn._)((0,Jt.I)(o,this.epsilon)),(0,nn._)((0,Jt.I)(a,this.epsilon))),s),n=(0,Jt.I)((0,tn.d)(o,this.rho),(0,tn.d)((0,rn.h)(t),1-this.rho));a.assign(e),o.assign(n);const i=(0,Jt.I)((0,tn.d)(t,-this.learningRate),r);r.assign(i)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,Zt.B9)(this.accumulatedGrads.map((e=>e.variable))),(0,Zt.B9)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}ln.className="Adadelta",Bt(ln);var cn=n(6052);class pn extends un{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=m.BV.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:(0,Zt.lu)((()=>(0,cn.h)(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;(0,Zt.lu)((()=>{const e=(0,Jt.I)(a,(0,rn.h)(s));a.assign(e);const t=(0,Jt.I)((0,tn.d)((0,en.h)(s,(0,nn._)((0,Jt.I)(e,m.BV.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,Zt.B9)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}pn.className="Adagrad",Bt(pn);var hn=n(4850),dn=n(7996);class mn extends un{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,Zt.lu)((()=>{this.accBeta1=(0,on.i)(t).variable(),this.accBeta2=(0,on.i)(n).variable()})),null==r&&(this.epsilon=m.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,Zt.lu)((()=>{const n=(0,dn.l)(1,this.accBeta1),r=(0,dn.l)(1,this.accBeta2);t.forEach(((t,s)=>{const a=m.BV.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:(0,Zt.lu)((()=>(0,sn.P)(a).variable(false)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:(0,Zt.lu)((()=>(0,sn.P)(a).variable(false)))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,l=(0,Jt.I)((0,tn.d)(i,this.beta1),(0,tn.d)(o,1-this.beta1)),c=(0,Jt.I)((0,tn.d)(u,this.beta2),(0,tn.d)((0,rn.h)(o),1-this.beta2)),p=(0,en.h)(l,n),h=(0,en.h)(c,r);i.assign(l),u.assign(c);const d=(0,Jt.I)((0,tn.d)((0,en.h)(p,(0,Jt.I)((0,nn._)(h),this.epsilon)),-this.learningRate),a);a.assign(d)})),this.accBeta1.assign((0,tn.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,tn.d)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,Zt.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,Zt.B9)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,Zt.lu)((()=>{this.accBeta1.assign((0,hn.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,hn.s)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}mn.className="Adam",Bt(mn);var fn=n(2905),gn=n(2638);class yn extends un{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,Zt.lu)((()=>{this.iteration=(0,on.i)(0).variable(),this.accBeta1=(0,on.i)(t).variable()})),null==r&&(this.epsilon=m.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,Zt.lu)((()=>{const n=(0,dn.l)(1,this.accBeta1),r=(0,en.h)(-this.learningRate,(0,Jt.I)((0,tn.d)(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=m.BV.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:(0,sn.P)(a).variable(false)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:(0,sn.P)(a).variable(false)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,l=(0,Jt.I)((0,tn.d)(i,this.beta1),(0,tn.d)(o,1-this.beta1)),c=(0,tn.d)(u,this.beta2),p=(0,fn.W)(o),h=(0,gn.g)(c,p);i.assign(l),u.assign(h);const d=(0,Jt.I)((0,tn.d)((0,en.h)(r,n),(0,en.h)(l,(0,Jt.I)(h,this.epsilon))),a);a.assign(d)})),this.iteration.assign((0,Jt.I)(this.iteration,1)),this.accBeta1.assign((0,tn.d)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,Zt.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,Zt.B9)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}yn.className="Adamax",Bt(yn);class bn extends un{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=m.BV.registeredVariables[t];(0,Zt.lu)((()=>{const e=(0,Jt.I)((0,tn.d)(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,Zt.Cn)((0,on.i)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}bn.className="SGD",Bt(bn);class wn extends bn{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,on.i)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=m.BV.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:(0,Zt.lu)((()=>(0,sn.P)(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&(0,Zt.lu)((()=>{let e;const t=(0,Jt.I)((0,tn.d)(this.m,s),a);e=this.useNesterov?(0,Jt.I)((0,tn.d)(this.c,(0,Jt.I)(a,(0,tn.d)(t,this.m))),r):(0,Jt.I)((0,tn.d)(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,Zt.B9)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}wn.className="Momentum",Bt(wn);class vn extends un{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=m.BV.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=m.BV.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:(0,Zt.lu)((()=>(0,sn.P)(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:(0,Zt.lu)((()=>(0,sn.P)(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:(0,Zt.lu)((()=>(0,sn.P)(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;(0,Zt.lu)((()=>{const e=(0,Jt.I)((0,tn.d)(o,this.decay),(0,tn.d)((0,rn.h)(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=(0,Jt.I)((0,tn.d)(t,this.decay),(0,tn.d)(a,1-this.decay)),u=(0,en.h)((0,tn.d)(a,this.learningRate),(0,nn._)((0,dn.l)(e,(0,Jt.I)((0,rn.h)(s),this.epsilon)))),l=(0,Jt.I)((0,tn.d)(i,this.momentum),u);o.assign(e),t.assign(s),i.assign(l);const c=(0,dn.l)(r,l);r.assign(c)}else{const e=(0,Jt.I)((0,tn.d)(o,this.decay),(0,tn.d)((0,rn.h)(a),1-this.decay)),t=(0,Jt.I)((0,tn.d)(i,this.momentum),(0,en.h)((0,tn.d)(a,this.learningRate),(0,nn._)((0,Jt.I)(e,this.epsilon))));o.assign(e),i.assign(t);const n=(0,dn.l)(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,Zt.B9)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,Zt.B9)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,Zt.B9)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}vn.className="RMSProp",Bt(vn);class xn{static sgd(e){return new bn(e)}static momentum(e,t,n=!1){return new wn(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new vn(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new mn(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new ln(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new yn(e,t,n,r,s)}static adagrad(e,t=.1){return new pn(e,t)}}var Nn=n(9029),_n=n(2930),Sn=n(8038);const kn={sgd:xn.sgd,momentum:xn.momentum,adadelta:xn.adadelta,adagrad:xn.adagrad,rmsprop:xn.rmsprop,adamax:xn.adamax,adam:xn.adam},Tn="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function En(){return new Promise((e=>Tn((()=>e()))))}var In=n(6562);function An(e,t){const n=e[0].length;e.forEach(((e,t)=>{_.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),_.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)_.hu(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Mn(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var On,$n=n(9295),Dn=n(4559);function Bn(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const a=n[s],o=r[r.length-n.length+s],i=r[o];if(a>=0)if(i>=0){if(i!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${a} but shape[${s+e}] = ${i}`)}else r[o]=a}return r}function Rn(e){const t={FIRST_DIM_SIZE:On.FIRST_DIM_SIZE,VALUE_ROWIDS:On.VALUE_ROWIDS,ROW_LENGTHS:On.ROW_LENGTHS,ROW_SPLITS:On.ROW_SPLITS,ROW_LIMITS:On.ROW_LIMITS,ROW_STARTS:On.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function Vn(e){return 0===e.length?0:e[0]===On.FIRST_DIM_SIZE?e.length-1:e.length}function Cn(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(On||(On={}));const Fn=30;function Pn(e){return e<=Fn?e:(0,_.jP)(e,Math.floor(Math.sqrt(e)))}function Ln(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function zn(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Wn(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function qn(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function Un(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Gn(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}const Hn=1.7580993408473768,jn=1.0507009873554805,Kn=.3275911,Xn=.254829592,Qn=-.284496736,Yn=1.421413741,Zn=-1.453152027,Jn=1.061405429;var er=n(1741);function tr(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function nr(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function rr(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function sr(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function ar(e,t){return{real:e[2*t],imag:e[2*t+1]}}function or(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function ir(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function ur(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const lr="->",cr=/->/g,pr=",",hr="...";function dr(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(cr,"").length)/lr.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${lr}").`);const[r,s]=e.split(lr);(0,_.hu)(-1===r.indexOf(hr),(()=>`The ellipsis notation ("${hr}") is not supported yet.`));const a=r.split(pr),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let e=0;e<s.length;++e){const t=s[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===i.indexOf(t)&&i.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===i.indexOf(t)&&t!==pr&&i.push(t)}const u=new Array(a.length);for(let e=0;e<o;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<a[e].length;++t)u[e].push(i.indexOf(a[e][t]))}const l=i.length,c=[];for(let e=s.length;e<l;++e)c.push(e);return{allDims:i,summedDims:c,idDims:u}}function mr(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function fr(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:(0,_.hu)(r[t[e][n]]===s[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function gr(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const a=[];for(let e=0;e<n.length;++e){const s=br(t,n[e]);for(const t of s)-1===a.indexOf(t)&&(r[e].push(t),a.push(t))}return{path:n,steps:r}}function yr(e){return e.every(((e,t)=>e===t))}function br(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function wr(e,t,n=0){let r=[];if("number"==typeof t)(0,_.hu)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,_.hu)(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}(0,_.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function vr(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function xr(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Nr(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function _r(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Sr(e,t){return`size ${e} must be non-negative, not ${t}`}function kr(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Tr(e,t){return`Input to reshape is a SparseTensor with ${(0,_.NA)(e)}\n  dense values, but the requested shape requires a multiple of ${(0,_.NA)(t)}. inputShape=${e} outputShape= ${t}`}function Er(e,t){return`Input to reshape is a tensor with ${(0,_.NA)(e)} dense values, but the requested shape has ${(0,_.NA)(t)}. inputShape=${e} outputShape=${t}`}function Ir(){return"segment ids must be >= 0"}function Ar(){return"segment ids are not increasing"}function Mr(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Or(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function $r(e,t){let n,r=!1;for(e<=Fn?(n=e,r=!0):n=(0,_.jP)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=(0,_.jP)(e,n+1);return n}function Dr(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function Br(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const o=e.shape[n],i=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)i.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)i.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<s;e++)i.push(t.shape[e]);for(let t=n+1;t<a;t++)i.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:o,outputShape:i}}function Rr(e){try{return e.map((e=>(0,Vt.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Vr(e){return e.map((e=>(0,Vt.encodeString)(e)))}var Cr=n(447),Fr=n(9490),Pr=n(4810)},3986:(e,t,n)=>{"use strict";n.d(t,{$HU:()=>mt,$g6:()=>J,$w:()=>K,Acj:()=>ge,BMI:()=>Fe,BiW:()=>pt,Byc:()=>L,CAk:()=>ke,D2d:()=>Ut,DlI:()=>lt,Eh3:()=>O,FKq:()=>Rt,G3Y:()=>rn,GBy:()=>Vt,Gcp:()=>Pt,HEU:()=>te,HZH:()=>gt,Hhh:()=>Ve,Hmb:()=>bt,IKK:()=>l,IMb:()=>v,J$2:()=>_e,J_u:()=>we,JhU:()=>y,Kgp:()=>ot,L8s:()=>Ft,Ly9:()=>S,M2y:()=>h,MIZ:()=>Jt,MRv:()=>Bt,MZg:()=>Oe,NEP:()=>se,NZg:()=>Xe,O3z:()=>Lt,OAf:()=>ze,OR:()=>ce,OU7:()=>We,OV7:()=>Le,Omj:()=>ne,Oyi:()=>f,PYm:()=>Ae,PhF:()=>Et,QCc:()=>g,QRR:()=>q,Qg5:()=>be,QiL:()=>st,Qvg:()=>on,RFZ:()=>T,ROF:()=>b,RQH:()=>Mt,RuY:()=>ln,SX0:()=>ee,SYM:()=>r,SbG:()=>xt,SpW:()=>a,T0n:()=>U,TQc:()=>Ct,TR1:()=>P,ToN:()=>an,Tr8:()=>Yt,Uyb:()=>le,VGw:()=>s,Vbg:()=>Ke,VcC:()=>W,VfG:()=>Me,Vn9:()=>Y,W0H:()=>tt,XDQ:()=>un,XLW:()=>x,XkS:()=>Qt,Xze:()=>i,Y0y:()=>oe,YFo:()=>ae,YoZ:()=>Ce,ZbH:()=>Ee,ZjV:()=>qt,Zz9:()=>A,_JP:()=>Kt,_V0:()=>mn,_Yw:()=>wt,_k9:()=>w,_tC:()=>Gt,a5O:()=>Dt,aJk:()=>p,avt:()=>ve,b9H:()=>hn,bK0:()=>Ht,bV0:()=>St,c17:()=>Ge,cWu:()=>tn,cie:()=>G,cye:()=>et,dDz:()=>ct,deh:()=>ue,dpD:()=>yt,e07:()=>_t,e6w:()=>ht,e7N:()=>Te,eBW:()=>pn,eEB:()=>k,eZ0:()=>Re,ekb:()=>Q,gJX:()=>E,h8e:()=>cn,hdR:()=>re,i5y:()=>$t,iHb:()=>z,iJz:()=>ye,iWB:()=>xe,iZT:()=>fe,ik2:()=>C,jMg:()=>m,jQk:()=>jt,jQs:()=>je,jeX:()=>pe,kU:()=>Ie,kpP:()=>sn,kuV:()=>Ye,luS:()=>fn,lyA:()=>at,mKl:()=>Nt,mTV:()=>Pe,mc4:()=>F,mhS:()=>$,mm_:()=>o,n9L:()=>en,nhH:()=>zt,nr8:()=>Tt,o0g:()=>ut,o2y:()=>V,oFR:()=>It,oHH:()=>Z,oT6:()=>u,p2w:()=>At,p4S:()=>X,pe_:()=>it,q1x:()=>me,q2K:()=>Ue,q8u:()=>He,qCd:()=>De,qIC:()=>Be,qWM:()=>nt,qi_:()=>de,qkr:()=>ft,qw7:()=>d,r7n:()=>Ne,s1s:()=>Xt,sEM:()=>Zt,sHE:()=>he,sJF:()=>c,sL$:()=>H,usg:()=>dn,uv1:()=>Je,vFR:()=>qe,vtC:()=>Se,vwp:()=>ie,w3H:()=>Wt,w6g:()=>$e,wUP:()=>D,wYB:()=>Ot,wYn:()=>Qe,we_:()=>rt,wm:()=>B,wx7:()=>nn,x12:()=>R,xJR:()=>dt,xQA:()=>kt,xnO:()=>I,y7R:()=>j,yQU:()=>Ze,yj2:()=>M,zbQ:()=>vt,zvY:()=>_,zws:()=>N});const r="Abs",s="Acos",a="Acosh",o="Add",i="AddN",u="All",l="Any",c="ArgMax",p="ArgMin",h="Asin",d="Asinh",m="Atan",f="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",w="AvgPool3D",v="AvgPool3DGrad",x="BatchMatMul",N="BatchToSpaceND",_="Bincount",S="BroadcastTo",k="BroadcastArgs",T="Cast",E="Ceil",I="ClipByValue",A="Complex",M="ComplexAbs",O="Concat",$="Conv2D",D="Conv2DBackpropFilter",B="Conv2DBackpropInput",R="Conv3D",V="Conv3DBackpropFilterV2",C="Conv3DBackpropInputV2",F="Cos",P="Cosh",L="Cumprod",z="Cumsum",W="CropAndResize",q="DenseBincount",U="DepthToSpace",G="DepthwiseConv2dNative",H="DepthwiseConv2dNativeBackpropFilter",j="DepthwiseConv2dNativeBackpropInput",K="Diag",X="Dilation2D",Q="Dilation2DBackpropInput",Y="Dilation2DBackpropFilter",Z="RealDiv",J="Einsum",ee="Elu",te="EluGrad",ne="Erf",re="Equal",se="Exp",ae="ExpandDims",oe="Expm1",ie="FFT",ue="Fill",le="FlipLeftRight",ce="Floor",pe="FloorDiv",he="FusedBatchNorm",de="GatherV2",me="GatherNd",fe="Greater",ge="GreaterEqual",ye="Identity",be="IFFT",we="Imag",ve="IsFinite",xe="IsInf",Ne="IsNan",_e="LeakyRelu",Se="Less",ke="LessEqual",Te="LinSpace",Ee="Log",Ie="Log1p",Ae="LogicalAnd",Me="LogicalNot",Oe="LogicalOr",$e="LogicalXor",De="LogSoftmax",Be="LowerBound",Re="LRN",Ve="LRNGrad",Ce="Max",Fe="Maximum",Pe="MaxPool",Le="MaxPoolGrad",ze="MaxPool3D",We="MaxPool3DGrad",qe="MaxPoolWithArgmax",Ue="Mean",Ge="Min",He="Minimum",je="MirrorPad",Ke="Mod",Xe="Multinomial",Qe="Multiply",Ye="Neg",Ze="NotEqual",Je="NonMaxSuppressionV3",et="NonMaxSuppressionV4",tt="NonMaxSuppressionV5",nt="OnesLike",rt="OneHot",st="Pack",at="PadV2",ot="Pool",it="Pow",ut="Prelu",lt="Prod",ct="RaggedGather",pt="RaggedTensorToTensor",ht="Range",dt="Real",mt="Reciprocal",ft="Relu",gt="Reshape",yt="ResizeNearestNeighbor",bt="ResizeNearestNeighborGrad",wt="ResizeBilinear",vt="ResizeBilinearGrad",xt="Relu6",Nt="Reverse",_t="Round",St="Rsqrt",kt="ScatterNd",Tt="SearchSorted",Et="Select",It="Selu",At="Slice",Mt="Sin",Ot="Sinh",$t="Sign",Dt="Sigmoid",Bt="Softplus",Rt="Sqrt",Vt="Sum",Ct="SpaceToBatchND",Ft="SplitV",Pt="Softmax",Lt="SparseFillEmptyRows",zt="SparseReshape",Wt="SparseSegmentMean",qt="SparseSegmentSum",Ut="SparseToDense",Gt="SquaredDifference",Ht="Square",jt="StridedSlice",Kt="StringNGrams",Xt="StringSplit",Qt="StringToHashBucketFast",Yt="Sub",Zt="Tan",Jt="Tanh",en="Tile",tn="TopK",nn="Transform",rn="Transpose",sn="Unique",an="Unpack",on="UnsortedSegmentSum",un="UpperBound",ln="ZerosLike",cn="Step",pn="FromPixels",hn="RotateWithOffset",dn="_FusedMatMul",mn="FusedConv2D",fn="FusedDepthwiseConv2D"},8854:(e,t,n)=>{"use strict";n.d(t,{Li:()=>h,T3:()=>f,bt:()=>m,nE:()=>d,pI:()=>u,tr:()=>c,uk:()=>l,wC:()=>p});var r=n(1055),s=n(137),a=n(1741);const o=(0,s.R)("kernelRegistry",(()=>new Map)),i=(0,s.R)("gradRegistry",(()=>new Map));function u(e,t){const n=g(e,t);return o.get(n)}function l(e){return i.get(e)}function c(e){const t=o.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,o]=s,[i]=a.split("_");i===e&&n.push(o)}return n}function p(e){const{kernelName:t,backendName:n}=e,r=g(t,n);o.has(r)&&a.Z(`The kernel '${t}' for backend '${n}' is already registered`),o.set(r,e)}function h(e){const{kernelName:t}=e;i.has(t)&&(0,r.OB)().getBool("DEBUG")&&a.Z(`Overriding the gradient for '${t}'`),i.set(t,e)}function d(e,t){const n=g(e,t);if(!o.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);o.delete(n)}function m(e){if(!i.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);i.delete(e)}function f(e,t){c(e).forEach((e=>{p(Object.assign({},e,{backendName:t}))}))}function g(e,t){return`${t}_${e}`}},1741:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s,c:()=>a});var r=n(1055);function s(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.warn(...e)}function a(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.log(...e)}},2905:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var r=n(2543),s=n(3986),a=n(2595);const o=(0,n(6273).op)({abs_:function(e){const t=(0,a._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.BV.runKernel(s.yj2,e)}{const e={x:t};return r.BV.runKernel(s.SYM,e)}}})},2889:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var r=n(2543),s=n(3986),a=n(5810),o=n(2595);const i=(0,n(6273).op)({add_:function(e,t){let n=(0,o._1)(e,"a","add"),i=(0,o._1)(t,"b","add");[n,i]=(0,a.makeTypesMatch)(n,i);const u={a:n,b:i};return r.BV.runKernel(s.mm_,u)}})},6562:(e,t,n)=>{"use strict";n.d(t,{LJ:()=>c,Q3:()=>l,Vh:()=>a,YB:()=>s,kz:()=>o,lB:()=>u,rv:()=>i,sY:()=>p});var r=n(7186);function s(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function a(e,t,n){const r=e.length+t.length,s=[];let a=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?s.push(e[a++]):s.push(t[o++]);return s}function o(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function i(e,t){return a(e,t.map((e=>1)),t)}function u(e,t,n){r.hu(s(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function l(e,t){if(s(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function p(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},4555:(e,t,n)=>{"use strict";function r(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,o=e[a]||1;(t[t.length-1-s]||1)>1&&1===o&&r.unshift(a)}return r}function s(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,o=t[a];(null==s||1===s&&o>1)&&n.unshift(a)}return n}function a(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}n.r(t),n.d(t,{assertAndGetBroadcastShape:()=>a,getBroadcastDims:()=>r,getReductionAxes:()=>s})},3746:(e,t,n)=>{"use strict";n.d(t,{f:()=>a});var r=n(7184),s=n(7186);function a(e,t="float32",n){return t=t||"float32",s.Mu(e),new r.YD(e,t,n)}},6202:(e,t,n)=>{"use strict";n.d(t,{p:()=>i});var r=n(2543),s=n(3986),a=n(2595),o=n(7186);const i=(0,n(6273).op)({cast_:function(e,t){const n=(0,a._1)(e,"x","cast");if(!o.LP(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},u={dtype:t};return r.BV.runKernel(s.RFZ,i,u)}})},1754:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var r=n(2543),s=n(3986),a=n(2595);const o=(0,n(6273).op)({clone_:function(e){const t={x:(0,a._1)(e,"x","clone","string_or_numeric")};return r.BV.runKernel(s.iJz,t)}})},6194:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(2543),s=n(3986),a=n(2595),o=n(7186);const i=(0,n(6273).op)({complex_:function(e,t){const n=(0,a._1)(e,"real","complex"),i=(0,a._1)(t,"imag","complex");o.k5(n.shape,i.shape,`real and imag shapes, ${n.shape} and ${i.shape}, must match in call to tf.complex().`);const u={real:n,imag:i};return r.BV.runKernel(s.Zz9,u)}})},9295:(e,t,n)=>{"use strict";n.d(t,{I0:()=>m,Ix:()=>i,Rf:()=>s,Xw:()=>a,aO:()=>l,jT:()=>f,jw:()=>u,m:()=>y,pl:()=>o,sl:()=>g});var r=n(7186);function s(e,t,n,r,s="NHWC",a){return i(e,[...t,e[3]],n,a,r,null,null,g(s))}function a(e,t,n,r,s,a,o="channelsLast"){const[u,l]=c(t);let p;if("channelsLast"===o)p=[u,l,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);p=[u,l,e[1],e[1]]}return i(e,p,n,r,s,a,!1,o)}function o(e,t,n,r,s,a,o="NDHWC"){const[i,l,c]=p(t);let h,d;if("NDHWC"===o)d="channelsLast",h=[i,l,c,e[4],e[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);d="channelsFirst",h=[i,l,c,e[1],e[1]]}return u(e,h,n,r,s,!1,d,a)}function i(e,t,n,r,s,a,o=!1,i="channelsLast"){let[u,p,m,f]=[-1,-1,-1,-1];if("channelsLast"===i)[u,p,m,f]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,f,p,m]=e}const[g,y,,b]=t,[w,v]=c(n),[x,N]=c(r),_=h(g,x),S=h(y,N),{padInfo:k,outHeight:T,outWidth:E}=function(e,t,n,r,s,a,o,i,u){let c,p,h;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=l(e,t,n));const a=e[0],o=e[1],i=d((a-t+2*r)/n+1,s),u=d((o-t+2*r)/n+1,s);return[i,u]}([t,n],a,r,e,i);p=s[0],h=s[1]}else if("same"===e){p=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(p-1)*r+a-t),i=Math.max(0,(h-1)*s+o-n),u=Math.floor(e/2),l=e-u,d=Math.floor(i/2);c={top:u,bottom:l,left:d,right:i-d,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((t-a+1)/r),h=Math.ceil((n-o+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const l="channelsLast"===u?e[1][0]:e[2][0],m="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],g="channelsLast"===u?e[2][1]:e[3][1];c={top:l,bottom:m,left:f,right:g,type:0===l&&0===m&&0===f&&0===g?"VALID":"EXPLICIT"},p=d((t-a+l+m)/r+1,i),h=d((n-o+f+g)/s+1,i)}}return{padInfo:c,outHeight:p,outWidth:h}}(s,p,m,w,v,_,S,a,i),I=o?b*f:b;let A;return"channelsFirst"===i?A=[u,I,T,E]:"channelsLast"===i&&(A=[u,T,E,I]),{batchSize:u,dataFormat:i,inHeight:p,inWidth:m,inChannels:f,outHeight:T,outWidth:E,outChannels:I,padInfo:k,strideHeight:w,strideWidth:v,filterHeight:g,filterWidth:y,effectiveFilterHeight:_,effectiveFilterWidth:S,dilationHeight:x,dilationWidth:N,inShape:e,outShape:A,filterShape:t}}function u(e,t,n,r,s,a=!1,o="channelsLast",i){let[u,c,m,f,g]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,c,m,f,g]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,g,c,m,f]=e}const[y,b,w,,v]=t,[x,N,_]=p(n),[S,k,T]=p(r),E=h(y,S),I=h(b,k),A=h(w,T),{padInfo:M,outDepth:O,outHeight:$,outWidth:D}=function(e,t,n,r,s,a,o,i,u,c,p){let h,m,f,g;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,s,a){null==s&&(s=l(e,t,r));const o=e[0],i=e[1],u=e[2],c=d((o-t+2*s)/r+1,a),p=d((i-t+2*s)/r+1,a),h=d((u-t+2*s)/r+1,a);return[c,p,h,n]}([t,n,r,1],i,1,s,e,p);m=a[0],f=a[1],g=a[2]}else if("same"===e){m=Math.ceil(t/s),f=Math.ceil(n/a),g=Math.ceil(r/o);const e=(m-1)*s+i-t,l=(f-1)*a+u-n,p=(g-1)*o+c-r,d=Math.floor(e/2),y=e-d,b=Math.floor(l/2),w=l-b,v=Math.floor(p/2);h={top:b,bottom:w,left:v,right:p-v,front:d,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},m=Math.ceil((t-i+1)/s),f=Math.ceil((n-u+1)/a),g=Math.ceil((r-c+1)/o)}return{padInfo:h,outDepth:m,outHeight:f,outWidth:g}}(s,c,m,f,x,N,_,E,I,A,i),B=a?v*g:v;let R;return"channelsFirst"===o?R=[u,B,O,$,D]:"channelsLast"===o&&(R=[u,O,$,D,B]),{batchSize:u,dataFormat:o,inDepth:c,inHeight:m,inWidth:f,inChannels:g,outDepth:O,outHeight:$,outWidth:D,outChannels:B,padInfo:M,strideDepth:x,strideHeight:N,strideWidth:_,filterDepth:y,filterHeight:b,filterWidth:w,effectiveFilterDepth:E,effectiveFilterHeight:I,effectiveFilterWidth:A,dilationDepth:S,dilationHeight:k,dilationWidth:T,inShape:e,outShape:R,filterShape:t}}function l(e,t,n,r=1){const s=h(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function c(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function p(e){return"number"==typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function d(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function m(e){const[t,n,r]=c(e);return 1===t&&1===n&&1===r}function f(e,t){return m(e)||m(t)}function g(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function y(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)r.hu(r.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{r.hu(r.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}},6129:(e,t,n)=>{"use strict";n.d(t,{h:()=>u});var r=n(2543),s=n(3986),a=n(5810),o=n(2595),i=n(854);const u=(0,n(6273).op)({div_:function(e,t){let n=(0,o._1)(e,"a","div"),u=(0,o._1)(t,"b","div");if([n,u]=(0,a.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return(0,i.q)(n,u);const l={a:n,b:u};return r.BV.runKernel(s.oHH,l,{})}})},579:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(2543),s=n(3986),a=n(2595);const o=(0,n(6273).op)({elu_:function(e){const t={x:(0,a._1)(e,"x","elu","float32")};return r.BV.runKernel(s.SX0,t)}})},6052:(e,t,n)=>{"use strict";n.d(t,{h:()=>a});var r=n(2543),s=n(3986);function a(e,t,n){const a={shape:e,value:t,dtype:n};return r.BV.runKernel(s.deh,{},a)}},854:(e,t,n)=>{"use strict";n.d(t,{q:()=>i});var r=n(2543),s=n(3986),a=n(5810),o=n(2595);const i=(0,n(6273).op)({floorDiv_:function(e,t){let n=(0,o._1)(e,"a","floorDiv"),i=(0,o._1)(t,"b","floorDiv");[n,i]=(0,a.makeTypesMatch)(n,i);const u={a:n,b:i};return r.BV.runKernel(s.jeX,u)}})},4559:(e,t,n)=>{"use strict";n.d(t,{Fr:()=>m,QH:()=>g,pf:()=>f,uy:()=>y});var r=n(4555),s=n(579),a=n(7615),o=n(3510),i=n(1041),u=n(6348),l=n(5350),c=n(3772),p=n(9544),h=n(6757),d=n(4550);function m(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,o.d)(e,(0,h.N)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function f(e,t){let n=t;const s=r.getReductionAxes(e.shape,t.shape);return s.length>0&&(n=(0,d.S)(n,s)),(0,c.X)(n,e.shape)}function g(e,t,n,r){if("linear"===t)return e;if("relu"===t)return(0,u.U)(e);if("elu"===t)return(0,s.p)(e);if("relu6"===t)return(0,l.b)(e);if("prelu"===t)return(0,i.A)(e,n);if("leakyrelu"===t)return(0,a.h)(e,r);if("sigmoid"===t)return(0,p.X)(e);throw new Error(`Unknown fused activation ${t}.`)}const y=(e,t)=>!(e>0)||"linear"===t},9837:(e,t,n)=>{"use strict";n.d(t,{a:()=>o});var r=n(2543),s=n(3986),a=n(2595);const o=(0,n(6273).op)({imag_:function(e){const t={input:(0,a._1)(e,"input","imag")};return r.BV.runKernel(s.J_u,t)}})},7615:(e,t,n)=>{"use strict";n.d(t,{h:()=>o});var r=n(2543),s=n(3986),a=n(2595);const o=(0,n(6273).op)({leakyRelu_:function(e,t=.2){const n={x:(0,a._1)(e,"x","leakyRelu")},o={alpha:t};return r.BV.runKernel(s.J$2,n,o)}})},8038:(e,t,n)=>{"use strict";var r;n.d(t,{I:()=>r}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},6793:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var r=n(2543),s=n(3986),a=n(5810),o=n(2595);const i=(0,n(6273).op)({matMul_:function(e,t,n=!1,i=!1){let u=(0,o._1)(e,"a","matMul"),l=(0,o._1)(t,"b","matMul");[u,l]=(0,a.makeTypesMatch)(u,l);const c={a:u,b:l},p={transposeA:n,transposeB:i};return r.BV.runKernel(s.XLW,c,p)}})},2638:(e,t,n)=>{"use strict";n.d(t,{g:()=>l});var r=n(2543),s=n(3986),a=n(5810),o=n(2595),i=n(4555),u=n(6202);const l=(0,n(6273).op)({maximum_:function(e,t){let n=(0,o._1)(e,"a","maximum"),l=(0,o._1)(t,"b","maximum");[n,l]=(0,a.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const c={a:n,b:l};return r.BV.runKernel(s.BMI,c)}})},3510:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(2543),s=n(3986),a=n(5810),o=n(2595);const i=(0,n(6273).op)({mul_:function(e,t){let n=(0,o._1)(e,"a","mul"),i=(0,o._1)(t,"b","mul");[n,i]=(0,a.makeTypesMatch)(n,i);const u={a:n,b:i};return r.BV.runKernel(s.wYn,u)}})},9372:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var r=n(2543),s=n(3986),a=n(2595);const o=(0,n(6273).op)({neg_:function(e){const t={x:(0,a._1)(e,"x","neg")};return r.BV.runKernel(s.kuV,t)}})},5673:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var r=n(2543),s=n(3986),a=n(2595);const o=(0,n(6273).op)({oneHot_:function(e,t,n=1,o=0,i="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const u={indices:(0,a._1)(e,"indices","oneHot","int32")},l={dtype:i,depth:t,onValue:n,offValue:o};return r.BV.runKernel(s.we_,u,l)}})},6273:(e,t,n)=>{"use strict";n.d(t,{op:()=>o,z:()=>a});var r=n(2543),s=n(7186);const a="__op";function o(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const o=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=a;const i=(...e)=>{r.BV.startScope(n);try{const t=o(...e);return(0,s.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),r.BV.endScope(t),t}catch(e){throw r.BV.endScope(null),e}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},2930:(e,t,n)=>{"use strict";n.d(t,{zvA:()=>u.z,WnP:()=>s.W,Khb:()=>l,__u:()=>c,IHx:()=>p.I,QBD:()=>d,$6P:()=>m,YjB:()=>f,NqF:()=>g,vHJ:()=>y,ZRM:()=>b,VfV:()=>w,z4N:()=>v,fvJ:()=>N,C80:()=>_,wS1:()=>E,uR5:()=>I,zEQ:()=>V,tgs:()=>F,Dxk:()=>P,JY5:()=>L,p3b:()=>z,E4h:()=>C,yE8:()=>W,anm:()=>nr,XsQ:()=>q,UFq:()=>U,f3b:()=>G.f,pju:()=>S.p,mDi:()=>H,iUl:()=>K,d9v:()=>A.d,PYB:()=>X.P,zoF:()=>M,gME:()=>Q,Izb:()=>Y,MNy:()=>Z,ZaL:()=>J,PAt:()=>te,Tek:()=>ee,bc:()=>re,pdZ:()=>se,$QV:()=>oe,mCk:()=>ie,f9Y:()=>ue,mew:()=>pr,$Gn:()=>le,zbp:()=>ce,ppE:()=>pe,nTT:()=>he,B10:()=>de,Ka3:()=>me,WmZ:()=>fe,hiC:()=>ge.h,NTj:()=>xe,AKD:()=>Ne,rvX:()=>lr,WYO:()=>_e,pyx:()=>Se.p,GRh:()=>cr,DgJ:()=>be,qNN:()=>ke,d2q:()=>Ve,Qqt:()=>Ce,dt4:()=>Fe,t$B:()=>Pe,iyy:()=>ze,kp_:()=>In,hlL:()=>j.h,GWj:()=>We,qPi:()=>qe.q,imm:()=>r,Iqj:()=>Ue,dbB:()=>ur,pjt:()=>Ge,brS:()=>He,Sxn:()=>An,asL:()=>je.a,BHj:()=>cs,V3u:()=>hr,wx0:()=>Mn,xVT:()=>Ke,UWc:()=>Xe,i2d:()=>Qe,hi7:()=>Ye.h,d9m:()=>Ze,zN1:()=>Je,$r2:()=>ps,SX3:()=>et,G9k:()=>tt,cM7:()=>nt,Krr:()=>rt,e_t:()=>it,CmS:()=>lt,l_t:()=>ct,HvI:()=>pt,hJK:()=>ht,K5V:()=>dt,egP:()=>mt,MB5:()=>hs,eab:()=>yt,OI3:()=>O.O,Fp7:()=>Ee,_sB:()=>bt,YQQ:()=>wt,Ip$:()=>vt,gWQ:()=>xt.g,J69:()=>Nt,ry_:()=>Tt,VV$:()=>Ie,LTh:()=>Et,VdP:()=>It,wQq:()=>At,Gi7:()=>Mt,p_:()=>sr,dC7:()=>$.d,rq4:()=>Ot,SJ_:()=>$t,W76:()=>at.W,KOy:()=>Re,Quu:()=>Dt,lfX:()=>Bt.l,iUs:()=>St,JpU:()=>Rt,op:()=>u.op,N2O:()=>Vt,vku:()=>Ct,pNR:()=>Ft,koy:()=>Pt,t1L:()=>Lt,lGY:()=>zt,d_R:()=>qt,sQ3:()=>Ae.s,AL3:()=>Ut.A,S0v:()=>Gt.S,WVs:()=>Ht,$gW:()=>jt,N89:()=>Kt,TN_:()=>Xt,wzB:()=>en,nGf:()=>tn,ruB:()=>nn,LGj:()=>rn,w6H:()=>sn,kwC:()=>an.k,M25:()=>on,UYe:()=>un.U,btT:()=>ln.b,XLQ:()=>T.X,GYS:()=>cn,SDf:()=>pn,diP:()=>hn,sx7:()=>dn,mG2:()=>mn,QEs:()=>$n,NMM:()=>fn,bp0:()=>gn,iD$:()=>Me.i,snQ:()=>or,zcT:()=>gt,U8D:()=>yn,U_I:()=>bn,ODp:()=>wn,XD2:()=>D.X,Xxe:()=>vn,tdS:()=>ls,O$l:()=>xn,R_K:()=>Nn,tPi:()=>B,jZU:()=>_n,SmN:()=>Sn,CnO:()=>kn,p0P:()=>Tn,XAC:()=>En,Wvh:()=>ot,fBT:()=>Wt,rVs:()=>ds,ers:()=>ir,uN7:()=>us,Vl2:()=>On,_b3:()=>Oe._,h62:()=>$e.h,$i:()=>Dn,L9e:()=>Bn,knu:()=>Rn,Nbs:()=>Vn.N,NXj:()=>Cn,Z_8:()=>ms,luU:()=>ut.l,Smz:()=>De.S,ORZ:()=>Fn,AEp:()=>R,XeE:()=>Pn.X,RRF:()=>zn,odF:()=>Wn,wOQ:()=>qn.w,yXz:()=>Un,Bfx:()=>Gn,xZs:()=>Hn,Gg6:()=>Le,hg7:()=>jn,p4s:()=>rr.p,Xu6:()=>Kn,Two:()=>Xn,pUJ:()=>Qn,HHK:()=>Yn,GaM:()=>Zn,VD$:()=>Jn,arb:()=>we,itS:()=>tr,lls:()=>_t,P84:()=>ve.P});var r={};n.r(r),n.d(r,{conv2d:()=>fr,depthwiseConv2d:()=>br,matMul:()=>wr});var s=n(2905),a=n(2543),o=n(3986),i=n(2595),u=n(6273);const l=(0,u.op)({acos_:function(e){const t={x:(0,i._1)(e,"x","acos")};return a.BV.runKernel(o.VGw,t)}});const c=(0,u.op)({acosh_:function(e){const t={x:(0,i._1)(e,"x","acosh")};return a.BV.runKernel(o.SpW,t)}});var p=n(2889),h=n(7186);const d=(0,u.op)({addN_:function(e){h.hu(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),h.hu(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,i._1)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!h.cO(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return a.BV.runKernel(o.Xze,r)}});const m=(0,u.op)({all_:function(e,t=null,n=!1){const r={x:(0,i._1)(e,"x","all","bool")},s={axis:t,keepDims:n};return a.BV.runKernel(o.oT6,r,s)}});const f=(0,u.op)({any_:function(e,t=null,n=!1){const r={x:(0,i._1)(e,"x","any","bool")},s={axis:t,keepDims:n};return a.BV.runKernel(o.IKK,r,s)}});const g=(0,u.op)({argMax_:function(e,t=0){const n={x:(0,i._1)(e,"x","argMax")},r={axis:t};return a.BV.runKernel(o.sJF,n,r)}});const y=(0,u.op)({argMin_:function(e,t=0){const n={x:(0,i._1)(e,"x","argMin")},r={axis:t};return a.BV.runKernel(o.aJk,n,r)}});const b=(0,u.op)({asin_:function(e){const t={x:(0,i._1)(e,"x","asin")};return a.BV.runKernel(o.M2y,t)}});const w=(0,u.op)({asinh_:function(e){const t={x:(0,i._1)(e,"x","asinh")};return a.BV.runKernel(o.qw7,t)}});const v=(0,u.op)({atan_:function(e){const t={x:(0,i._1)(e,"x","atan")};return a.BV.runKernel(o.jMg,t)}});var x=n(5810);const N=(0,u.op)({atan2_:function(e,t){let n=(0,i._1)(e,"a","atan2"),r=(0,i._1)(t,"b","atan2");[n,r]=(0,x.makeTypesMatch)(n,r);const s={a:n,b:r};return a.BV.runKernel(o.QCc,s)}});const _=(0,u.op)({atanh_:function(e){const t={x:(0,i._1)(e,"x","atanh")};return a.BV.runKernel(o.Oyi,t)}});var S=n(6202),k=n(9295),T=n(3772);const E=(0,u.op)({avgPool_:function(e,t,n,r,s){const u=(0,i._1)(e,"x","avgPool","float32");h.hu(k.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let l=u,c=!1;3===u.rank&&(c=!0,l=(0,T.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]])),h.hu(4===l.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${l.rank}.`)),k.m("avgPool",r,s);const p={x:l},d={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let m=a.BV.runKernel(o.JhU,p,d);return m=(0,S.p)(m,u.dtype),c?(0,T.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const I=(0,u.op)({avgPool3d_:function(e,t,n,r,s,u="NDHWC"){const l=(0,i._1)(e,"x","avgPool3d","float32");let c=l,p=!1;4===l.rank&&(p=!0,c=(0,T.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),h.hu(5===c.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${c.rank}.`)),h.hu("NDHWC"===u,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${u}`)),(0,k.m)("avgPool3d",r,s);const d={x:c},m={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:u};let f=a.BV.runKernel(o._k9,d,m);return f=(0,S.p)(f,c.dtype),p?(0,T.X)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}});var A=n(1754);const M=(0,u.op)({concat_:function(e,t=0){(0,h.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,i.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,A.d)(n[0]);const r=n,s={axis:t};return a.BV.runKernel(o.Eh3,r,s)}});var O=n(6793),$=n(3510),D=n(9544);const B=(0,u.op)({slice_:function(e,t,n){const r=(0,i._1)(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},u={begin:t,size:n};return a.BV.runKernel(o.p2w,s,u)}});const R=(0,u.op)({tanh_:function(e){const t={x:(0,i._1)(e,"x","tanh","float32")};return a.BV.runKernel(o.MIZ,t)}});const V=(0,u.op)({basicLSTMCell_:function(e,t,n,r,s,a){const o=(0,i._1)(e,"forgetBias","basicLSTMCell"),u=(0,i._1)(t,"lstmKernel","basicLSTMCell"),l=(0,i._1)(n,"lstmBias","basicLSTMCell"),c=(0,i._1)(r,"data","basicLSTMCell"),h=(0,i._1)(s,"c","basicLSTMCell"),d=(0,i._1)(a,"h","basicLSTMCell"),m=M([c,d],1),f=(0,O.O)(m,u),g=(0,p.I)(f,l),y=g.shape[0],b=g.shape[1]/4,w=[y,b],v=B(g,[0,0],w),x=B(g,[0,b],w),N=B(g,[0,2*b],w),_=B(g,[0,3*b],w),S=(0,p.I)((0,$.d)((0,D.X)(v),R(x)),(0,$.d)(h,(0,D.X)((0,p.I)(o,N))));return[S,(0,$.d)(R(S),(0,D.X)(_))]}});const C=(0,u.op)({batchToSpaceND_:function(e,t,n){const r=(0,i._1)(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));h.hu(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),h.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),h.hu(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const u={x:r},l={blockShape:t,crops:n};return a.BV.runKernel(o.zws,u,l)}});const F=(0,u.op)({batchNorm_:function(e,t,n,r,s,u){null==u&&(u=.001);const l=(0,i._1)(e,"x","batchNorm"),c=(0,i._1)(t,"mean","batchNorm"),p=(0,i._1)(n,"variance","batchNorm");let d,m;null!=s&&(d=(0,i._1)(s,"scale","batchNorm")),null!=r&&(m=(0,i._1)(r,"offset","batchNorm")),h.hu(c.rank===p.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),h.hu(null==m||c.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),h.hu(null==d||c.rank===d.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const f={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,T.X)(e,[1,1,1,e.size]):2===e.rank?(0,T.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,T.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(l),scale:d,offset:m,mean:c,variance:p},g={varianceEpsilon:u},y=a.BV.runKernel(o.sHE,f,g);return(0,T.X)(y,l.shape)}});const P=(0,u.op)({batchNorm2d_:function(e,t,n,r,s,a){const o=(0,i._1)(e,"x","batchNorm"),u=(0,i._1)(t,"mean","batchNorm"),l=(0,i._1)(n,"variance","batchNorm");let c,p;return null!=s&&(c=(0,i._1)(s,"scale","batchNorm")),null!=r&&(p=(0,i._1)(r,"offset","batchNorm")),h.hu(2===o.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`)),h.hu(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`)),h.hu(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&h.hu(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`)),null!=p&&h.hu(2===p.rank||1===p.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`)),F(o,u,l,p,c,a)}});const L=(0,u.op)({batchNorm3d_:function(e,t,n,r,s,a){const o=(0,i._1)(e,"x","batchNorm"),u=(0,i._1)(t,"mean","batchNorm"),l=(0,i._1)(n,"variance","batchNorm");let c,p;return null!=s&&(c=(0,i._1)(s,"scale","batchNorm")),null!=r&&(p=(0,i._1)(r,"offset","batchNorm")),h.hu(3===o.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`)),h.hu(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`)),h.hu(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&h.hu(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`)),null!=p&&h.hu(3===p.rank||1===p.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`)),F(o,u,l,p,c,a)}});const z=(0,u.op)({batchNorm4d_:function(e,t,n,r,s,a){const o=(0,i._1)(e,"x","batchNorm"),u=(0,i._1)(t,"mean","batchNorm"),l=(0,i._1)(n,"variance","batchNorm");let c,p;return null!=s&&(c=(0,i._1)(s,"scale","batchNorm")),null!=r&&(p=(0,i._1)(r,"offset","batchNorm")),h.hu(4===o.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`)),h.hu(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`)),h.hu(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&h.hu(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`)),null!=p&&h.hu(4===p.rank||1===p.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`)),F(o,u,l,p,c,a)}});const W=(0,u.op)({bincount_:function(e,t,n){const r=(0,i._1)(e,"x","bincount"),s=(0,i._1)(t,"weights","bincount");h.hu("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),h.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),h.hu(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const u={x:r,weights:s},l={size:n};return a.BV.runKernel(o.zvY,u,l)}});const q=(0,u.op)({broadcastArgs_:function(e,t){const n=(0,i._1)(e,"s0","broadcastArgs","int32"),r=(0,i._1)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return a.BV.runKernel(o.eEB,s)}});const U=(0,u.op)({broadcastTo_:function(e,t){let n=(0,i._1)(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,T.X)(n,e)}const s=n.shape,u=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])u[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===u.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,A.d)(n);const l={x:n},c={reps:u};return a.BV.runKernel(o.n9L,l,c)}});var G=n(3746);const H=(0,u.op)({ceil_:function(e){const t={x:(0,i._1)(e,"x","ceil","float32")};return a.BV.runKernel(o.gJX,t)}});var j=n(6052);const K=(0,u.op)({clipByValue_:function(e,t,n){const r=(0,i._1)(e,"x","clipByValue");if(h.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return(0,j.h)(r.shape,t,r.dtype);const s={x:r},u={clipValueMin:t,clipValueMax:n};return a.BV.runKernel(o.xnO,s,u)}});var X=n(6194);const Q=(0,u.op)({concat1d_:function(e){return M(e,0)}});const Y=(0,u.op)({concat2d_:function(e,t){return M(e,t)}});const Z=(0,u.op)({concat3d_:function(e,t){return M(e,t)}});const J=(0,u.op)({concat4d_:function(e,t){return M(e,t)}});const ee=(0,u.op)({conv2d_:function(e,t,n,r,s="NHWC",u=[1,1],l){const c=(0,i._1)(e,"x","conv2d","float32"),p=(0,i._1)(t,"filter","conv2d","float32");let d=c,m=!1;3===c.rank&&(m=!0,d=(0,T.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]])),h.hu(4===d.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${d.rank}.`)),h.hu(4===p.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${p.rank}.`)),k.m("conv2d",r,l);const f="NHWC"===s?d.shape[3]:d.shape[1];h.hu(f===p.shape[2],(()=>`Error in conv2d: depth of input (${f}) must match input depth for filter ${p.shape[2]}.`)),h.hu(k.jT(n,u),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${u}'`));const g={x:d,filter:p},y={strides:n,pad:r,dataFormat:s,dilations:u,dimRoundingMode:l},b=a.BV.runKernel(o.mhS,g,y);return m?(0,T.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});const te=(0,u.op)({conv1d_:function(e,t,n,r,s="NWC",a=1,o){const u=(0,i._1)(e,"x","conv1d"),l=(0,i._1)(t,"filter","conv1d");let c=u,p=!1;2===u.rank&&(p=!0,c=(0,T.X)(u,[1,u.shape[0],u.shape[1]])),h.hu(3===c.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`)),h.hu(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),k.m("conv1d",r,o),h.hu(c.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),h.hu(k.jT(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),h.hu("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const d=(0,T.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]),m=(0,T.X)(c,[c.shape[0],1,c.shape[1],c.shape[2]]),f=ee(m,d,[1,n],r,"NHWC",[1,a],o);return p?(0,T.X)(f,[f.shape[2],f.shape[3]]):(0,T.X)(f,[f.shape[0],f.shape[2],f.shape[3]])}});const ne=(0,u.op)({conv2DBackpropInput_:function(e,t,n,r,s,i="NHWC",u){h.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let l=e,c=t,p=!1;3===t.rank&&(p=!0,c=(0,T.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),l=[1,e[0],e[1],e[2]]),h.hu(4===l.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${l.length}.`)),h.hu(4===c.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${c.rank}`)),h.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const d="NHWC"===i?l[3]:l[1],m="NHWC"===i?c.shape[3]:c.shape[1];h.hu(d===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${n.shape[2]}.`)),h.hu(m===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${n.shape[3]}.`)),k.m("conv2dDerInput",s,u);const f={dy:c,filter:n},g={strides:r,pad:s,dataFormat:i,dimRoundingMode:u,inputShape:l},y=a.BV.runKernel(o.wm,f,g);return p?(0,T.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});const re=(0,u.op)({conv2dTranspose_:function(e,t,n,r,s,a){const o=(0,i._1)(e,"x","conv2dTranspose"),u=(0,i._1)(t,"filter","conv2dTranspose");return ne(n,o,u,r,s,"NHWC",a)}});const se=(0,u.op)({conv3d_:function(e,t,n,r,s="NDHWC",u=[1,1,1]){const l=(0,i._1)(e,"x","conv3d"),c=(0,i._1)(t,"filter","conv3d");let p=l,d=!1;4===l.rank&&(d=!0,p=(0,T.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),h.hu(5===p.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${p.rank}.`)),h.hu(5===c.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${c.rank}.`)),h.hu(p.shape[4]===c.shape[3],(()=>`Error in conv3d: depth of input (${p.shape[4]}) must match input depth for filter ${c.shape[3]}.`)),h.hu((0,k.jT)(n,u),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${u}'`)),h.hu("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const m={x:p,filter:c},f={strides:n,pad:r,dataFormat:s,dilations:u},g=a.BV.runKernel(o.x12,m,f);return d?(0,T.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}});const ae=(0,u.op)({conv3DBackpropInput_:function(e,t,n,r,s){h.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,u=t,l=!1;4===t.rank&&(l=!0,u=(0,T.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const c=i[4],p=u.shape[4];h.hu(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),h.hu(5===u.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${u.rank}`)),h.hu(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),h.hu(c===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[3]}.`)),h.hu(p===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[4]}.`));const d={dy:u,filter:n},m={pad:s,strides:r,inputShape:i},f=a.BV.runKernel(o.ik2,d,m);return l?(0,T.X)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}});const oe=(0,u.op)({conv3dTranspose_:function(e,t,n,r,s){const a=(0,i._1)(e,"x","conv3dTranspose"),o=(0,i._1)(t,"filter","conv3dTranspose");return ae(n,a,o,r,s)}});const ie=(0,u.op)({cos_:function(e){const t={x:(0,i._1)(e,"x","cos","float32")};return a.BV.runKernel(o.mc4,t)}});const ue=(0,u.op)({cosh_:function(e){const t={x:(0,i._1)(e,"x","cosh","float32")};return a.BV.runKernel(o.TR1,t)}});const le=(0,u.op)({cumprod_:function(e,t=0,n=!1,r=!1){const s={x:(0,i._1)(e,"x","cumprod")},u={axis:t,exclusive:n,reverse:r};return a.BV.runKernel(o.Byc,s,u)}});const ce=(0,u.op)({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:(0,i._1)(e,"x","cumsum")},u={axis:t,exclusive:n,reverse:r};return a.BV.runKernel(o.iHb,s,u)}});const pe=(0,u.op)({denseBincount_:function(e,t,n,r=!1){const s=(0,i._1)(e,"x","denseBincount"),u=(0,i._1)(t,"weights","denseBincount");h.hu("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),h.hu(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),h.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),h.hu(u.size===s.size||0===u.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${u.shape}.`));const l={x:s,weights:u},c={size:n,binaryOutput:r};return a.BV.runKernel(o.QRR,l,c)}});const he=(0,u.op)({depthToSpace_:function(e,t,n="NHWC"){const r=(0,i._1)(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],u="NHWC"===n?r.shape[2]:r.shape[3],l="NHWC"===n?r.shape[3]:r.shape[1];h.hu(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),h.hu(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),h.hu(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),h.hu(l%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${l} for depthToSpace with input shape ${r.shape}`));const c={x:r},p={blockSize:t,dataFormat:n};return a.BV.runKernel(o.T0n,c,p)}});const de=(0,u.op)({depthwiseConv2d_:function(e,t,n,r,s="NHWC",u=[1,1],l){const c=(0,i._1)(e,"x","depthwiseConv2d","float32"),p=(0,i._1)(t,"filter","depthwiseConv2d","float32");let d=c,m=!1;3===c.rank&&(m=!0,d=(0,T.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]])),h.hu(4===d.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),h.hu(4===p.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`));const f="NHWC"===s?d.shape[3]:d.shape[1];h.hu(f===p.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${f}) must match the inChannels dimension in filter ${p.shape[2]}.`)),k.m("depthwiseConv2d",r,l);const g={x:d,filter:p},y={strides:n,pad:r,dataFormat:s,dilations:u,dimRoundingMode:l},b=a.BV.runKernel(o.cie,g,y);return m?(0,T.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});const me=(0,u.op)({diag_:function(e){const t={x:(0,i._1)(e,"x","diag")};return a.BV.runKernel(o.$w,t)}});const fe=(0,u.op)({dilation2d_:function(e,t,n,r,s=[1,1],u="NHWC"){const l=(0,i._1)(e,"x","dilation2d"),c=(0,i._1)(t,"filter","dilation2d");h.hu(3===l.rank||4===l.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${l.rank}.`)),h.hu(3===c.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${c.rank}.`)),h.hu("NHWC"===u,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${u}`));let p=l,d=!1;3===l.rank&&(p=(0,T.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=!0);const m={x:p,filter:c},f={strides:n,pad:r,dilations:s},g=a.BV.runKernel(o.p4S,m,f);return d?(0,T.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});var ge=n(6129),ye=n(4555);const be=(0,u.op)({equal_:function(e,t){let n=(0,i._1)(e,"a","equal","string_or_numeric"),r=(0,i._1)(t,"b","equal","string_or_numeric");[n,r]=(0,x.makeTypesMatch)(n,r),(0,ye.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return a.BV.runKernel(o.hdR,s)}});const we=(0,u.op)({where_:function(e,t,n){const r=(0,i._1)(t,"a","where"),s=(0,i._1)(n,"b","where"),u=(0,i._1)(e,"condition","where","bool"),l=(0,ye.assertAndGetBroadcastShape)((0,ye.assertAndGetBroadcastShape)(u.shape,r.shape),s.shape),c={condition:U(u,l),t:U(r,l),e:U(s,l)};return a.BV.runKernel(o.PhF,c)}});var ve=n(2448);const xe=(0,u.op)({divNoNan_:function(e,t){let n=(0,i._1)(e,"a","div"),r=(0,i._1)(t,"b","div");[n,r]=(0,x.makeTypesMatch)(n,r);const s=(0,ge.h)(n,r),a=(0,ve.P)(s),o=be(r,a);return we(o,a,s)}});const Ne=(0,u.op)({dot_:function(e,t){const n=(0,i._1)(e,"t1","dot"),r=(0,i._1)(t,"t2","dot");h.hu(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(h.hu(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=(0,T.X)(n,[1,-1]),t=(0,T.X)(r,[-1,1]),s=(0,O.O)(e,t);return(0,T.X)(s,[])}if(1===n.rank&&2===r.rank){const e=(0,T.X)(n,[1,-1]),t=(0,T.X)(r,[r.shape[0],r.shape[1]]),s=(0,O.O)(e,t);return(0,T.X)(s,[s.size])}if(2===n.rank&&1===r.rank){const e=(0,T.X)(r,[-1,1]),t=(0,O.O)(n,e);return(0,T.X)(t,[t.size])}{const e=(0,T.X)(r,[r.shape[0],r.shape[1]]);return(0,O.O)(n,e)}}});const _e=(0,u.op)({einsum_:function(e,...t){const n=t.map(((e,t)=>(0,i._1)(e,`tensors${t}`,"einsum"))),r={equation:e};return a.BV.runKernel(o.$g6,n,r)}});var Se=n(579);const ke=(0,u.op)({erf_:function(e){let t=(0,i._1)(e,"x","erf");h.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,S.p)(t,"float32"));const n={x:t};return a.BV.runKernel(o.Omj,n)}});var Te=n(6562);const Ee=(0,u.op)({max_:function(e,t=null,n=!1){const r={x:(0,i._1)(e,"x","max")},s={reductionIndices:t,keepDims:n};return a.BV.runKernel(o.YoZ,r,s)}});const Ie=(0,u.op)({min_:function(e,t=null,n=!1){const r={x:(0,i._1)(e,"x","min")},s={axis:t,keepDims:n};return a.BV.runKernel(o.c17,r,s)}});var Ae=n(4850),Me=n(6461),Oe=n(8460),$e=n(5272),De=n(4550);function Be(e,t,n=null){if(0===e.rank)return(0,s.W)(e);if(1!==e.rank&&null===n)return Be((0,T.X)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,De.S)((0,s.W)(e),n);if(t===1/0)return Ee((0,s.W)(e),n);if(t===-1/0)return Ie((0,s.W)(e),n);if("euclidean"===t||2===t)return(0,Oe._)((0,De.S)((0,Ae.s)((0,s.W)(e),(0,Me.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Ee((0,De.S)((0,s.W)(e),n[0]),n[1]-1);if(t===1/0)return Ee((0,De.S)((0,s.W)(e),n[1]),n[0]);if(t===-1/0)return Ie((0,De.S)((0,s.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,Oe._)((0,De.S)((0,$e.h)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Re=(0,u.op)({norm_:function(e,t="euclidean",n=null,r=!1){const s=Be(e=(0,i._1)(e,"x","norm"),t,n);let a=s.shape;if(r){const t=(0,h.EC)(n,e.shape);a=Te.rv(s.shape,t)}return(0,T.X)(s,a)}});const Ve=(0,u.op)({euclideanNorm_:function(e,t=null,n=!1){return Re(e,"euclidean",t,n)}});const Ce=(0,u.op)({exp_:function(e){const t={x:(0,i._1)(e,"x","exp")};return a.BV.runKernel(o.NEP,t)}});const Fe=(0,u.op)({expandDims_:function(e,t=0){const n=(0,i._1)(e,"x","expandDims","string_or_numeric");h.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return a.BV.runKernel(o.YFo,r,s)}});const Pe=(0,u.op)({expm1_:function(e){const t={x:(0,i._1)(e,"x","expm1")};return a.BV.runKernel(o.Y0y,t)}});const Le=(0,u.op)({tile_:function(e,t){const n=(0,i._1)(e,"x","tile","string_or_numeric");h.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return a.BV.runKernel(o.n9L,r,s)}});const ze=(0,u.op)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=(0,G.f)([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const o=(0,T.X)(s.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return Le(Fe(o,0),[n[0],1,1]);if(2===n.length)return Le(Fe(Fe(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return Le(Fe(Fe(Fe(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});const We=(0,u.op)({floor_:function(e){const t={x:(0,i._1)(e,"x","floor","float32")};return a.BV.runKernel(o.OR,t)}});var qe=n(854);const Ue=(0,u.op)({gather_:function(e,t,n=0,r=0){const s={x:(0,i._1)(e,"x","gather"),indices:(0,i._1)(t,"indices","gather","int32")},u={axis:n,batchDims:r};return a.BV.runKernel(o.qi_,s,u)}});const Ge=(0,u.op)({greater_:function(e,t){let n=(0,i._1)(e,"a","greater","string_or_numeric"),r=(0,i._1)(t,"b","greater","string_or_numeric");[n,r]=(0,x.makeTypesMatch)(n,r),(0,ye.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return a.BV.runKernel(o.iZT,s)}});const He=(0,u.op)({greaterEqual_:function(e,t){let n=(0,i._1)(e,"a","greaterEqual","string_or_numeric"),r=(0,i._1)(t,"b","greaterEqual","string_or_numeric");[n,r]=(0,x.makeTypesMatch)(n,r),(0,ye.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return a.BV.runKernel(o.Acj,s)}});var je=n(9837);const Ke=(0,u.op)({isFinite_:function(e){const t={x:(0,i._1)(e,"x","isFinite")};return a.BV.runKernel(o.avt,t)}});const Xe=(0,u.op)({isInf_:function(e){const t={x:(0,i._1)(e,"x","isInf")};return a.BV.runKernel(o.iWB,t)}});const Qe=(0,u.op)({isNaN_:function(e){const t={x:(0,i._1)(e,"x","isNaN")};return a.BV.runKernel(o.r7n,t)}});var Ye=n(7615);const Ze=(0,u.op)({less_:function(e,t){let n=(0,i._1)(e,"a","less","string_or_numeric"),r=(0,i._1)(t,"b","less","string_or_numeric");[n,r]=(0,x.makeTypesMatch)(n,r),(0,ye.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return a.BV.runKernel(o.vtC,s)}});const Je=(0,u.op)({lessEqual_:function(e,t){let n=(0,i._1)(e,"a","lessEqual","string_or_numeric"),r=(0,i._1)(t,"b","lessEqual","string_or_numeric");[n,r]=(0,x.makeTypesMatch)(n,r),(0,ye.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return a.BV.runKernel(o.CAk,s)}});function et(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return a.BV.runKernel(o.e7N,{},r)}const tt=(0,u.op)({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const u=(0,i._1)(e,"x","localResponseNormalization");h.hu(4===u.rank||3===u.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${u.rank}.`)),h.hu(h.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let l=u,c=!1;3===u.rank&&(c=!0,l=(0,T.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const p={x:l},d={depthRadius:t,bias:n,alpha:r,beta:s},m=a.BV.runKernel(o.eZ0,p,d);return c?(0,T.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const nt=(0,u.op)({log_:function(e){const t={x:(0,i._1)(e,"x","log","float32")};return a.BV.runKernel(o.ZbH,t)}});const rt=(0,u.op)({log1p_:function(e){const t={x:(0,i._1)(e,"x","log1p")};return a.BV.runKernel(o.kU,t)}});var st=n(9541),at=n(9372);const ot=(0,u.op)({softplus_:function(e){const t={x:(0,i._1)(e,"x","softplus")};return a.BV.runKernel(o.MRv,t)}});const it=(0,u.op)({logSigmoid_:function(e){const t=(0,i._1)(e,"x","logSigmoid");return(0,st.cb)((e=>({value:(0,at.W)(ot((0,at.W)(e))),gradFunc:t=>(0,$.d)(t,(0,D.X)((0,at.W)(e)))})))(t)}});var ut=n(7996);const lt=(0,u.op)({logSoftmax_:function(e,t=-1){const n=(0,i._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=(0,st.cb)(((e,n)=>{const r=Ee(e,t,!0),s=(0,ut.l)(e,r),a=(0,ut.l)((0,S.p)(s,"float32"),nt((0,De.S)(Ce(s),t,!0)));n([a]);return{value:a,gradFunc:(e,n)=>{const[r]=n,s=Ce(r);return(0,ut.l)(e,(0,$.d)((0,De.S)(e,t,!0),s))}}}));return r(n)}});const ct=(0,u.op)({logSumExp_:function(e,t=null,n=!1){const r=(0,i._1)(e,"x","logSumExp"),s=(0,h.EC)(t,r.shape),a=Ee(r,s,!0),o=(0,ut.l)(r,a),u=Ce(o),l=(0,De.S)(u,s),c=nt(l),d=(0,p.I)((0,T.X)(a,c.shape),c);if(n){const e=(0,Te.rv)(d.shape,s);return(0,T.X)(d,e)}return d}});const pt=(0,u.op)({logicalAnd_:function(e,t){const n=(0,i._1)(e,"a","logicalAnd","bool"),r=(0,i._1)(t,"b","logicalAnd","bool");(0,ye.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return a.BV.runKernel(o.PYm,s)}});const ht=(0,u.op)({logicalNot_:function(e){const t={x:(0,i._1)(e,"x","logicalNot","bool")};return a.BV.runKernel(o.VfG,t)}});const dt=(0,u.op)({logicalOr_:function(e,t){const n=(0,i._1)(e,"a","logicalOr","bool"),r=(0,i._1)(t,"b","logicalOr","bool");(0,ye.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return a.BV.runKernel(o.MZg,s)}});const mt=(0,u.op)({logicalXor_:function(e,t){const n=(0,i._1)(e,"a","logicalXor","bool"),r=(0,i._1)(t,"b","logicalXor","bool");return(0,ye.assertAndGetBroadcastShape)(n.shape,r.shape),pt(dt(e,t),ht(pt(e,t)))}}),ft=2147483648;const gt=(0,u.op)({searchSorted_:function(e,t,n="left"){const r=(0,i._1)(e,"sortedSequence","searchSorted"),s=(0,i._1)(t,"values","searchSorted"),u=r.shape[r.shape.length-1],l=s.shape[s.shape.length-1],c=(0,T.X)(r,[-1,u]),p=(0,T.X)(s,[-1,l]);if(c.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(c.shape[0]!==p.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,h.NA)(p.shape)>=ft)throw new Error("values tensor size must less than 2147483648");if(c.shape[1]>=ft)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${c.shape[1]}`);const d={sortedSequence:c,values:p},m={side:n};return a.BV.runKernel(o.nr8,d,m)}});function yt(e,t){return gt(e,t,"left")}const bt=(0,u.op)({maxPool_:function(e,t,n,r,s){const u=(0,i._1)(e,"x","maxPool");let l=u,c=!1;3===u.rank&&(c=!0,l=(0,T.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]])),h.hu(4===l.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${l.rank}.`)),h.hu(k.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),k.m("maxPool",r,s);const p={x:l},d={filterSize:t,strides:n,pad:r,dimRoundingMode:s},m=a.BV.runKernel(o.mTV,p,d);return c?(0,T.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const wt=(0,u.op)({maxPool3d_:function(e,t=[1,1,1],n,r,s,u="NDHWC"){const l=(0,i._1)(e,"x","maxPool3d");let c=l,p=!1;4===l.rank&&(p=!0,c=(0,T.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),h.hu(5===c.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${c.rank}.`)),h.hu("NDHWC"===u,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${u}`)),(0,k.m)("maxPool3d",r,s);const d={x:c},m={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:u},f=a.BV.runKernel(o.OAf,d,m);return p?(0,T.X)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}});const vt=(0,u.op)({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const u={x:(0,i._1)(e,"x","maxPoolWithArgmax")},l={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},c=a.BV.runKernel(o.vFR,u,l);return{result:c[0],indexes:c[1]}}});var xt=n(2638);const Nt=(0,u.op)({mean_:function(e,t=null,n=!1){const r={x:(0,i._1)(e,"x","mean")},s={axis:t,keepDims:n};return a.BV.runKernel(o.q2K,r,s)}});function _t(e,t="float32"){if("complex64"===t){const t=_t(e,"float32"),n=_t(e,"float32");return(0,X.P)(t,n)}const n=(0,h.wT)((0,h.NA)(e),t);return a.BV.makeTensor(n,e,t)}function St(e,t="float32"){if("complex64"===t){const t=St(e,"float32"),n=_t(e,"float32");return(0,X.P)(t,n)}const n=(0,h.p8)((0,h.NA)(e),t);return a.BV.makeTensor(n,e,t)}var kt=n(7184);function Tt(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=(0,i._1)(e,"x","meshgrid",e instanceof kt.es?e.dtype:"float32");if(void 0===t)return[r];let s=(0,i._1)(t,"y","meshgrid",t instanceof kt.es?t.dtype:"float32");const a=(0,h.NA)(r.shape),o=(0,h.NA)(s.shape);return"xy"===n?(r=(0,T.X)(r,[1,-1]),s=(0,T.X)(s,[-1,1]),[(0,O.O)(St([o,1],r.dtype),r),(0,O.O)(s,St([1,a],s.dtype))]):(r=(0,T.X)(r,[-1,1]),s=(0,T.X)(s,[1,-1]),[(0,O.O)(r,St([1,o],r.dtype)),(0,O.O)(St([a,1],s.dtype),s)])}const Et=(0,u.op)({minimum_:function(e,t){let n=(0,i._1)(e,"a","minimum"),r=(0,i._1)(t,"b","minimum");[n,r]=(0,x.makeTypesMatch)(n,r),"bool"===n.dtype&&(n=(0,S.p)(n,"int32"),r=(0,S.p)(r,"int32")),(0,ye.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return a.BV.runKernel(o.q8u,s)}});const It=(0,u.op)({mirrorPad_:function(e,t,n){h.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=(0,i._1)(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");h.hu(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)h.hu(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),h.hu(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`));const u={paddings:t,mode:n},l={x:r};return a.BV.runKernel(o.jQs,l,u)}});const At=(0,u.op)({mod_:function(e,t){let n=(0,i._1)(e,"a","mod"),r=(0,i._1)(t,"b","mod");[n,r]=(0,x.makeTypesMatch)(n,r);const s={a:n,b:r};return a.BV.runKernel(o.Vbg,s)}});const Mt=(0,u.op)({moments_:function(e,t=null,n=!1){e=(0,i._1)(e,"x","moments");const r=(0,h.EC)(t,e.shape),s=Nt(e,r,n);let a=s.shape;n||(a=(0,Te.rv)(s.shape,r));const o=(0,$e.h)((0,ut.l)((0,S.p)(e,"float32"),(0,T.X)(s,a)));return{mean:s,variance:Nt(o,r,n)}}});const Ot=(0,u.op)({multiRNNCell_:function(e,t,n,r){const s=(0,i._1)(t,"data","multiRNNCell"),a=(0,i.sI)(n,"c","multiRNNCell"),o=(0,i.sI)(r,"h","multiRNNCell");let u=s;const l=[];for(let t=0;t<e.length;t++){const n=e[t](u,a[t],o[t]);l.push(n[0]),l.push(n[1]),u=n[1]}const c=[],p=[];for(let e=0;e<l.length;e+=2)c.push(l[e]),p.push(l[e+1]);return[c,p]}});const $t=(0,u.op)({multinomial_:function(e,t,n,r=!1){const s=(0,i._1)(e,"logits","multinomial"),u=s.size,l=s.rank;if(u<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${u}.`);if(l>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${l}`);n=n||Math.random();const c={logits:1===l?(0,T.X)(s,[1,-1]):s},p={numSamples:t,seed:n,normalized:r},h=a.BV.runKernel(o.NZg,c,p);return 1===l?(0,T.X)(h,[h.size]):h}});const Dt=(0,u.op)({notEqual_:function(e,t){let n=(0,i._1)(e,"a","notEqual","string_or_numeric"),r=(0,i._1)(t,"b","notEqual","string_or_numeric");[n,r]=(0,x.makeTypesMatch)(n,r),(0,ye.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return a.BV.runKernel(o.yQU,s)}});var Bt=n(5673);const Rt=(0,u.op)({onesLike_:function(e){const t={x:(0,i._1)(e,"x","onesLike")};return a.BV.runKernel(o.qWM,t)}});const Vt=(0,u.op)({outerProduct_:function(e,t){const n=(0,i._1)(e,"v1","outerProduct"),r=(0,i._1)(t,"v2","outerProduct");h.hu(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=(0,T.X)(n,[-1,1]),a=(0,T.X)(r,[1,-1]);return(0,O.O)(s,a)}});const Ct=(0,u.op)({pad_:function(e,t,n=0){const r=(0,i._1)(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},u={x:r};return a.BV.runKernel(o.lyA,u,s)}});const Ft=(0,u.op)({pad1d_:function(e,t,n=0){return(0,h.hu)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Ct(e,[t],n)}});const Pt=(0,u.op)({pad2d_:function(e,t,n=0){return(0,h.hu)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Ct(e,t,n)}});const Lt=(0,u.op)({pad3d_:function(e,t,n=0){return(0,h.hu)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Ct(e,t,n)}});const zt=(0,u.op)({pad4d_:function(e,t,n=0){return(0,h.hu)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Ct(e,t,n)}});const Wt=(0,u.op)({spaceToBatchND_:function(e,t,n){const r=(0,i._1)(e,"x","spaceToBatchND");h.hu(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),h.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),h.hu(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},u={blockShape:t,paddings:n};return a.BV.runKernel(o.TQc,s,u)}});const qt=(0,u.op)({pool_:function(e,t,n,r,s,a,o){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const u=(0,i._1)(e,"x","maxPool");let l=u,c=!1;3===u.rank&&(c=!0,l=(0,T.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]])),h.hu(k.jT(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const p=k.Xw(l.shape,t,a,s,r),d=[p.dilationHeight,p.dilationWidth];let m;m="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),r=n.map((e=>e-1)),s=r.map((e=>Math.floor(e/2))),a=r.map(((e,t)=>e-s[t]));return r.map(((e,t)=>[s[t],a[t]]))}([p.filterHeight,p.filterWidth],d):[[0,0],[0,0]];const f=1===d[0]&&1===d[1],[g,y]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),o=t.map(((e,t)=>(e-a[t]%e)%e)),i=s.map(((e,t)=>e+o[t])),u=t.map(((e,t)=>[r[t],i[t]])),l=t.map(((e,t)=>[0,o[t]]));return[u,l]}([p.inHeight,p.inWidth],d,m),b=f?r:"valid",w=f?l:Wt(l,d,g),v=("avg"===n?()=>E(w,t,a,b,o):()=>bt(w,t,a,b,o))(),x=f?v:C(v,d,y);return c?(0,T.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});var Ut=n(1041),Gt=n(3854);const Ht=(0,u.op)({prod_:function(e,t=null,n=!1){let r=(0,i._1)(e,"x","prod");"bool"===r.dtype&&(r=(0,S.p)(r,"int32"));const s={x:r},u={axis:t,keepDims:n};return a.BV.runKernel(o.DlI,s,u)}});const jt=(0,u.op)({raggedGather_:function(e,t,n,r){const s={paramsNestedSplits:e.map(((e,t)=>(0,i._1)(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:(0,i._1)(t,"paramsDenseValues","raggedGather"),indices:(0,i._1)(n,"indices","raggedGather","int32")},u={outputRaggedRank:r},l=a.BV.runKernel(o.dDz,s,u);return{outputNestedSplits:l.slice(0,l.length-1),outputDenseValues:l[l.length-1]}}});const Kt=(0,u.op)({raggedTensorToTensor_:function(e,t,n,r,s){const u=(0,i._1)(e,"shape","raggedTensorToTensor","int32"),l=(0,i._1)(t,"values","raggedTensorToTensor"),c={shape:u,values:l,defaultValue:(0,i._1)(n,"defaultValue","raggedTensorToTensor",l.dtype),rowPartitionTensors:r.map(((e,t)=>(0,i._1)(e,`tensors${t}`,"raggedTensorToTensor","int32")))},p={rowPartitionTypes:s};return a.BV.runKernel(o.BiW,c,p)}});const Xt=(0,u.op)({rand_:function(e,t,n){const r=(0,h.NA)(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let e=0;e<r;e++)s[e]=t();return a.BV.makeTensor(s,e,n)}});var Qt=n(2474);class Yt{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Qt.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*s*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Zt{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=Qt.alea(s.toString()),this.randn=new Yt(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Jt{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Qt.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const en=(0,u.op)({randomGamma_:function(e,t,n=1,r="float32",s){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new Zt(t,n,r,s),o=(0,G.f)(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=a.nextValue();return o.toTensor()}});const tn=(0,u.op)({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new Yt(t,n,r,!1,s),o=(0,G.f)(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=a.nextValue();return o.toTensor()}});const nn=(0,u.op)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return tn(e,0,1,t,n)}});const rn=(0,u.op)({randomUniform_:function(e,t=0,n=1,r="float32",s){const a=(0,G.f)(e,r),o=new Jt(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=o.nextValue();return a.toTensor()}});function sn(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return a.BV.runKernel(o.e6w,{},s)}var an=n(1432);const on=(0,u.op)({reciprocal_:function(e){const t={x:(0,i._1)(e,"x","reciprocal")};return a.BV.runKernel(o.$HU,t)}});var un=n(6348),ln=n(5350);const cn=(0,u.op)({reverse_:function(e,t){const n={x:(0,i._1)(e,"x","reverse")},r={dims:t};return a.BV.runKernel(o.mKl,n,r)}});const pn=(0,u.op)({reverse1d_:function(e){const t=(0,i._1)(e,"x","reverse");return h.hu(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),cn(t,0)}});const hn=(0,u.op)({reverse2d_:function(e,t){const n=(0,i._1)(e,"x","reverse");return h.hu(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),cn(n,t)}});const dn=(0,u.op)({reverse3d_:function(e,t){const n=(0,i._1)(e,"x","reverse");return h.hu(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),cn(n,t)}});const mn=(0,u.op)({reverse4d_:function(e,t){const n=(0,i._1)(e,"x","reverse");return h.hu(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),cn(n,t)}});const fn=(0,u.op)({round_:function(e){const t={x:(0,i._1)(e,"x","round")};return a.BV.runKernel(o.e07,t)}});const gn=(0,u.op)({rsqrt_:function(e){const t={x:(0,i._1)(e,"x","rsqrt","float32")};return a.BV.runKernel(o.bV0,t)}});const yn=(0,u.op)({selu_:function(e){const t={x:(0,i._1)(e,"x","selu")};return a.BV.runKernel(o.oFR,t)}});const bn=(0,u.op)({separableConv2d_:function(e,t,n,r,s,a=[1,1],o="NHWC"){const u=(0,i._1)(e,"x","separableConv2d"),l=(0,i._1)(t,"depthwiseFilter","separableConv2d"),c=(0,i._1)(n,"pointwiseFilter","separableConv2d");let p=u,d=!1;if(3===u.rank&&(d=!0,p=(0,T.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");h.hu(4===p.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`)),h.hu(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),h.hu(4===c.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),h.hu(1===c.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`)),h.hu(1===c.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`));const m=l.shape[2],f=l.shape[3];h.hu(c.shape[2]===m*f,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*f}, but got ${c.shape[2]}.`));const g=de(p,l,r,s,o,a),y=ee(g,c,1,"valid",o);return d?(0,T.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});const wn=async function(e,t){const n=(0,i._1)(e,"x","setdiff1d"),r=(0,i._1)(t,"y","setdiff1d");h.hu(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),h.hu(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),h.hu(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),o=new Set(a);let u=0;for(let e=0;e<s.length;e++)o.has(s[e])||u++;const l=new kt.YD([u],n.dtype),c=new kt.YD([u],"int32");for(let e=0,t=0;e<s.length;e++)o.has(s[e])||(l.values[t]=s[e],c.values[t]=e,t++);return[l.toTensor(),c.toTensor()]};const vn=(0,u.op)({sign_:function(e){const t={x:(0,i._1)(e,"x","sign")};return a.BV.runKernel(o.i5y,t)}});const xn=(0,u.op)({sin_:function(e){const t={x:(0,i._1)(e,"x","sin","float32")};return a.BV.runKernel(o.RQH,t)}});const Nn=(0,u.op)({sinh_:function(e){const t={x:(0,i._1)(e,"x","sinh")};return a.BV.runKernel(o.wYB,t)}});const _n=(0,u.op)({slice1d_:function(e,t,n){const r=(0,i._1)(e,"x","slice1d");return h.hu(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),B(r,[t],[n])}});const Sn=(0,u.op)({slice2d_:function(e,t,n){const r=(0,i._1)(e,"x","slice2d");return h.hu(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),B(r,t,n)}});const kn=(0,u.op)({slice3d_:function(e,t,n){const r=(0,i._1)(e,"x","slice3d");return h.hu(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),B(r,t,n)}});const Tn=(0,u.op)({slice4d_:function(e,t,n){const r=(0,i._1)(e,"x","slice4d");return h.hu(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),B(r,t,n)}});const En=(0,u.op)({softmax_:function(e,t=-1){const n=(0,i._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return a.BV.runKernel(o.Gcp,r,s)}});const In=(0,u.op)({fft_:function(e){(0,h.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return a.BV.runKernel(o.vwp,t)}});const An=(0,u.op)({ifft_:function(e){(0,h.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return a.BV.runKernel(o.Qg5,t)}});const Mn=(0,u.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=(0,T.X)(e,[n,t]);r=An(s)}else{const s=[n,2*(t-1)],a=(0,T.X)((0,an.k)(e),[n,t]),o=(0,T.X)((0,je.a)(e),[n,t]),i=cn(B(a,[0,1],[n,t-2]),1),u=(0,$.d)(cn(B(o,[0,1],[n,t-2]),1),(0,Me.i)(-1)),l=M([a,i],1),c=M([o,u],1),p=(0,T.X)((0,X.P)(l,c),[s[0],s[1]]);r=An(p)}if(r=(0,an.k)(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=(0,T.X)(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});const On=(0,u.op)({split_:function(e,t,n=0){const r={x:(0,i._1)(e,"x","split")},s={numOrSizeSplits:t,axis:n};return a.BV.runKernel(o.L8s,r,s)}});const $n=(0,u.op)({rfft_:function(e,t){(0,h.hu)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=B(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=M([e,_t(r)],e.shape.length-1),n=t}else s=e;const a=(0,ve.P)(s),o=(0,T.X)((0,X.P)(s,a),[r,n]),i=In(o),u=Math.floor(n/2)+1,l=(0,an.k)(i),c=(0,je.a)(i),p=On(l,[u,n-u],l.shape.length-1),d=On(c,[u,n-u],c.shape.length-1),m=s.shape.slice();return m[s.shape.length-1]=u,(0,T.X)((0,X.P)(p[0],d[0]),m)}});const Dn=(0,u.op)({squaredDifference_:function(e,t){let n=(0,i._1)(e,"a","squaredDifference"),r=(0,i._1)(t,"b","squaredDifference");[n,r]=(0,x.makeTypesMatch)(n,r),(0,ye.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return a.BV.runKernel(o._tC,s,{})}});const Bn=(0,u.op)({squeeze_:function(e,t){const n=(0,i._1)(e,"x","squeeze","string_or_numeric");return(0,T.X)(n,(0,h.bp)(n.shape,t).newShape)}});const Rn=(0,u.op)({stack_:function(e,t=0){const n=(0,i.sI)(e,"tensors","stack","string_or_numeric");h.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&h.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return a.BV.runKernel(o.QiL,r,s)}});var Vn=n(6757);const Cn=(0,u.op)({stridedSlice_:function(e,t,n,r,s=0,u=0,l=0,c=0,p=0){const h={x:(0,i._1)(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:r,beginMask:s,endMask:u,ellipsisMask:l,newAxisMask:c,shrinkAxisMask:p};return a.BV.runKernel(o.jQk,h,d)}});const Fn=(0,u.op)({tan_:function(e){const t={x:(0,i._1)(e,"x","tan","float32")};return a.BV.runKernel(o.sEM,t)}});var Pn=n(8061),Ln=n(8370);function zn(e,t){(0,h.Cq)(e);const n=(0,i.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,Ln.H)(e,null,n,t)}function Wn(e,t,n){if((0,h.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,i.C)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,Ln.H)(e,t,r,n)}var qn=n(183);function Un(e,t,n){if((0,h.Cq)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=(0,i.C)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,Ln.H)(e,t,r,n)}function Gn(e,t,n){if((0,h.Cq)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=(0,i.C)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,Ln.H)(e,t,r,n)}function Hn(e,t,n){if((0,h.Cq)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=(0,i.C)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,(0,Ln.H)(e,t,r,n)}const jn=(0,u.op)({topk_:function(e,t=1,n=!0){const r=(0,i._1)(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const u={x:r},l={k:t,sorted:n},[c,p]=a.BV.runKernel(o.cWu,u,l);return{values:c,indices:p}}});const Kn=(0,u.op)({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Yt(t,n,r,!0,s),o=(0,G.f)(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=a.nextValue();return o.toTensor()}});const Xn=(0,u.op)({unique_:function(e,t=0){const n=(0,i._1)(e,"x","unique","string_or_numeric");(0,h.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[u,l]=a.BV.runKernel(o.kpP,r,s);return{values:u,indices:l}}});const Qn=(0,u.op)({unsortedSegmentSum_:function(e,t,n){const r=(0,i._1)(e,"x","unsortedSegmentSum"),s=(0,i._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,h.hu)((0,h.GN)(n),(()=>"numSegments must be of dtype int"));const u={x:r,segmentIds:s},l={numSegments:n};return a.BV.runKernel(o.Qvg,u,l)}});const Yn=(0,u.op)({unstack_:function(e,t=0){const n=(0,i._1)(e,"x","unstack","string_or_numeric");h.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return a.BV.runKernel(o.ToN,r,s)}});function Zn(e,t){return gt(e,t,"right")}function Jn(e,t=!0,n,r){return a.BV.makeVariable(e,t,n,r)}var er=n(9490);const tr=async function(e){const t=(0,i._1)(e,"condition","whereAsync","bool"),n=await t.data(),r=(0,er.Z)(t.shape,n);return e!==t&&t.dispose(),r};const nr=async function(e,t,n){const r=(0,i._1)(e,"tensor","boolMask"),s=(0,i._1)(t,"mask","boolMask","bool"),a=null==n?0:n,o=s.rank,u=r.shape;h.hu(o>0,(()=>"mask cannot be scalar")),h.k5(u.slice(a,a+o),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=a;e<a+o;e++)l*=u[e];const c=u.slice(0,a).concat([l],u.slice(a+o)),p=(0,T.X)(r,c),d=(0,T.X)(s,[-1]),m=await tr(d),f=Bn(m,[1]),g=Ue(p,f,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),f.dispose(),p.dispose(),d.dispose(),m.dispose(),g};var rr=n(5347);const sr=(0,u.op)({movingAverage_:function(e,t,n,r,s=!0){const a=(0,i._1)(e,"v","movingAverage"),o=(0,i._1)(t,"x","movingAverage"),u=(0,i._1)(n,"decay","movingAverage");(0,x.assertTypesMatch)(a,o),h.hu(h.cO(a.shape,o.shape),(()=>"Shape mismatch in v and x"));const l=(0,Me.i)(1),c=(0,ut.l)(l,u);let d=(0,$.d)((0,ut.l)(o,a),c);if(s){h.hu(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=(0,i._1)(r,"step","movingAverage");d=(0,ge.h)(d,(0,ut.l)(l,(0,Ae.s)(u,e)))}return(0,p.I)(a,d)}});var ar=n(1498);const or=(0,u.op)({scatterND_:function(e,t,n){const r=(0,i._1)(e,"indices","scatterND","int32"),s=(0,i._1)(t,"updates","scatterND");ar.validateInput(s,r,n);const u={indices:r,updates:s},l={shape:n};return a.BV.runKernel(o.xQA,u,l)}});const ir=(0,u.op)({sparseToDense_:function(e,t,n,r=0){const s=(0,i._1)(e,"sparseIndices","sparseToDense","int32"),u=(0,i._1)(t,"sparseValues","sparseToDense","string_or_numeric"),l=(0,i._1)(r,"defaultValue","sparseToDense",u.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,u,n,l);const c={sparseIndices:s,sparseValues:u,defaultValue:l},p={outputShape:n};return a.BV.runKernel(o.D2d,c,p)}});const ur=(0,u.op)({gatherND_:function(e,t){const n=(0,i._1)(t,"indices","gatherND","int32"),r={params:(0,i._1)(e,"x","gatherND","string_or_numeric"),indices:n};return a.BV.runKernel(o.q1x,r)}});const lr=(0,u.op)({dropout_:function(e,t,n,r){const s=(0,i._1)(e,"x","dropout");if(h.hu("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),h.hu(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof kt.es?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(h.cO(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),o=1-t,u=(0,ge.h)(We((0,p.I)(rn(a,0,1,"float32",r),o)),o);return(0,$.d)(s,u)}});function cr(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function pr(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const o=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(o)}return zn(s,"float32")}const hr=async function(e,t,n=1){const r=(0,i._1)(e,"predictions","inTopK"),s=(0,i._1)(t,"targets","inTopK");(0,h.hu)(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),(0,h.hu)(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),(0,h.k5)(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];(0,h.hu)(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const o=await r.data(),u=await s.data(),[l,c]=[o.length/a,a],p=(0,h.WP)("bool",l);for(let e=0;e<l;e++){const t=e*c,r=o.subarray(t,t+c),s=[];for(let e=0;e<r.length;e++)s.push({value:r[e],index:e});s.sort(((e,t)=>t.value-e.value)),p[e]=0;for(let t=0;t<n;t++)if(s[t].index===u[e]){p[e]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),(0,Pn.X)(p,s.shape,"bool")};const dr=(0,u.op)({conv2DBackpropFilter_:function(e,t,n,r,s,i="NHWC",u){let l=e;3===e.rank&&(l=(0,T.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=(0,T.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),h.hu(4===l.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${l.shape}.`)),h.hu(4===c.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${c.shape}.`)),h.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const p="NHWC"===i?l.shape[3]:l.shape[1],d="NHWC"===i?c.shape[3]:c.shape[1];h.hu(p===n[2],(()=>`Error in conv2dDerFilter: depth of input ${p}) must match input depth in filter (${n[2]}.`)),h.hu(d===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${n[3]}).`)),k.m("conv2dDerFilter",s,u);const m={x:l,dy:c},f={strides:r,pad:s,dataFormat:i,dimRoundingMode:u,filterShape:n};return a.BV.runKernel(o.wUP,m,f)}});var mr=n(4559);const fr=(0,u.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:u=[1,1],dimRoundingMode:l,bias:c,activation:d="linear",preluActivationWeights:m,leakyreluAlpha:f}){if(d=d||"linear",!1===(0,mr.uy)(a.BV.state.gradientDepth,d)){h.hu("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let a=ee(e,t,n,r,s,u,l);return null!=c&&(a=(0,p.I)(a,c)),(0,mr.QH)(a,d,m,f)}const g=(0,i._1)(e,"x","conv2d","float32"),y=(0,i._1)(t,"filter","conv2d","float32");let b=g,w=!1;3===g.rank&&(w=!0,b=(0,T.X)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),h.hu(4===b.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${b.rank}.`)),h.hu(4===y.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${y.rank}.`)),k.m("fused conv2d",r,l);const v="NHWC"===s?b.shape[3]:b.shape[1];h.hu(y.shape[2]===v,(()=>`Error in conv2d: depth of input (${v}) must match input depth for filter ${y.shape[2]}.`)),h.hu(k.jT(n,u),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${u}'`));const N=k.Ix(b.shape,y.shape,n,u,r,l);let _,S;if(null!=c&&(_=(0,i._1)(c,"bias","fused conv2d"),[_]=(0,x.makeTypesMatch)(_,g),"NHWC"===s?ye.assertAndGetBroadcastShape(N.outShape,_.shape):(h.hu(_.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${_.shape.length}.`)),h.hu(0===_.shape.length||_.shape[0]===N.outChannels||1===_.shape[0],(()=>`Error in fused conv2d: bias shape (${_.shape}) is not compatible with the number of output channels (${N.outChannels})`)))),null!=m){const e=m.shape;if(h.hu(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)h.hu(1===e[0]||e[0]===N.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${N.outChannels}).`));else if(3===e.length)try{ye.assertAndGetBroadcastShape(e,N.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${N.outShape}).`;throw Error(n)}S=(0,i._1)(m,"prelu weights","fused conv2d")}const E=(e,t)=>{h.hu("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[a,o,i,l]=t,c=(0,mr.Fr)(e,i,d);h.hu(k.I0(u),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${u}'`));const p=[ne(o.shape,c,a,n,r),dr(o,c,a.shape,n,r)];if(null!=l){const e=(0,mr.pf)(l,c);p.push(e)}return p},I={x:b,filter:y,bias:_,preluActivationWeights:S},A={strides:n,pad:r,dataFormat:s,dilations:u,dimRoundingMode:l,activation:d,leakyreluAlpha:f};if(null==c){const e=(0,st.cb)(((e,t,n)=>{let r=a.BV.runKernel(o._V0,I,A);return n([t,e,r]),w&&(r=(0,T.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:E}}));return e(b,y)}{const e=(0,st.cb)(((e,t,n,r)=>{let s=a.BV.runKernel(o._V0,I,A);return r([t,e,s,n]),w&&(s=(0,T.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:E}}));return e(b,y,_)}}});const gr=(0,u.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,i=[1,1],u){let l=e;3===e.rank&&(l=(0,T.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=(0,T.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={x:l,dy:c},h={strides:r,pad:s,dimRoundingMode:u,dilations:i,filterShape:n};return a.BV.runKernel(o.sL$,p,h)}});const yr=(0,u.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,i=[1,1],u){let l=t,c=!1;3===t.rank&&(c=!0,l=(0,T.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={dy:l,filter:n},h={strides:r,pad:s,dimRoundingMode:u,dilations:i,inputShape:e},d=a.BV.runKernel(o.y7R,p,h);return c?(0,T.X)(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const br=(0,u.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:u=[1,1],dimRoundingMode:l,bias:c,activation:d="linear",preluActivationWeights:m,leakyreluAlpha:f}){if(!1===(0,mr.uy)(a.BV.state.gradientDepth,d)){let a=de(e,t,n,r,s,u,l);return null!=c&&(a=(0,p.I)(a,c)),(0,mr.QH)(a,d,m,f)}const g=(0,i._1)(e,"x","depthwiseConv2d","float32"),y=(0,i._1)(t,"filter","depthwiseConv2d","float32");let b=g,w=!1;3===g.rank&&(w=!0,b=(0,T.X)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),h.hu(4===b.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${b.rank}.`)),h.hu(4===y.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${y.rank}.`)),h.hu(b.shape[3]===y.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${b.shape[3]}) must match the inChannels dimension in filter ${y.shape[2]}.`)),null==u&&(u=[1,1]),h.hu(k.jT(n,u),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${u}'`)),k.m("fused depthwiseConv2d",r,l);const v=k.Ix(b.shape,y.shape,n,u,r,l,!0);let N,_;null!=c&&(N=(0,i._1)(c,"bias","fused conv2d"),[N]=(0,x.makeTypesMatch)(N,g),ye.assertAndGetBroadcastShape(v.outShape,N.shape)),null!=m&&(_=(0,i._1)(m,"prelu weights","fused depthwiseConv2d"));const S=(e,t)=>{h.hu(k.I0(u),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${u}'`));const[s,a,o,i]=t,c=(0,mr.Fr)(e,o,d),p=yr(a.shape,c,s,n,r,u,l),m=gr(a,c,s.shape,n,r,u,l);if(null!=i){return[p,m,(0,mr.pf)(N,c)]}return[p,m]},E={x:b,filter:y,bias:N,preluActivationWeights:_},I={strides:n,pad:r,dataFormat:s,dilations:u,dimRoundingMode:l,activation:d,leakyreluAlpha:f};if(null==c){const e=(0,st.cb)(((e,t,n)=>{let r=a.BV.runKernel(o.luS,E,I);return n([t,e,r]),w&&(r=(0,T.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:S}}));return e(b,y)}{const e=(0,st.cb)(((e,t,n,r)=>{let s=a.BV.runKernel(o.luS,E,I);return r([t,e,s,n]),w&&(s=(0,T.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:S}}));return e(b,y,N)}}});const wr=(0,u.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c=.2}){if(!1===(0,mr.uy)(a.BV.state.gradientDepth,u)){let a=(0,O.O)(e,t,n,r);return null!=s&&(a=(0,p.I)(a,s)),(0,mr.QH)(a,u,l,c)}let d=(0,i._1)(e,"a","fused matMul"),m=(0,i._1)(t,"b","fused matMul");[d,m]=(0,x.makeTypesMatch)(d,m);const f=n?d.shape[d.rank-2]:d.shape[d.rank-1],g=r?m.shape[m.rank-1]:m.shape[m.rank-2],y=n?d.shape[d.rank-1]:d.shape[d.rank-2],b=r?m.shape[m.rank-2]:m.shape[m.rank-1],w=d.shape.slice(0,-2),v=m.shape.slice(0,-2),N=h.NA(w),_=h.NA(v);h.hu(f===g,(()=>`Error in fused matMul: inner shapes (${f}) and (${g}) of Tensors with shapes ${d.shape} and ${m.shape} and transposeA=${n} and transposeB=${r} must match.`));const S=ye.assertAndGetBroadcastShape(d.shape.slice(0,-2),m.shape.slice(0,-2)).concat([y,b]),k=n?(0,T.X)(d,[N,f,y]):(0,T.X)(d,[N,y,f]),E=r?(0,T.X)(m,[_,b,g]):(0,T.X)(m,[_,g,b]);let I,A;null!=s&&(I=(0,i._1)(s,"bias","fused matMul"),[I]=(0,x.makeTypesMatch)(I,d),ye.assertAndGetBroadcastShape(S,I.shape)),null!=l&&(A=(0,i._1)(l,"prelu weights","fused matMul"));const M=(e,t)=>{const[a,o,i,l]=t,c=(0,mr.Fr)((0,T.X)(e,i.shape),i,u);let p,h;if(n||r?!n&&r?(p=(0,O.O)(c,o,!1,!1),h=(0,O.O)(c,a,!0,!1)):n&&!r?(p=(0,O.O)(o,c,!1,!0),h=(0,O.O)(a,c,!1,!1)):(p=(0,O.O)(o,c,!0,!0),h=(0,O.O)(c,a,!0,!0)):(p=(0,O.O)(c,o,!1,!0),h=(0,O.O)(a,c,!0,!1)),null!=s){return[p,h,(0,mr.pf)(l,c)]}return[p,h]},$={a:k,b:E,bias:I,preluActivationWeights:A},D={transposeA:n,transposeB:r,activation:u,leakyreluAlpha:c};if(null==s){const e=(0,st.cb)(((e,t,n)=>{const r=a.BV.runKernel(o.usg,$,D);return n([e,t,r]),{value:(0,T.X)(r,S),gradFunc:M}}));return e(k,E)}{const e=(0,st.cb)(((e,t,n,r)=>{const s=a.BV.runKernel(o.usg,$,D);return r([e,t,s,n]),{value:(0,T.X)(s,S),gradFunc:M}}));return e(k,E,I)}}});const vr=(0,u.op)({hammingWindow_:function(e){return pr(e,.54,.46)}});const xr=(0,u.op)({hannWindow_:function(e){return pr(e,.5,.5)}});const Nr=(0,u.op)({frame_:function(e,t,n,r=!1,s=0){let a=0;const o=[];for(;a+t<=e.size;)o.push(B(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,i=M([B(e,a,t-r),(0,j.h)([r],s)]);o.push(i),a+=n}return 0===o.length?Wn([],[0,t]):(0,T.X)(M(o),[o.length,t])}});const _r=(0,u.op)({stft_:function(e,t,n,r,s=xr){null==r&&(r=cr(t));const a=Nr(e,t,n),o=(0,$.d)(a,s(t));return $n(o,r)}});const Sr=(0,u.op)({cropAndResize_:function(e,t,n,r,s="bilinear",u=0){const l=(0,i._1)(e,"image","cropAndResize"),c=(0,i._1)(t,"boxes","cropAndResize","float32"),p=(0,i._1)(n,"boxInd","cropAndResize","int32"),d=c.shape[0];h.hu(4===l.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${l.rank}.`)),h.hu(2===c.rank&&4===c.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${d},4] but had shape ${c.shape}.`)),h.hu(1===p.rank&&p.shape[0]===d,(()=>`Error in cropAndResize: boxInd must be have size [${d}] but had shape ${c.shape}.`)),h.hu(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),h.hu(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),h.hu("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const m={image:l,boxes:c,boxInd:p},f={method:s,extrapolationValue:u,cropSize:r};return a.BV.runKernel(o.VcC,m,f)}});const kr=(0,u.op)({flipLeftRight_:function(e){const t=(0,i._1)(e,"image","flipLeftRight","float32");h.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return a.BV.runKernel(o.Uyb,n,{})}});const Tr=(0,u.op)({grayscaleToRGB_:function(e){const t=(0,i._1)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];h.hu(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),h.hu(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,Le(t,s)}});const Er=(0,u.op)({rotateWithOffset_:function(e,t,n=0,r=.5){const s=(0,i._1)(e,"image","rotateWithOffset","float32");h.hu(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const u={image:s},l={radians:t,fillValue:n,center:r};return a.BV.runKernel(o.b9H,u,l)}});function Ir(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const o=e.shape[0];return n=Math.min(n,o),h.hu(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),h.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),h.hu(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),h.hu(1===t.rank,(()=>"scores must be a 1D tensor")),h.hu(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),h.hu(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const Ar=(0,u.op)({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const u=(0,i._1)(e,"boxes","nonMaxSuppression","float32"),l=(0,i._1)(t,"scores","nonMaxSuppression","float32"),c=Ir(u,l,n,r,s),p={maxOutputSize:n=c.maxOutputSize,iouThreshold:r=c.iouThreshold,scoreThreshold:s=c.scoreThreshold};return a.BV.runKernel(o.uv1,{boxes:u,scores:l},p)}});var Mr=n(447);const Or=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=(0,i._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,i._1)(t,"scores","nonMaxSuppressionAsync"),u=Ir(a,o,n,r,s);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold;const l=await Promise.all([a.data(),o.data()]),c=l[0],p=l[1],{selectedIndices:h}=(0,Mr.GP)(c,p,n,r,s);return a!==e&&a.dispose(),o!==t&&o.dispose(),zn(h,"int32")};const $r=(0,u.op)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,u=0){const l=(0,i._1)(e,"boxes","nonMaxSuppression"),c=(0,i._1)(t,"scores","nonMaxSuppression"),p=Ir(l,c,n,r,s,u),h={boxes:l,scores:c},d={maxOutputSize:n=p.maxOutputSize,iouThreshold:r=p.iouThreshold,scoreThreshold:s=p.scoreThreshold,softNmsSigma:u=p.softNmsSigma},m=a.BV.runKernel(o.W0H,h,d);return{selectedIndices:m[0],selectedScores:m[1]}}});const Dr=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const o=(0,i._1)(e,"boxes","nonMaxSuppressionAsync"),u=(0,i._1)(t,"scores","nonMaxSuppressionAsync"),l=Ir(o,u,n,r,s,a);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,a=l.softNmsSigma;const c=await Promise.all([o.data(),u.data()]),p=c[0],h=c[1],{selectedIndices:d,selectedScores:m}=(0,Mr.pA)(p,h,n,r,s,a);return o!==e&&o.dispose(),u!==t&&u.dispose(),{selectedIndices:zn(d,"int32"),selectedScores:zn(m)}};const Br=(0,u.op)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,u=!1){const l=(0,i._1)(e,"boxes","nonMaxSuppression"),c=(0,i._1)(t,"scores","nonMaxSuppression"),p=Ir(l,c,n,r,s,null),h={boxes:l,scores:c},d={maxOutputSize:p.maxOutputSize,iouThreshold:p.iouThreshold,scoreThreshold:p.scoreThreshold,padToMaxOutputSize:u},m=a.BV.runKernel(o.cye,h,d);return{selectedIndices:m[0],validOutputs:m[1]}}});const Rr=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const o=(0,i._1)(e,"boxes","nonMaxSuppressionAsync"),u=(0,i._1)(t,"scores","nonMaxSuppressionAsync"),l=Ir(o,u,n,r,s,null),c=l.maxOutputSize,p=l.iouThreshold,h=l.scoreThreshold,[d,m]=await Promise.all([o.data(),u.data()]),{selectedIndices:f,validOutputs:g}=(0,Mr.qP)(d,m,c,p,h,a);return o!==e&&o.dispose(),u!==t&&u.dispose(),{selectedIndices:zn(f,"int32"),validOutputs:(0,Me.i)(g,"int32")}};const Vr=(0,u.op)({resizeBilinear_:function(e,t,n=!1,r=!1){const s=(0,i._1)(e,"images","resizeBilinear");h.hu(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),h.hu(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),h.hu(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let u=s,l=!1;3===s.rank&&(l=!0,u=(0,T.X)(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,c={images:u},p={alignCorners:n,halfPixelCenters:r,size:t},d=a.BV.runKernel(o._Yw,c,p);return l?(0,T.X)(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const Cr=(0,u.op)({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=(0,i._1)(e,"images","resizeNearestNeighbor");h.hu(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),h.hu(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),h.hu("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),h.hu(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let u=s,l=!1;3===s.rank&&(l=!0,u=(0,T.X)(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,c={images:u},p={alignCorners:n,halfPixelCenters:r,size:t},d=a.BV.runKernel(o.dpD,c,p);return l?(0,T.X)(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const Fr=(0,u.op)({threshold_:function(e,t="binary",n=!1,r=.5){const s=(0,i._1)(e,"image","threshold"),a=s.shape[0]*s.shape[1];let o,u,l,c,d=(0,$.d)(zn([r]),255);if(h.hu(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),h.hu(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),h.hu("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),h.hu("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[o,u,l]=On(s,[1,1,1],-1);const e=(0,$.d)(o,.2989),t=(0,$.d)(u,.587),n=(0,$.d)(l,.114);c=(0,p.I)((0,p.I)(e,t),n)}else c=e;if("otsu"===t){d=function(e,t){let n,r,s,a,o,i,u=zn([-1]),l=zn([0]),c=zn([0]);for(let h=0;h<e.size-1;h++){n=B(e,0,h+1),r=B(e,h+1),o=(0,ge.h)((0,De.S)(n),t),i=(0,ge.h)((0,De.S)(r),t);const d=(0,De.S)((0,$.d)(n,sn(0,n.size)));s=(0,ge.h)(d,(0,De.S)(n));const m=(0,j.h)(r.shape,n.size),f=(0,p.I)(sn(0,r.size),m),g=(0,$.d)(r,f);a=(0,ge.h)((0,De.S)(g),(0,De.S)(r));const y=(0,ut.l)(s,a),b=(0,ut.l)(s,a),w=(0,$.d)(o,i);c=(0,$.d)((0,$.d)(w,y),b);const v=Ge(c,l);l=we(v,c,l),u=we(v,zn([h]),u)}return u}(W((0,S.p)(fn(c),"int32"),(0,Pn.X)([]),256),a)}const m=n?Je(c,d):Ge(c,d);return(0,S.p)((0,$.d)(m,255),"int32")}});const Pr=(0,u.op)({transform_:function(e,t,n="nearest",r="constant",s=0,u){const l=(0,i._1)(e,"image","transform","float32"),c=(0,i._1)(t,"transforms","transform","float32");h.hu(4===l.rank,(()=>`Error in transform: image must be rank 4,but got rank ${l.rank}.`)),h.hu(2===c.rank&&(c.shape[0]===l.shape[0]||1===c.shape[0])&&8===c.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),h.hu(null==u||2===u.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${u}.`));const p={image:l,transforms:c},d={interpolation:n,fillMode:r,fillValue:s,outputShape:u};return a.BV.runKernel(o.wx7,p,d)}});const Lr=(0,u.op)({bandPart_:function(e,t,n){(0,h.hu)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,h.hu)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=(0,i._1)(e,"a","bandPart");(0,h.hu)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,o]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=a),n<0&&(n=o);const u=(0,T.X)(sn(0,a,1,"int32"),[-1,1]),l=sn(0,o,1,"int32"),c=(0,ut.l)(u,l),p=pt(Je(c,(0,Me.i)(+t,"int32")),He(c,(0,Me.i)(-n,"int32"))),d=_t([a,o],r.dtype);return(0,T.X)(Rn(Yn((0,T.X)(r,[-1,a,o])).map((e=>we(p,e,d)))),s)}});const zr=(0,u.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,h.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,h.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=On(e,e.shape[0],0).map((e=>Bn(e,[0])));(0,h.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(a.BV.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=(0,$.d)((0,De.S)((0,$.d)(n[r],e)),n[r]);e=(0,ut.l)(e,t)}return(0,ge.h)(e,Re(e,"euclidean"))})));return t?Rn(n,0):n}});var Wr=n(2811);function qr(e,t=!1){return a.BV.tidy((()=>{(0,h.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=ze(n),o=(0,A.d)(e);const i=Wn([[1]],[1,1]);let u=(0,A.d)(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=o,l=u,c=s;[u,o,s]=a.BV.tidy((()=>{const t=B(o,[e,e],[n-e,1]),a=Re(t),l=B(o,[e,e],[1,1]),c=we(Ge(l,0),Wn([[-1]]),Wn([[1]])),p=(0,ut.l)(l,(0,$.d)(c,a)),h=(0,ge.h)(t,p);u=1===h.shape[0]?(0,A.d)(i):M([i,B(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const d=(0,at.W)((0,ge.h)((0,O.O)(c,p),a)),m=B(o,[e,0],[n-e,r]),f=(0,$.d)(d,u),g=(0,rr.p)(u);if(0===e)o=(0,ut.l)(m,(0,O.O)(f,(0,O.O)(g,m)));else{const t=(0,ut.l)(m,(0,O.O)(f,(0,O.O)(g,m)));o=M([B(o,[0,0],[e,r]),t],0)}const y=(0,rr.p)(f),b=B(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=(0,ut.l)(b,(0,O.O)((0,O.O)(b,u),y));else{const t=(0,ut.l)(b,(0,O.O)((0,O.O)(b,u),y));s=M([B(s,[0,0],[n,e]),t],1)}return[u,o,s]})),(0,Wr.B9)([t,l,c])}return!t&&n>r&&(s=B(s,[0,0],[n,r]),o=B(o,[0,0],[r,r])),[s,o]}))}const Ur=(0,u.op)({qr_:function(e,t=!1){if((0,h.hu)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return qr(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Yn((0,T.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];r.forEach((e=>{const[n,r]=qr(e,t);s.push(n),a.push(r)}));return[(0,T.X)(Rn(s,0),e.shape),(0,T.X)(Rn(a,0),e.shape)]}}});var Gr=n(8038);const Hr=(0,u.op)({computeWeightedLoss_:function(e,t,n=Gr.I.SUM_BY_NONZERO_WEIGHTS){const r=(0,i._1)(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=(0,i._1)(t,"weights","computeWeightedLoss"));const a=null==s?r:(0,$.d)(r,s);if(n===Gr.I.NONE)return a;if(n===Gr.I.SUM)return(0,De.S)(a);if(n===Gr.I.MEAN){if(null==s)return Nt(a);{const e=r.size/s.size,t=(0,ge.h)((0,De.S)(a),(0,De.S)(s));return e>1?(0,ge.h)(t,(0,Me.i)(e)):t}}if(n===Gr.I.SUM_BY_NONZERO_WEIGHTS){if(null==s)return(0,ge.h)((0,De.S)(a),(0,Me.i)(r.size));{const e=(0,$.d)(s,St(r.shape)),t=(0,S.p)((0,De.S)(Dt(e,(0,Me.i)(0))),"float32");return(0,ge.h)((0,De.S)(a),t)}}throw Error(`Unknown reduction: ${n}`)}});const jr=(0,u.op)({absoluteDifference_:function(e,t,n,r=Gr.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,i._1)(e,"labels","absoluteDifference"),o=(0,i._1)(t,"predictions","absoluteDifference");let u=null;null!=n&&(u=(0,i._1)(n,"weights","absoluteDifference")),(0,h.k5)(a.shape,o.shape,"Error in absoluteDifference: ");const l=(0,s.W)((0,ut.l)(a,o));return Hr(l,u,r)}});const Kr=(0,u.op)({cosineDistance_:function(e,t,n,r,s=Gr.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,i._1)(e,"labels","cosineDistance"),o=(0,i._1)(t,"predictions","cosineDistance");let u=null;null!=r&&(u=(0,i._1)(r,"weights","cosineDistance")),(0,h.k5)(a.shape,o.shape,"Error in cosineDistance: ");const l=(0,Me.i)(1),c=(0,ut.l)(l,(0,De.S)((0,$.d)(a,o),n,!0));return Hr(c,u,s)}});const Xr=(0,u.op)({hingeLoss_:function(e,t,n,r=Gr.I.SUM_BY_NONZERO_WEIGHTS){let s=(0,i._1)(e,"labels","hingeLoss");const a=(0,i._1)(t,"predictions","hingeLoss");let o=null;null!=n&&(o=(0,i._1)(n,"weights","hingeLoss")),(0,h.k5)(s.shape,a.shape,"Error in hingeLoss: ");const u=(0,Me.i)(1);s=(0,ut.l)((0,$.d)((0,Me.i)(2),s),u);const l=(0,un.U)((0,ut.l)(u,(0,$.d)(s,a)));return Hr(l,o,r)}});const Qr=(0,u.op)({huberLoss_:function(e,t,n,r=1,a=Gr.I.SUM_BY_NONZERO_WEIGHTS){const o=(0,i._1)(e,"labels","huberLoss"),u=(0,i._1)(t,"predictions","huberLoss");let l=null;null!=n&&(l=(0,i._1)(n,"weights","huberLoss")),(0,h.k5)(o.shape,u.shape,"Error in huberLoss: ");const c=(0,Me.i)(r),d=(0,s.W)((0,ut.l)(u,o)),m=Et(d,c),f=(0,ut.l)(d,m),g=(0,p.I)((0,$.d)((0,Me.i)(.5),(0,$e.h)(m)),(0,$.d)(c,f));return Hr(g,l,a)}});const Yr=(0,u.op)({logLoss_:function(e,t,n,r=1e-7,s=Gr.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,i._1)(e,"labels","logLoss"),o=(0,i._1)(t,"predictions","logLoss");let u=null;null!=n&&(u=(0,i._1)(n,"weights","logLoss")),(0,h.k5)(a.shape,o.shape,"Error in logLoss: ");const l=(0,Me.i)(1),c=(0,Me.i)(r),d=(0,at.W)((0,$.d)(a,nt((0,p.I)(o,c)))),m=(0,$.d)((0,ut.l)(l,a),nt((0,p.I)((0,ut.l)(l,o),c))),f=(0,ut.l)(d,m);return Hr(f,u,s)}});const Zr=(0,u.op)({meanSquaredError_:function(e,t,n,r=Gr.I.SUM_BY_NONZERO_WEIGHTS){const s=(0,i._1)(e,"labels","meanSquaredError"),a=(0,i._1)(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=(0,i._1)(n,"weights","meanSquaredError")),(0,h.k5)(s.shape,a.shape,"Error in meanSquaredError: ");const u=Dn(s,a);return Hr(u,o,r)}});const Jr=(0,u.op)({sigmoidCrossEntropy_:function(e,t,n,r=0,a=Gr.I.SUM_BY_NONZERO_WEIGHTS){let o=(0,i._1)(e,"multiClassLabels","sigmoidCrossEntropy");const u=(0,i._1)(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=(0,i._1)(n,"weights","sigmoidCrossEntropy")),(0,h.k5)(o.shape,u.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=(0,Me.i)(r),t=(0,Me.i)(1),n=(0,Me.i)(.5);o=(0,p.I)((0,$.d)(o,(0,ut.l)(t,e)),(0,$.d)(n,e))}const c=function(e,t){const n=(0,i._1)(e,"labels","sigmoidCrossEntropyWithLogits"),r=(0,i._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,h.k5)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=(0,un.U)(r),o=(0,$.d)(r,n),u=rt(Ce((0,at.W)((0,s.W)(r))));return(0,p.I)((0,ut.l)(a,o),u)}(o,u);return Hr(c,l,a)}});const es=(0,u.op)({softmaxCrossEntropy_:function(e,t,n,r=0,s=Gr.I.SUM_BY_NONZERO_WEIGHTS){let a=(0,i._1)(e,"onehotLabels","softmaxCrossEntropy");const o=(0,i._1)(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=(0,i._1)(n,"weights","softmaxCrossEntropy")),(0,h.k5)(a.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=(0,Me.i)(r),t=(0,Me.i)(1),n=(0,Me.i)(a.shape[1]);a=(0,p.I)((0,$.d)(a,(0,ut.l)(t,e)),(0,ge.h)(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=(0,st.cb)(((e,t,r)=>{const s=ct(t,[n],!0),a=(0,ut.l)((0,S.p)(t,"float32"),s);r([e,a]);const o=(0,at.W)((0,$.d)(a,e));return{value:(0,De.S)(o,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=(0,Te.rv)(e.shape,[n]);return[(0,$.d)((0,T.X)(e,a),(0,ut.l)((0,S.p)(r,"float32"),Ce(s))),(0,$.d)((0,T.X)(e,a),(0,ut.l)(Ce(s),(0,S.p)(r,"float32")))]}}}));return r(e,t)}(a,o);return Hr(l,u,s)}});const ts=(0,u.op)({sparseFillEmptyRows_:function(e,t,n,r){const s=(0,i._1)(e,"indices","sparseFillEmptyRows","int32"),u=(0,i._1)(t,"values","sparseFillEmptyRows"),l=(0,i._1)(n,"denseShape","sparseFillEmptyRows","int32"),c=(0,i._1)(r,"defaultValue","sparseFillEmptyRows",u.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==u.rank)throw new Error(`Values should be Tensor1D but received shape ${u.shape}`);if(1!==l.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${l.shape}`);if(0!==c.rank)throw new Error(`Default value should be a scalar but received shape ${c.shape}`);const p={indices:s,values:u,denseShape:l,defaultValue:c},h=a.BV.runKernel(o.O3z,p);return{outputIndices:h[0],outputValues:h[1],emptyRowIndicator:h[2],reverseIndexMap:h[3]}}});const ns=(0,u.op)({sparseReshape_:function(e,t,n){const r=(0,i._1)(e,"inputIndices","sparseReshape","int32"),s=(0,i._1)(t,"inputShape","sparseReshape","int32"),u=(0,i._1)(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==u.rank)throw new Error(`New shape should be Tensor1D but received shape ${u.shape}`);const l={inputIndices:r,inputShape:s,newShape:u},c=a.BV.runKernel(o.nhH,l);return{outputIndices:c[0],outputShape:c[1]}}});const rs=(0,u.op)({sparseSegmentMean_:function(e,t,n){const r=(0,i._1)(e,"data","sparseSegmentMean"),s=(0,i._1)(t,"indices","sparseSegmentMean","int32"),u=(0,i._1)(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==u.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${u.shape}`);const l={data:r,indices:s,segmentIds:u};return a.BV.runKernel(o.w3H,l)}});const ss=(0,u.op)({sparseSegmentSum_:function(e,t,n){const r=(0,i._1)(e,"data","sparseSegmentSum"),s=(0,i._1)(t,"indices","sparseSegmentSum","int32"),u=(0,i._1)(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==u.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${u.shape}`);const l={data:r,indices:s,segmentIds:u};return a.BV.runKernel(o.ZjV,l)}});const as=(0,u.op)({stringNGrams_:function(e,t,n,r,s,u,l,c){const p=(0,i._1)(e,"data","stringNGrams","string");if("string"!==p.dtype)throw new Error("Data must be of datatype string");if(1!==p.shape.length)throw new Error(`Data must be a vector, saw: ${p.shape}`);const h=(0,i._1)(t,"dataSplits","stringNGrams");if("int32"!==h.dtype)throw new Error("Data splits must be of datatype int32");const d={separator:n,nGramWidths:r,leftPad:s,rightPad:u,padWidth:l,preserveShortSequences:c},m={data:p,dataSplits:h},f=a.BV.runKernel(o._JP,m,d);return{nGrams:f[0],nGramsSplits:f[1]}}});const os=(0,u.op)({stringSplit_:function(e,t,n=!0){const r=(0,i._1)(e,"input","stringSplit","string"),s=(0,i._1)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const u={skipEmpty:n},l={input:r,delimiter:s},c=a.BV.runKernel(o.s1s,l,u);return{indices:c[0],values:c[1],shape:c[2]}}});const is=(0,u.op)({stringToHashBucketFast_:function(e,t){const n=(0,i._1)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return a.BV.runKernel(o.XkS,s,r)}}),us={fft:In,ifft:An,rfft:$n,irfft:Mn},ls={hammingWindow:vr,hannWindow:xr,frame:Nr,stft:_r},cs={flipLeftRight:kr,grayscaleToRGB:Tr,resizeNearestNeighbor:Cr,resizeBilinear:Vr,rotateWithOffset:Er,cropAndResize:Sr,nonMaxSuppression:Ar,nonMaxSuppressionAsync:Or,nonMaxSuppressionWithScore:$r,nonMaxSuppressionWithScoreAsync:Dr,nonMaxSuppressionPadded:Br,nonMaxSuppressionPaddedAsync:Rr,threshold:Fr,transform:Pr},ps={bandPart:Lr,gramSchmidt:zr,qr:Ur},hs={absoluteDifference:jr,computeWeightedLoss:Hr,cosineDistance:Kr,hingeLoss:Xr,huberLoss:Qr,logLoss:Yr,meanSquaredError:Zr,sigmoidCrossEntropy:Jr,softmaxCrossEntropy:es},ds={sparseFillEmptyRows:ts,sparseReshape:ns,sparseSegmentMean:rs,sparseSegmentSum:ss},ms={stringNGrams:as,stringSplit:os,stringToHashBucketFast:is}},4850:(e,t,n)=>{"use strict";n.d(t,{s:()=>i});var r=n(2543),s=n(3986),a=n(5810),o=n(2595);const i=(0,n(6273).op)({pow_:function(e,t){let n=(0,o._1)(e,"base","pow"),i=(0,o._1)(t,"exp","pow");[n,i]=(0,a.makeTypesMatch)(n,i);const u={a:n,b:i};return r.BV.runKernel(s.pe_,u)}})},1041:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var r=n(2543),s=n(3986),a=n(2595);const o=(0,n(6273).op)({prelu_:function(e,t){const n={x:(0,a._1)(e,"x","prelu"),alpha:(0,a._1)(t,"alpha","prelu")};return r.BV.runKernel(s.o0g,n)}})},3854:(e,t,n)=>{"use strict";function r(e,t=!1){console.log(e.toString(t))}n.d(t,{S:()=>r})},1432:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var r=n(2543),s=n(3986),a=n(2595);const o=(0,n(6273).op)({real_:function(e){const t={input:(0,a._1)(e,"input","real")};return r.BV.runKernel(s.xJR,t)}})},6348:(e,t,n)=>{"use strict";n.d(t,{U:()=>o});var r=n(2543),s=n(3986),a=n(2595);const o=(0,n(6273).op)({relu_:function(e){const t={x:(0,a._1)(e,"x","relu")};return r.BV.runKernel(s.qkr,t)}})},5350:(e,t,n)=>{"use strict";n.d(t,{b:()=>o});var r=n(2543),s=n(3986),a=n(2595);const o=(0,n(6273).op)({relu6_:function(e){const t={x:(0,a._1)(e,"x","relu6")};return r.BV.runKernel(s.SbG,t)}})},3772:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var r=n(2543),s=n(3986),a=n(2595);const o=(0,n(6273).op)({reshape_:function(e,t){const n={x:(0,a._1)(e,"x","reshape","string_or_numeric")},o={shape:t};return r.BV.runKernel(s.HZH,n,o)}})},6461:(e,t,n)=>{"use strict";n.d(t,{i:()=>a});var r=n(7186),s=n(8370);function a(e,t){if(((0,r.fU)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.fU)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,s.H)(e,[],[],t)}},1498:(e,t,n)=>{"use strict";n.r(t),n.d(t,{calculateShapes:()=>o,validateInput:()=>a,validateUpdateShape:()=>s});var r=n(7186);function s(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function a(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}s(n,t,e)}function o(e,t,n){const s=t.shape.length,a=s>1?t.shape[s-1]:1,o=n.length;let i=1;for(let e=a;e<o;++e)i*=n[e];const u=a<1?1:a;return{sliceRank:a,numUpdates:(0,r.NA)(t.shape)/u,sliceSize:i,strides:[...(0,r.e3)(n.slice(0,a)),1],outputSize:(0,r.NA)(n)}}},9544:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var r=n(2543),s=n(3986),a=n(2595);const o=(0,n(6273).op)({sigmoid_:function(e){const t={x:(0,a._1)(e,"x","sigmoid","float32")};return r.BV.runKernel(s.a5O,t)}})},8460:(e,t,n)=>{"use strict";n.d(t,{_:()=>o});var r=n(2543),s=n(3986),a=n(2595);const o=(0,n(6273).op)({sqrt_:function(e){const t={x:(0,a._1)(e,"x","sqrt","float32")};return r.BV.runKernel(s.FKq,t)}})},5272:(e,t,n)=>{"use strict";n.d(t,{h:()=>a});var r=n(2543),s=n(2595);const a=(0,n(6273).op)({square_:function(e){const t=(0,s._1)(e,"x","square");return r.BV.runKernel("Square",{x:t},{})}})},6757:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var r=n(2543),s=n(3986),a=n(2595);const o=(0,n(6273).op)({step_:function(e,t=0){const n={x:(0,a._1)(e,"x","step")},o={alpha:t};return r.BV.runKernel(s.h8e,n,o)}})},7996:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(2543),s=n(3986),a=n(5810),o=n(2595);const i=(0,n(6273).op)({sub_:function(e,t){let n=(0,o._1)(e,"a","sub"),i=(0,o._1)(t,"b","sub");[n,i]=(0,a.makeTypesMatch)(n,i);const u={a:n,b:i};return r.BV.runKernel(s.Tr8,u)}})},4550:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var r=n(2543),s=n(3986),a=n(2595),o=n(6202);const i=(0,n(6273).op)({sum_:function(e,t=null,n=!1){let i=(0,a._1)(e,"x","sum");"bool"===i.dtype&&(i=(0,o.p)(i,"int32"));const u={x:i},l={axis:t,keepDims:n};return r.BV.runKernel(s.GBy,u,l)}})},8061:(e,t,n)=>{"use strict";n.d(t,{X:()=>a});var r=n(2595),s=n(8370);function a(e,t,n){const a=(0,r.C)(e,n);return(0,s.H)(e,t,a,n)}},183:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var r=n(2595),s=n(7186),a=n(8370);function o(e,t,n){if((0,s.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const o=(0,r.C)(e,n);if(3!==o.length&&1!==o.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===o.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,a.H)(e,t,o,n)}},8370:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(2543),s=n(7186),a=n(6646);function o(e,t,n,o){if(null==o&&(o=(0,s.D2)(e)),"complex64"===o)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!(0,s.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,s.Mu)(t);const e=(0,s.NA)(t),r=(0,s.NA)(n);(0,s.hu)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==(0,s.NA)(t.slice(e));(0,s.hu)(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,s.fU)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==o?(0,a.toTypedArray)(e,o):(0,s.xH)(e,[],!0),r.BV.makeTensor(e,t,o)}},5347:(e,t,n)=>{"use strict";n.d(t,{p:()=>d});var r=n(2543),s=n(2811),a=n(3986),o=n(2595),i=n(7186),u=n(6194),l=n(9837),c=n(9372),p=n(6273),h=n(1432);const d=(0,p.op)({transpose_:function(e,t,n){const p=(0,o._1)(e,"x","transpose");if(null==t&&(t=p.shape.map(((e,t)=>t)).reverse()),i.hu(p.rank===t.length,(()=>`Error in transpose: rank of input ${p.rank} must match length of perm ${t}.`)),t.forEach((e=>{i.hu(e>=0&&e<p.rank,(()=>"All entries in 'perm' must be between 0 and "+(p.rank-1)+` but got ${t}`))})),p.rank<=1)return p.clone();const d={x:p},m={perm:t};return"complex64"===p.dtype?(0,s.lu)((()=>{let e=(0,h.k)(p),t=(0,l.a)(p);return e=r.BV.runKernel(a.G3Y,{x:e},m),t=r.BV.runKernel(a.G3Y,{x:t},m),n&&(t=(0,c.W)(t)),(0,u.P)(e,t)})):r.BV.runKernel(a.G3Y,d,m)}})},2448:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var r=n(2543),s=n(3986),a=n(2595);const o=(0,n(6273).op)({zerosLike_:function(e){const t={x:(0,a._1)(e,"x","zerosLike")};return r.BV.runKernel(s.RuY,t)}})},7184:(e,t,n)=>{"use strict";n.d(t,{es:()=>x,YD:()=>m,_w:()=>N,FZ:()=>v,Vp:()=>w,Vi:()=>b});var r=n(137),s=n(7186);const a=20,o=3,i=7;function u(e,t,n,r){const a=(0,s.e3)(t),o=function(e,t,n,r){const a=(0,s.NA)(t),o=r[r.length-1],i=new Array(o).fill(0),u=t.length,c="complex64"===n?h(e):e;if(u>1)for(let e=0;e<a/o;e++){const t=e*o;for(let e=0;e<o;e++)i[e]=Math.max(i[e],l(c[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,u=p(e,t,n,a,o),c=["Tensor"];return r&&(c.push(`  dtype: ${n}`),c.push(`  rank: ${i}`),c.push(`  shape: [${t}]`),c.push("  values:")),c.push(u.map((e=>"    "+e)).join("\n")),c.join("\n")}function l(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(i))} + ${parseFloat(e[1].toFixed(i))}j`:(0,s.HD)(e)?`'${e}'`:"bool"===n?c(e):parseFloat(e.toFixed(i)).toString(),(0,s.oj)(r,t)}function c(e){return 0===e?"false":"true"}function p(e,t,n,r,s,i=!0){const u="complex64"===n?2:1,d=t[0],m=t.length;if(0===m){if("complex64"===n){return[l(h(e)[0],0,n)]}return"bool"===n?[c(e[0])]:[e[0].toString()]}if(1===m){if(d>a){const t=o*u;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((d-o)*u,d*u));return"complex64"===n&&(r=h(r),a=h(a)),["["+r.map(((e,t)=>l(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>l(e,s[d-o+t],n))).join(", ")+"]"]}return["["+("complex64"===n?h(e):Array.from(e)).map(((e,t)=>l(e,s[t],n))).join(", ")+"]"]}const f=t.slice(1),g=r.slice(1),y=r[0]*u,b=[];if(d>a){for(let t=0;t<o;t++){const r=t*y,a=r+y;b.push(...p(e.slice(r,a),f,n,g,s,!1))}b.push("...");for(let t=d-o;t<d;t++){const r=t*y,a=r+y;b.push(...p(e.slice(r,a),f,n,g,s,t===d-1))}}else for(let t=0;t<d;t++){const r=t*y,a=r+y;b.push(...p(e.slice(r,a),f,n,g,s,t===d-1))}const w=2===m?",":"";b[0]="["+b[0]+w;for(let e=1;e<b.length-1;e++)b[e]=" "+b[e]+w;let v=",\n";for(let e=2;e<m;e++)v+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(i?"":v),b}function h(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var d=n(6646);class m{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=s.NA(e),null!=n){const e=n.length;s.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||s.rQ(t,this.size),this.strides=(0,s.e3)(e)}set(e,...t){0===t.length&&(t=[0]),s.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return f().makeTensor(this.values,this.shape,this.dtype)}}let f=null,g=null,y=null;function b(e){f=e}function w(e){g=e}function v(e){y=e}class x{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=s.NA(e),this.strides=(0,s.e3)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return g.buffer(this.shape,this.dtype,e)}bufferSync(){return g.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,s.GX)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,s.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=f().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>d.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),f().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=f().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>d.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await f().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(f().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return g.print(this,e)}clone(){return this.throwIfDisposed(),g.clone(this)}toString(e=!1){return u(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),g.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),f().makeVariable(this,e,t,n)}}Object.defineProperty(x,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),(0,r.R)("Tensor",(()=>x));class N extends x{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!s.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);f().disposeTensor(this),this.dataId=e.dataId,f().incRef(this,null)}dispose(){f().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(N,Symbol.hasInstance,{value:e=>e instanceof x&&null!=e.assign&&e.assign instanceof Function})},5810:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertTypesMatch:()=>i,getTensorsInContainer:()=>l,isTensorInList:()=>u,makeTypesMatch:()=>o});var r=n(7184),s=n(9029),a=n(7186);function o(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,s.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function i(e,t){(0,a.hu)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function u(e,t){return t.some((t=>t.id===e.id))}function l(e){const t=[];return c(e,t,new Set),t}function c(e,t,n){if(null==e)return;if(e instanceof r.es)return void t.push(e);if(s=e,!Array.isArray(s)&&"object"!=typeof s)return;var s;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),c(r,t,n))}}},2595:(e,t,n)=>{"use strict";n.d(t,{C:()=>u,_1:()=>p,sI:()=>h});var r=n(2543),s=n(1055),a=n(7184),o=n(7186),i=n(6646);function u(e,t){let n=e;if((0,o.fU)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,o.fU)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,s.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&l(e,r,[]),r}function l(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,o.fU)(e))return void(0,o.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,o.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,o.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)l(e[t],r,n.concat(t))}function c(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function p(e,t,n,s="numeric"){if(e instanceof a.es)return c(s,e.dtype,t,n),e;let l=(0,o.D2)(e);if("string"!==l&&["bool","int32","float32"].indexOf(s)>=0&&(l=s),c(s,l,t,n),null==e||!(0,o.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const p=u(e,l);(0,o.fU)(e)||Array.isArray(e)||(e=[e]);const h="string"!==l?(0,i.toTypedArray)(e,l):(0,o.xH)(e,[],!0);return r.BV.makeTensor(h,p,l)}function h(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>p(e,`${t}[${s}]`,n,r)))}},9029:(e,t,n)=>{"use strict";var r,s,a,o,i;n.d(t,{x8:()=>l,yw:()=>r,z4:()=>c}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(i||(i={}));const u={float32:o,int32:s,bool:a,complex64:i};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function c(e){return l(e,"int32")}},6646:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>s.cO,assert:()=>s.hu,assertNonNegativeIntegerDimensions:()=>s.Mu,assertNonNull:()=>s.Cq,assertShapesMatch:()=>s.k5,bytesFromStringArray:()=>s.Ub,bytesPerElement:()=>s.bT,checkConversionForErrors:()=>s.D5,clamp:()=>s.uZ,computeStrides:()=>s.e3,createScalarValue:()=>w,createShuffledIndices:()=>s.U$,decodeString:()=>S,distSquared:()=>s.E7,encodeString:()=>_,fetch:()=>N,fingerPrint64:()=>b,flatten:()=>s.xH,getArrayFromDType:()=>s.rQ,getTypedArrayFromDType:()=>s.WP,hasEncodingLoss:()=>s.QB,hexToLong:()=>i,indexToLoc:()=>s.NE,inferDtype:()=>s.D2,inferFromImplicitShape:()=>s.JZ,isBoolean:()=>s.jn,isFunction:()=>s.mf,isInt:()=>s.GN,isNumber:()=>s.hj,isPromise:()=>s.tI,isScalarShape:()=>s.N9,isString:()=>s.HD,isTypedArray:()=>s.fU,isValidDtype:()=>s.LP,locToIndex:()=>s.qy,makeOnesTypedArray:()=>s.p8,makeZerosNestedTypedArray:()=>s.l6,makeZerosTypedArray:()=>s.wT,nearestDivisor:()=>s.jP,nearestLargerEven:()=>s.nY,now:()=>x,parseAxisParam:()=>s.EC,randUniform:()=>s.bj,repeatedTry:()=>s.WD,rightPad:()=>s.oj,shuffle:()=>s.TV,shuffleCombo:()=>s.d7,sizeFromShape:()=>s.NA,sizeToSquarishShape:()=>s.YP,squeezeShape:()=>s.bp,sum:()=>s.Sm,swap:()=>s.LF,tanh:()=>s.AE,toNestedArray:()=>s.GX,toTypedArray:()=>v});var r=n(1055),s=n(7186),a=n(8072);const o=n.n(a)()||a;function i(e){return o.fromString(e,!0,16)}const u=i("c3a5c85c97cb3127"),l=i("b492b66fbe98f273"),c=i("9ae16a3b2f90404f");function p(e){return e.xor(e.shru(47))}function h(e,t,n){const r=e.slice(t,t+n);return o.fromBytes(Array.from(r),!0,!0)}function d(e,t){return h(e,t,8)}function m(e,t){return h(e,t,4)}function f(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function g(e,t,n=i("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function y(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=f(a.add(s).add(r),21);const o=s;return s=(s=s.add(t)).add(n),a=a.add(f(s,44)),[s.add(r),a.add(o)]}(d(e,t),d(e,t+8),d(e,t+16),d(e,t+24),n,r)}function b(e,t=e.length){const n=o.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=c.add(2*t),r=d(e,0).add(c),s=d(e,t-8);return g(f(s,37).mul(n).add(r),f(r,25).add(s).mul(n),n)}if(t>=4){const n=c.add(2*t);return g(m(e,0).shl(3).add(t),m(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return p(c.mul(n).xor(u.mul(r))).mul(c)}return c}(e,t):function(e,t=e.length){const n=c.add(2*t),r=d(e,0).mul(l),s=d(e,8),a=d(e,t-8).mul(n),o=d(e,t-16).mul(c);return g(f(r.add(s),43).add(f(a,30)).add(o),r.add(f(s.add(c),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=c.add(2*t),r=d(e,0).mul(c),s=d(e,8),a=d(e,t-8).mul(n),o=d(e,t-16).mul(c),i=f(r.add(s),43).add(f(a,30)).add(o),u=g(i,r.add(f(s.add(c),18)).add(a),n),l=d(e,16).mul(n),p=d(e,24),h=i.add(d(e,t-32)).mul(n),m=u.add(d(e,t-24)).mul(n);return g(f(l.add(p),43).add(f(h,30)).add(m),l.add(f(p.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(l).add(113),a=p(s.mul(c).add(113)).mul(c),i=[o.UZERO,o.UZERO],h=[o.UZERO,o.UZERO];r=r.mul(c).add(d(e,0));let b=0;const w=64*(t-1>>6),v=w+(t-1&63)-63;do{r=f(r.add(s).add(i[0]).add(d(e,b+8)),37).mul(l),s=f(s.add(i[1]).add(d(e,b+48)),42).mul(l),r=r.xor(h[1]),s=s.add(i[0]).add(d(e,b+40)),a=f(a.add(h[0]),33).mul(l),i=y(e,b,i[1].mul(l),r.add(h[0])),h=y(e,b+32,a.add(h[1]),s.add(d(e,b+16))),[a,r]=[r,a],b+=64}while(b!==w);const x=l.add(a.and(255).shl(1));return b=v,h[0]=h[0].add(t-1&63),i[0]=i[0].add(h[0]),h[0]=h[0].add(i[0]),r=f(r.add(s).add(i[0]).add(d(e,b+8)),37).mul(x),s=f(s.add(i[1]).add(d(e,b+48)),42).mul(x),r=r.xor(h[1].mul(9)),s=s.add(i[0].mul(9).add(d(e,b+40))),a=f(a.add(h[0]),33).mul(x),i=y(e,b,i[1].mul(x),r.add(h[0])),h=y(e,b+32,a.add(h[1]),s.add(d(e,b+16))),[a,r]=[r,a],g(g(i[0],h[0],x).add(p(s).mul(u)).add(a),g(i[1],h[1],x).add(r),x)}function w(e,t){return"string"===t?_(e):v([e],t)}function v(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=s.xH(e)),(0,r.OB)().getBool("DEBUG")&&s.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function x(){return(0,r.OB)().platform.now()}function N(e,t){return(0,r.OB)().platform.fetch(e,t)}function _(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.encode(e,t)}function S(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.decode(e,t)}},7186:(e,t,n)=>{"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,i(e,t,n)}function s(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,i(e,n,r),i(t,n,r)}function a(e,t,n){return Math.max(e,Math.min(t,n))}function o(e){return e%2==0?e:e+1}function i(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function p(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function h(e,t,n=""){p(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function d(e){p(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function m(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||$(e)&&!n)for(let r=0;r<e.length;++r)m(e[r],t,n);else t.push(e);return t}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function g(e){return 0===e.length}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1==0}function w(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function v(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function x(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function N(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function _(e,t=(e=>0),n,r=setTimeout){return new Promise(((s,a)=>{let o=0;const i=()=>{if(e())return void s();o++;const u=t(o);null!=n&&o>=n?a():r(i,u)};i()}))}function S(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function k(e,t){const n=t.length;return p((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),p(e.every((e=>b(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function T(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:k(t,e).sort();let o=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[o]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[o]||a[o]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[o]<=t&&o++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function E(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function I(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function A(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function M(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function O(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function $(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function D(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function B(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function R(e){return"string"==typeof e||e instanceof String}function V(e){return"boolean"==typeof e}function C(e){return"number"==typeof e}function F(e){return Array.isArray(e)?F(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":C(e)?"float32":R(e)?"string":V(e)?"bool":"float32"}function P(e){return!!(e&&e.constructor&&e.call&&e.apply)}function L(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function z(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function W(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=W(e+t*i,o,n,r)}return s}function q(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return W(0,e,t,n)}function U(e,t){const n=G(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function G(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function H(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return q(e,new Float32Array(n));if("int32"===t)return q(e,new Int32Array(n));if("bool"===t)return q(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function j(e){e.forEach((t=>{p(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function K(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function X(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Q(e){return e&&e.then&&"function"==typeof e.then}n.d(t,{AE:()=>w,Cq:()=>d,D2:()=>F,D5:()=>A,E7:()=>c,EC:()=>k,GN:()=>b,GX:()=>q,HD:()=>R,JZ:()=>S,LF:()=>i,LP:()=>M,Mu:()=>j,N9:()=>g,NA:()=>f,NE:()=>X,QB:()=>O,Sm:()=>u,TV:()=>r,U$:()=>x,Ub:()=>B,WD:()=>_,WP:()=>E,YP:()=>v,bT:()=>D,bj:()=>l,bp:()=>T,cO:()=>y,d7:()=>s,e3:()=>z,fU:()=>$,hj:()=>C,hu:()=>p,jP:()=>L,jn:()=>V,k5:()=>h,l6:()=>H,mf:()=>P,nY:()=>o,oj:()=>N,p8:()=>U,qy:()=>K,rQ:()=>I,tI:()=>Q,uZ:()=>a,wT:()=>G,xH:()=>m})},5791:(e,t,n)=>{"use strict";function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function s(e,t,n){var s=n.value;if("function"!=typeof s)throw new TypeError("@boundMethod decorator can only be applied to methods not: ".concat(r(s)));var a=!1;return{configurable:!0,get:function(){if(a||this===e.prototype||this.hasOwnProperty(t)||"function"!=typeof s)return s;var n=s.bind(this);return a=!0,Object.defineProperty(this,t,{configurable:!0,get:function(){return n},set:function(e){s=e,delete this[t]}}),a=!1,n},set:function(e){s=e}}}function a(e){var t;return"undefined"!=typeof Reflect&&"function"==typeof Reflect.ownKeys?t=Reflect.ownKeys(e.prototype):(t=Object.getOwnPropertyNames(e.prototype),"function"==typeof Object.getOwnPropertySymbols&&(t=t.concat(Object.getOwnPropertySymbols(e.prototype)))),t.forEach((function(t){if("constructor"!==t){var n=Object.getOwnPropertyDescriptor(e.prototype,t);"function"==typeof n.value&&Object.defineProperty(e.prototype,t,s(e,t,n))}})),e}function o(){return 1===arguments.length?a.apply(void 0,arguments):s.apply(void 0,arguments)}n.r(t),n.d(t,{boundClass:()=>a,boundMethod:()=>s,default:()=>o})},8072:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function o(e,t){var n,r,o;return t?(o=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=u(e,(0|e)<0?-1:0,!0),o&&(a[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),o&&(s[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=d)return N}else{if(e<=-m)return _;if(e+1>=m)return x}return e<0?i(-e,t).neg():u(e%h|0,e/h|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=o,n.fromNumber=i,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=i(l(n,8)),a=g,o=0;o<e.length;o+=8){var u=Math.min(8,e.length-o),p=parseInt(e.substring(o,o+u),n);if(u<8){var h=i(l(n,u));a=a.mul(h).add(i(p))}else a=(a=a.mul(s)).add(i(p))}return a.unsigned=t,a}function p(e,t){return"number"==typeof e?i(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=p;var h=4294967296,d=h*h,m=d/2,f=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var b=o(1);n.ONE=b;var w=o(1,!0);n.UONE=w;var v=o(-1);n.NEG_ONE=v;var x=u(-1,2147483647,!1);n.MAX_VALUE=x;var N=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=N;var _=u(0,-2147483648,!1);n.MIN_VALUE=_;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(_)){var t=i(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=i(l(e,6),this.unsigned),a=this,o="";;){var u=a.div(s),c=(a.sub(u.mul(s)).toInt()>>>0).toString(e);if((a=u).isZero())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(_)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(e){return r(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(r(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(_)?_:this.not().add(b)},S.neg=S.negate,S.add=function(e){r(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,o=e.high>>>16,i=65535&e.high,l=e.low>>>16,c=0,h=0,d=0,m=0;return d+=(m+=a+(65535&e.low))>>>16,h+=(d+=s+l)>>>16,c+=(h+=n+i)>>>16,c+=t+o,u((d&=65535)<<16|(m&=65535),(c&=65535)<<16|(h&=65535),this.unsigned)},S.subtract=function(e){return r(e)||(e=p(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=p(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(_))return e.isOdd()?_:g;if(e.eq(_))return this.isOdd()?_:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(f)&&e.lt(f))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,o=65535&this.low,l=e.high>>>16,c=65535&e.high,h=e.low>>>16,d=65535&e.low,m=0,y=0,b=0,w=0;return b+=(w+=o*d)>>>16,y+=(b+=a*d)>>>16,b&=65535,y+=(b+=o*h)>>>16,m+=(y+=s*d)>>>16,y&=65535,m+=(y+=a*h)>>>16,y&=65535,m+=(y+=o*c)>>>16,m+=n*d+s*h+a*c+o*l,u((b&=65535)<<16|(w&=65535),(m&=65535)<<16|(y&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(r(e)||(e=p(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return w;a=y}else{if(this.eq(_))return e.eq(b)||e.eq(v)?_:e.eq(_)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:v:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(_))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),c=o<=48?1:l(2,o-48),h=i(n),d=h.mul(e);d.isNegative()||d.gt(s);)d=(h=i(n-=c,this.unsigned)).mul(e);h.isZero()&&(h=b),a=a.add(h),s=s.sub(d)}return a},S.div=S.divide,S.modulo=function(e){return r(e)||(e=p(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return r(e)||(e=p(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return r(e)||(e=p(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return r(e)||(e=p(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},2474:(e,t,n)=>{var r=n(5898),s=n(776),a=n(920),o=n(2707),i=n(9655),u=n(4668),l=n(2064);l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=o,l.xor4096=i,l.tychei=u,e.exports=l},5898:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new o(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},4668:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},776:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},9655:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(o=o+1640531527|0,s=0==(n=i[127&a]^=r+o)?s+1:0);for(s>=128&&(i[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=i[s+34&127],n=i[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[s]=r^n;e.w=o,e.X=i,e.i=s}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},2707:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},920:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},2064:function(e,t,n){var r;!function(s,a,o){var i,u=256,l=o.pow(u,6),c=o.pow(2,52),p=2*c,h=u-1;function d(e,t,n){var r=[],h=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(s.crypto||s.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,b(a)]}}():e,3),r),d=new m(r),w=function(){for(var e=d.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=d.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return w.int32=function(){return 0|d.g(4)},w.quick=function(){return d.g(4)/4294967296},w.double=w,y(b(d.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&f(r,d),e.state=function(){return f(d,{})}),n?(o.random=e,t):e})(w,h,"global"in t?t.global:this==o,t.state)}function m(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);s<u;)o[s]=s++;for(s=0;s<u;s++)o[s]=o[a=h&a+e[s%n]+(t=o[s])],o[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,o=r.S;e--;)t=o[s=h&s+1],n=n*u+o[h&(o[s]=o[a=h&a+t])+(o[a]=t)];return r.i=s,r.j=a,n})(u)}function f(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[h&s]=h&(n^=19*t[h&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(o.random(),a),e.exports){e.exports=d;try{i=n(5042)}catch(e){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},2955:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(s,a){function o(e){try{u(r.next(e))}catch(e){a(e)}}function i(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,i)}u((r=r.apply(e,t||[])).next())}))},s=this&&this.__generator||function(e,t){var n,r,s,a,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function i(i){return function(u){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a&&(a=0,i[0]&&(o=0)),o;)try{if(n=1,r&&(s=2&i[0]?r.return:i[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,i[1])).done)return s;switch(r=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,r=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(s=o.trys,(s=s.length>0&&s[s.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){o.label=i[1];break}if(6===i[0]&&o.label<s[1]){o.label=s[1],s=i;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(i);break}s[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],r=0}finally{n=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.loadFromFiles=t.load=t.loadPoseNet=t.CustomPoseNet=t.getTopKClasses=void 0;var a=n(19),o=n(6469),i=n(7874),u=n(8412),l=n(6469),c=function(e){return e.packageVersion=e.packageVersion||u.version,e.packageName="@teachablemachine/pose",e.timeStamp=e.timeStamp||(new Date).toISOString(),e.userMetadata=e.userMetadata||{},e.modelName=e.modelName||"untitled",e.labels=e.labels||[],e.modelSettings=h(e.modelSettings),e},p=function(e){return r(void 0,void 0,void 0,(function(){var t;return s(this,(function(n){switch(n.label){case 0:return"string"!=typeof e?[3,3]:[4,fetch(e)];case 1:return[4,n.sent().json()];case 2:return t=n.sent(),[3,4];case 3:if(!(r=e)||!Array.isArray(r.labels))throw new Error("Invalid Metadata provided");t=e,n.label=4;case 4:return[2,c(t)]}var r}))}))},h=function(e){return void 0===e&&(e={}),e.posenet||(e.posenet={}),e.posenet.architecture=e.posenet.architecture||"MobileNetV1",e.posenet.outputStride=e.posenet.outputStride||16,e.posenet.inputResolution=e.posenet.inputResolution||257,e.posenet.multiplier=e.posenet.multiplier||.75,e};function d(e,t,n){return void 0===n&&(n=3),r(this,void 0,void 0,(function(){var r;return s(this,(function(s){switch(s.label){case 0:return[4,t.data()];case 1:return r=s.sent(),[2,a.tidy((function(){n=Math.min(n,r.length);for(var t=[],s=0;s<r.length;s++)t.push({value:r[s],index:s});t.sort((function(e,t){return t.value-e.value}));var a=new Float32Array(n),o=new Int32Array(n);for(s=0;s<n;s++)a[s]=t[s].value,o[s]=t[s].index;var i=[];for(s=0;s<o.length;s++)i.push({className:e[o[s]],probability:a[s]});return i}))]}}))}))}t.getTopKClasses=d;var m=function(){function e(e,t,n){this.model=e,this.posenetModel=t,this._metadata=c(n)}return e.prototype.getMetadata=function(){return this._metadata},e.prototype.getClassLabels=function(){return this._metadata.labels},e.prototype.getTotalClasses=function(){return this.model.output.shape[1]},e.prototype.estimatePose=function(e,t){return void 0===t&&(t=!1),r(this,void 0,void 0,(function(){var n,r,a,o,i,u,l;return s(this,(function(s){switch(s.label){case 0:return[4,this.estimatePoseOutputs(e)];case 1:return n=s.sent(),r=n.heatmapScores,a=n.offsets,o=n.displacementFwd,i=n.displacementBwd,u=n.padding,l=this.poseOutputsToAray(r,a,o,i),[4,this.poseOutputsToKeypoints(e,r,a,o,i,u,t)];case 2:return[2,{pose:s.sent(),posenetOutput:l}]}}))}))},e.prototype.estimatePoseOutputs=function(e){return r(this,void 0,void 0,(function(){var t,n,r,a,o,u,l,c,p;return s(this,(function(s){switch(s.label){case 0:return t=this.posenetModel.inputResolution,n=(0,i.padAndResizeTo)(e,t),r=n.resized,a=n.padding,[4,this.posenetModel.baseModel.predict(r)];case 1:return o=s.sent(),u=o.heatmapScores,l=o.offsets,c=o.displacementFwd,p=o.displacementBwd,r.dispose(),[2,{heatmapScores:u,offsets:l,displacementFwd:c,displacementBwd:p,padding:a}]}}))}))},e.prototype.poseOutputsToAray=function(e,t,n,r){var s=a.concat([e,t],2),o=s.dataSync();return s.dispose(),o},e.prototype.poseOutputsToKeypoints=function(e,t,n,a,o,u,c){return void 0===c&&(c=!1),r(this,void 0,void 0,(function(){var r,p,h,d,m,f,g,y,b,w,v,x,N;return s(this,(function(s){switch(s.label){case 0:return r={maxDetections:3,scoreThreshold:.5,nmsRadius:20},p=(0,i.getInputTensorDimensions)(e),h=p[0],d=p[1],m=this.posenetModel.baseModel.outputStride,f=this.posenetModel.inputResolution,[4,(0,i.toTensorBuffers3D)([t,n,a,o])];case 1:return g=s.sent(),y=g[0],b=g[1],w=g[2],v=g[3],[4,(0,l.decodeMultiplePoses)(y,b,w,v,m,r.maxDetections,r.scoreThreshold,r.nmsRadius)];case 2:return x=s.sent(),N=(0,i.scaleAndFlipPoses)(x,[h,d],f,u,c),t.dispose(),n.dispose(),a.dispose(),o.dispose(),[2,N[0]]}}))}))},e.prototype.predict=function(e){return r(this,void 0,void 0,(function(){var t,n,r,o,i;return s(this,(function(s){switch(s.label){case 0:return t=a.tensor([e]),[4,(n=this.model.predict(t)).data()];case 1:for(r=s.sent(),o=[],i=0;i<r.length;i++)o.push({className:this._metadata.labels[i],probability:r[i]});return t.dispose(),n.dispose(),[2,o]}}))}))},e.prototype.predictTopK=function(e,t){return void 0===t&&(t=3),r(this,void 0,void 0,(function(){var n,r,o;return s(this,(function(s){switch(s.label){case 0:return n=a.tensor([e]),r=this.model.predict(n),[4,d(this._metadata.labels,r,t)];case 1:return o=s.sent(),n.dispose(),r.dispose(),[2,o]}}))}))},e.prototype.dispose=function(){this.posenetModel.dispose()},e}();function f(e){return void 0===e&&(e={}),r(this,void 0,void 0,(function(){return s(this,(function(t){switch(t.label){case 0:return e=h(e),[4,o.load({architecture:e.posenet.architecture,outputStride:e.posenet.outputStride,inputResolution:e.posenet.inputResolution,multiplier:e.posenet.multiplier})];case 1:return[2,t.sent()]}}))}))}t.CustomPoseNet=m,t.loadPoseNet=f,t.load=function(e,t){return r(this,void 0,void 0,(function(){var n,r,o,i;return s(this,(function(s){switch(s.label){case 0:return[4,a.loadLayersModel(e)];case 1:return n=s.sent(),t?[4,p(t)]:[3,3];case 2:return o=s.sent(),[3,4];case 3:o=null,s.label=4;case 4:return[4,f((r=o).modelSettings)];case 5:return i=s.sent(),[2,new m(n,i,r)]}}))}))},t.loadFromFiles=function(e,t,n){return r(this,void 0,void 0,(function(){var r,o,i,u,l;return s(this,(function(s){switch(s.label){case 0:return[4,a.loadLayersModel(a.io.browserFiles([e,t]))];case 1:return r=s.sent(),[4,new Response(n).json()];case 2:return o=s.sent(),n?[4,p(o)]:[3,4];case 3:return u=s.sent(),[3,5];case 4:u=null,s.label=5;case 5:return[4,f((i=u).modelSettings)];case 6:return l=s.sent(),[2,new m(r,l,i)]}}))}))}},8602:function(e,t,n){"use strict";var r,s=this&&this.__extends||(r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},r(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),a=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(s,a){function o(e){try{u(r.next(e))}catch(e){a(e)}}function i(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,i)}u((r=r.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var n,r,s,a,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function i(i){return function(u){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a&&(a=0,i[0]&&(o=0)),o;)try{if(n=1,r&&(s=2&i[0]?r.return:i[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,i[1])).done)return s;switch(r=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,r=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(s=o.trys,(s=s.length>0&&s[s.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){o.label=i[1];break}if(6===i[0]&&o.label<s[1]){o.label=s[1],s=i;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(i);break}s[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],r=0}finally{n=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.createTeachable=t.TeachablePoseNet=void 0;var i=n(19),u=n(19),l=n(2955),c=n(2474);function p(e,t){for(var n,r=e.length,s=e.slice(),a=r-1;a>0;a-=1){var o=void 0;n=[s[o=t?Math.floor(t()*(a+1)):Math.floor(Math.random()*(a+1))],s[a]],s[a]=n[0],s[o]=n[1]}return s}var h=function(e){function t(t,n,r){var s=e.call(this,t,n,r)||this;return s.model=t,s.posenetModel=n,s.examples=[],s}return s(t,e),Object.defineProperty(t.prototype,"isTrained",{get:function(){return!!this.model&&this.model.layers&&this.model.layers.length>2},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"isPrepared",{get:function(){return!!this.trainDataset},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"numClasses",{get:function(){return this._metadata.labels.length},enumerable:!1,configurable:!0}),t.prototype.addExample=function(e,t){return a(this,void 0,void 0,(function(){return o(this,(function(n){return this.examples[e].push(t),[2]}))}))},t.prototype.predict=function(t){return a(this,void 0,void 0,(function(){return o(this,(function(n){if(!this.model)throw new Error("Model has not been trained yet, called train() first");return[2,e.prototype.predict.call(this,t)]}))}))},t.prototype.predictTopK=function(t,n){return void 0===n&&(n=3),a(this,void 0,void 0,(function(){return o(this,(function(r){if(!this.model)throw new Error("Model has not been trained yet, called train() first");return[2,e.prototype.predictTopK.call(this,t,n)]}))}))},t.prototype.prepare=function(){for(var e in this.examples)if(0===e.length)throw new Error("Add some examples before training");var t=this.convertToTfDataset();this.trainDataset=t.trainDataset,this.validationDataset=t.validationDataset},t.prototype.convertToTfDataset=function(){for(var e=0;e<this.examples.length;e++)this.examples[e]=p(this.examples[e],this.seed);var t=[],n=[],r=function(e){var r,a,o,i=(r=e,a=s.numClasses,(o=new Array(a).fill(0))[r]=1,o),u=s.examples[e].length,l=u-Math.ceil(.15*u),c=s.examples[e].slice(0,l).map((function(e){return{data:e,label:i}})),p=s.examples[e].slice(l).map((function(e){return{data:e,label:i}}));t=t.concat(c),n=n.concat(p)},s=this;for(e=0;e<this.examples.length;e++)r(e);t=p(t,this.seed),n=p(n,this.seed);var a=i.data.array(t.map((function(e){return e.data}))),o=i.data.array(n.map((function(e){return e.data}))),u=i.data.array(t.map((function(e){return e.label}))),l=i.data.array(n.map((function(e){return e.label})));return{trainDataset:i.data.zip({xs:a,ys:u}),validationDataset:i.data.zip({xs:o,ys:l})}},t.prototype.save=function(e,t){return a(this,void 0,void 0,(function(){return o(this,(function(n){return[2,this.model.save(e,t)]}))}))},t.prototype.train=function(e,t){return void 0===t&&(t={}),a(this,void 0,void 0,(function(){var n,r,s,a,l,c,p,h=this;return o(this,(function(o){switch(o.label){case 0:if(n=t.onTrainEnd||function(){},t.onTrainEnd=function(e){h.__stopTrainingResolve&&(h.__stopTrainingResolve(),h.__stopTrainingResolve=null),n(e)},this.isPrepared||this.prepare(),r=this.getLabels().length,u.util.assert(r===this.numClasses,(function(){return"Can not train, has ".concat(r," labels and ").concat(h.numClasses," classes")})),s=this.examples[0][1].length,a=this.seed?i.initializers.varianceScaling({seed:3.14}):i.initializers.varianceScaling({}),this.model=i.sequential({layers:[i.layers.dense({inputShape:[s],units:e.denseUnits,activation:"relu",kernelInitializer:a,useBias:!0}),i.layers.dropout({rate:.5}),i.layers.dense({units:this.numClasses,kernelInitializer:a,useBias:!1,activation:"softmax"})]}),l=i.train.rmsprop(e.learningRate),this.model.compile({optimizer:l,loss:"categoricalCrossentropy",metrics:["accuracy"]}),!(e.batchSize>0))throw new Error("Batch size is 0 or NaN. Please choose a non-zero fraction");return c=this.trainDataset.batch(e.batchSize),p=this.validationDataset.batch(e.batchSize),[4,this.model.fitDataset(c,{epochs:e.epochs,validationData:p,callbacks:t})];case 1:return o.sent(),l.dispose(),[2,this.model]}}))}))},t.prototype.prepareDataset=function(){for(var e=0;e<this.numClasses;e++)this.examples[e]=[]},t.prototype.stopTraining=function(){var e=this;return new Promise((function(t,n){e.model.stopTraining=!0,e.__stopTrainingResolve=t}))},t.prototype.dispose=function(){this.model.dispose(),e.prototype.dispose.call(this)},t.prototype.setLabel=function(e,t){this._metadata.labels[e]=t},t.prototype.setLabels=function(e){this._metadata.labels=e,this.prepareDataset()},t.prototype.getLabel=function(e){return this._metadata.labels[e]},t.prototype.getLabels=function(){return this._metadata.labels},t.prototype.setName=function(e){this._metadata.modelName=e},t.prototype.getName=function(){return this._metadata.modelName},t.prototype.calculateAccuracyPerClass=function(){return a(this,void 0,void 0,(function(){var e,t,n,r,s,u,l,c,p,h,d,m,f,g,y,b,w,v,x=this;return o(this,(function(N){switch(N.label){case 0:return e=this.validationDataset.mapAsync((function(e){return a(x,void 0,void 0,(function(){return o(this,(function(t){return[2,e.xs]}))}))})),t=this.validationDataset.mapAsync((function(e){return a(x,void 0,void 0,(function(){return o(this,(function(t){return[2,e.ys]}))}))})),n=Math.min(t.size,32),r=Math.ceil(t.size/n),s=e.batch(n),u=t.batch(n),[4,s.iterator()];case 1:return l=N.sent(),[4,u.iterator()];case 2:c=N.sent(),p=[],h=[],v=0,N.label=3;case 3:return v<r?[4,l.next()]:[3,7];case 4:return d=N.sent(),m=this.model.predict(d.value),f=m.argMax(1),p.push(f),[4,c.next()];case 5:g=N.sent(),y=g.value.argMax(1),h.push(y),d.value.dispose(),m.dispose(),g.value.dispose(),N.label=6;case 6:return v++,[3,3];case 7:if(b=i.concat(h),w=i.concat(p),1!==r)for(v=0;v<p.length;v++)p[v].dispose(),h[v].dispose();return[2,{reference:b,predictions:w}]}}))}))},t.prototype.setSeed=function(e){this.seed=c(e)},t}(l.CustomPoseNet);t.TeachablePoseNet=h,t.createTeachable=function(e){return a(this,void 0,void 0,(function(){var t;return o(this,(function(n){switch(n.label){case 0:return[4,(0,l.loadPoseNet)(e.modelSettings)];case 1:return t=n.sent(),[2,new h(i.sequential(),t,e)]}}))}))}},5451:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.cropTo=t.createCanvas=void 0;t.createCanvas=function(e,t,n){void 0===e&&(e=200),void 0===t&&(t=200),void 0===n&&(n=!1);var r=document.createElement("canvas");if(r.width=e,r.height=t,n){var s=r.getContext("2d");s.translate(e,0),s.scale(-1,1)}return r},t.cropTo=function(e,t,n,r){void 0===n&&(n=!1),void 0===r&&(r=document.createElement("canvas"));var s=e.width,a=e.height;e instanceof HTMLVideoElement&&(s=e.videoWidth,a=e.videoHeight);var o=t/Math.min(s,a),i=Math.ceil(s*o),u=Math.ceil(a*o),l=i-t,c=u-t;r.width=r.height=t;var p=r.getContext("2d");return p.drawImage(e,-1*~~(l/2),-1*~~(c/2),i,u),n&&(p.scale(-1,1),p.drawImage(r,-1*t,0)),r}},7243:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.drawSegment=t.drawSkeleton=t.toTuple=t.drawPoint=t.drawKeypoints=void 0;var r=n(7874),s="aqua";function a(e,t,n,r,s,a){e.fillStyle=s,e.strokeStyle=a,e.beginPath(),e.arc(n,t,r,0,2*Math.PI),e.fill(),e.stroke()}function o(e){return[e.y,e.x]}function i(e,t,n,r,s,a){var o=e[0],i=e[1],u=t[0],l=t[1];n.beginPath(),n.moveTo(i*a,o*a),n.lineTo(l*a,u*a),n.lineWidth=r,n.strokeStyle=s,n.stroke()}t.drawKeypoints=function(e,t,n,r,o,i,u){void 0===r&&(r=4),void 0===o&&(o="aqua"),void 0===i&&(i=s),void 0===u&&(u=1);for(var l=0;l<e.length;l++){var c=e[l];if(!(c.score<t)){var p=c.position;a(n,p.y*u,p.x*u,r,o,i)}}},t.drawPoint=a,t.toTuple=o,t.drawSkeleton=function(e,t,n,a,u,l){void 0===a&&(a=2),void 0===u&&(u=s),void 0===l&&(l=1),(0,r.getAdjacentKeyPoints)(e,t).forEach((function(e){i(o(e[0].position),o(e[1].position),n,a,u,l)}))},t.drawSegment=i},9114:function(e,t,n){"use strict";var r=this&&this.__decorate||function(e,t,n,r){var s,a=arguments.length,o=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(o=(a<3?s(o):a>3?s(t,n,o):s(t,n))||o);return a>3&&o&&Object.defineProperty(t,n,o),o},s=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(s,a){function o(e){try{u(r.next(e))}catch(e){a(e)}}function i(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,i)}u((r=r.apply(e,t||[])).next())}))},a=this&&this.__generator||function(e,t){var n,r,s,a,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function i(i){return function(u){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a&&(a=0,i[0]&&(o=0)),o;)try{if(n=1,r&&(s=2&i[0]?r.return:i[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,i[1])).done)return s;switch(r=0,s&&(i=[2&i[0],s.value]),i[0]){case 0:case 1:s=i;break;case 4:return o.label++,{value:i[1],done:!1};case 5:o.label++,r=i[1],i=[0];continue;case 7:i=o.ops.pop(),o.trys.pop();continue;default:if(!(s=o.trys,(s=s.length>0&&s[s.length-1])||6!==i[0]&&2!==i[0])){o=0;continue}if(3===i[0]&&(!s||i[1]>s[0]&&i[1]<s[3])){o.label=i[1];break}if(6===i[0]&&o.label<s[1]){o.label=s[1],s=i;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(i);break}s[2]&&o.ops.pop(),o.trys.pop();continue}i=t.call(e,o)}catch(e){i=[6,e],r=0}finally{n=s=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.Webcam=void 0;var o=n(5791),i=n(5451),u={facingMode:"user",frameRate:24};t.Webcam=function(){function e(e,t,n){void 0===e&&(e=400),void 0===t&&(t=400),void 0===n&&(n=!1),this.width=e,this.height=t,this.flip=n}return e.prototype.getWebcam=function(e){if(void 0===e&&(e={}),!window.navigator.mediaDevices||!window.navigator.mediaDevices.getUserMedia)return Promise.reject("Your browser does not support WebRTC. Please try another one.");e.width=640;var t=function(e){return e.facingMode=e.facingMode||u.facingMode,e.frameRate=e.frameRate||u.frameRate,e.aspectRatio=e.aspectRatio||u.aspectRatio,e}(e),n=document.createElement("video");return window.navigator.mediaDevices.getUserMedia({video:t}).then((function(e){return n.srcObject=e,n.addEventListener("loadedmetadata",(function(e){var t=n.videoWidth,r=n.videoHeight;n.width=t,n.height=r})),n}),(function(){return Promise.reject("Could not open your camera. You may have denied access.")}))},e.prototype.setup=function(e){return void 0===e&&(e={}),s(this,void 0,void 0,(function(){var t;return a(this,(function(n){switch(n.label){case 0:return this.webcam?[3,2]:(t=this,[4,this.getWebcam(e)]);case 1:t.webcam=n.sent(),this.canvas||(this.canvas=document.createElement("canvas"),this.canvas.width=this.width,this.canvas.height=this.height),n.label=2;case 2:return[2]}}))}))},e.prototype.play=function(){return this.webcam.play()},e.prototype.pause=function(){this.webcam.pause()},e.prototype.stop=function(){this.stopStreamedVideo(this.webcam)},e.prototype.update=function(){this.renderCameraToCanvas()},e.prototype.stopStreamedVideo=function(e){e.srcObject.getTracks().forEach((function(e){e.stop()})),e.srcObject=null},e.prototype.renderCameraToCanvas=function(){if(this.canvas&&this.webcam){var e=this.canvas.getContext("2d");if(0!==this.webcam.videoWidth){var t=(0,i.cropTo)(this.webcam,this.width,this.flip);e.drawImage(t,0,0)}}},r([o.default],e.prototype,"getWebcam",null),r([o.default],e.prototype,"setup",null),r([o.default],e.prototype,"play",null),r([o.default],e.prototype,"pause",null),r([o.default],e.prototype,"stop",null),r([o.default],e.prototype,"update",null),r([o.default],e.prototype,"stopStreamedVideo",null),r([o.default],e.prototype,"renderCameraToCanvas",null),e}()},8412:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.version=void 0;t.version="0.8.7"},19:e=>{"use strict";e.exports=tf},5410:()=>{},8628:()=>{},5042:()=>{}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var r={};(()=>{"use strict";var e=r;Object.defineProperty(e,"__esModule",{value:!0}),e.version=e.drawSegment=e.drawPoint=e.drawSkeleton=e.drawKeypoints=e.createCanvas=e.Webcam=e.createTeachable=e.TeachablePoseNet=e.loadFromFiles=e.load=e.CustomPoseNet=void 0;var t=n(2955);Object.defineProperty(e,"CustomPoseNet",{enumerable:!0,get:function(){return t.CustomPoseNet}}),Object.defineProperty(e,"load",{enumerable:!0,get:function(){return t.load}}),Object.defineProperty(e,"loadFromFiles",{enumerable:!0,get:function(){return t.loadFromFiles}});var s=n(8602);Object.defineProperty(e,"TeachablePoseNet",{enumerable:!0,get:function(){return s.TeachablePoseNet}}),Object.defineProperty(e,"createTeachable",{enumerable:!0,get:function(){return s.createTeachable}});var a=n(9114);Object.defineProperty(e,"Webcam",{enumerable:!0,get:function(){return a.Webcam}});var o=n(5451);Object.defineProperty(e,"createCanvas",{enumerable:!0,get:function(){return o.createCanvas}});var i=n(7243);Object.defineProperty(e,"drawKeypoints",{enumerable:!0,get:function(){return i.drawKeypoints}}),Object.defineProperty(e,"drawSkeleton",{enumerable:!0,get:function(){return i.drawSkeleton}}),Object.defineProperty(e,"drawPoint",{enumerable:!0,get:function(){return i.drawPoint}}),Object.defineProperty(e,"drawSegment",{enumerable:!0,get:function(){return i.drawSegment}});var u=n(8412);Object.defineProperty(e,"version",{enumerable:!0,get:function(){return u.version}})})(),tmPose=r})();