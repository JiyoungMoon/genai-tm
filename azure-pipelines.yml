# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Static
  jobs:
  - job: ESLint
    displayName: ESLint
    steps:
    - task: Cache@2
      inputs:
        key: '"npm" | "$(Agent.OS)" | package-lock.json'
        restoreKeys: |
           npm | "$(Agent.OS)"
           npm
        path: $(System.DefaultWorkingDirectory)/node_modules
      displayName: Cache NPM packages
    - script: |
        npm ci
        npm run lint
- stage: Build
  dependsOn: Static
  jobs:
  - job: Ubuntu_x64
    displayName: Build Ubuntu X64
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js'
    
    - task: Cache@2
      inputs:
        key: '"npm" | "$(Agent.OS)" | package-lock.json'
        restoreKeys: |
           npm | "$(Agent.OS)"
           npm
        path: $(System.DefaultWorkingDirectory)/node_modules
      displayName: Cache NPM packages

    - script: |
        npm ci
        npm run build
      displayName: 'Build'

    - publish: $(System.DefaultWorkingDirectory)/build
      artifact: DistFolder

- stage: Test
  dependsOn: Build
  jobs:
  - job: Ubuntu_x64
    displayName: Test Ubuntu X64
    steps:
    - task: Cache@2
      inputs:
        key: '"npm" | "$(Agent.OS)" | package-lock.json'
        restoreKeys: |
           npm | "$(Agent.OS)"
           npm
        path: $(System.DefaultWorkingDirectory)/node_modules
      displayName: Cache NPM packages
    - download: current
      artifact: DistFolder
    - script: |
        npm ci
        CI=true npm test
      displayName: 'Test'
    - task: PublishTestResults@2
      displayName: Publish Test Results
      condition: succeededOrFailed()
      inputs:
        testRunner: JUnit
        testResultsFiles: '**/junit.xml'

- stage: Deploy
  dependsOn: Test
  jobs:
  - job: AzureSWA
    displayName: Deploy to static app
    steps:
    - task: AzureStaticWebApp@0
      inputs:
        app_location: '/build'
        output_location: '/build'
        azure_static_web_apps_api_token: $(deployment_token)
