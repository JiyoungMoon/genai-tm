# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
    branches:
        include:
            - main
    tags:
        include:
            - 'v*'

pool:
    vmImage: ubuntu-latest

stages:
    - stage: Static
      jobs:
          - job: ESLint
            displayName: ESLint
            steps:
                - task: Cache@2
                  inputs:
                      key: '"npm" | "$(Agent.OS)" | package-lock.json'
                      restoreKeys: |
                          npm | "$(Agent.OS)"
                          npm
                      path: $(System.DefaultWorkingDirectory)/node_modules
                  displayName: Cache NPM packages
                - script: |
                      echo -e "\n//npm.pkg.github.com/:_authToken=$(GITHUB_TOKEN)" >> ./.npmrc
                      npm ci
                      npm run lint
    - stage: Build
      dependsOn: Static
      jobs:
          - job: Ubuntu_x64
            displayName: Build Ubuntu X64
            steps:
                - task: NodeTool@0
                  inputs:
                      versionSpec: '16.x'
                  displayName: 'Install Node.js'

                - task: Cache@2
                  inputs:
                      key: '"npm" | "$(Agent.OS)" | package-lock.json'
                      restoreKeys: |
                          npm | "$(Agent.OS)"
                          npm
                      path: $(System.DefaultWorkingDirectory)/node_modules
                  displayName: Cache NPM packages

                - script: |
                      echo -e "\n//npm.pkg.github.com/:_authToken=$(GITHUB_TOKEN)" >> ./.npmrc
                      npm ci
                      npm run build
                  displayName: 'Build'

                - publish: $(System.DefaultWorkingDirectory)/build
                  artifact: DistFolder

    - stage: Test
      dependsOn: Build
      jobs:
          - job: Ubuntu_x64
            displayName: Test Ubuntu X64
            steps:
                - task: Cache@2
                  inputs:
                      key: '"npm" | "$(Agent.OS)" | package-lock.json'
                      restoreKeys: |
                          npm | "$(Agent.OS)"
                          npm
                      path: $(System.DefaultWorkingDirectory)/node_modules
                  displayName: Cache NPM packages
                - download: current
                  artifact: DistFolder
                - script: |
                      echo -e "\n//npm.pkg.github.com/:_authToken=$(GITHUB_TOKEN)" >> ./.npmrc
                      npm ci
                      CI=true npm test
                  displayName: 'Test'
                - task: PublishTestResults@2
                  displayName: Publish Test Results
                  condition: succeededOrFailed()
                  inputs:
                      testRunner: JUnit
                      testResultsFiles: '**/junit.xml'

    - stage: DeployProduction
      displayName: Deploy Production
      dependsOn: Test
      condition: and(succeeded(), contains(variables['build.sourceBranch'], 'refs/tags/v'))
      jobs:
          - job: AzureSWA
            displayName: Deploy to static app
            steps:
                - download: current
                  artifact: DistFolder
                - task: AzureStaticWebApp@0
                  inputs:
                      app_location: 'DistFolder'
                      output_location: 'DistFolder'
                      cwd: $(Pipeline.Workspace)
                      skip_api_build: true
                      skip_app_build: true
                      azure_static_web_apps_api_token: $(deployment_token)
          #- job: Github
          #  displayName: Github Mirror
          #  steps:
          #      - script: |
          #            git config user.name "Nicolas Pope"
          #            git config user.email "npope@uef.fi"
          #            git fetch --unshallow origin
          #            git push --prune $(git_token) +refs/remotes/origin/*:refs/heads/* +refs/tags/*:refs/tags/*

    - stage: DeployStaging
      displayName: Deploy Staging
      dependsOn: Test
      condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/main'))
      jobs:
          - job: AzureSWA
            displayName: Deploy to static app
            steps:
                - download: current
                  artifact: DistFolder
                - task: AzureStaticWebApp@0
                  inputs:
                      app_location: 'DistFolder'
                      api_location: 's/api'
                      output_location: 'DistFolder'
                      cwd: $(Pipeline.Workspace)
                      skip_api_build: false
                      skip_app_build: true
                      azure_static_web_apps_api_token: $(deployment_token)
                      deployment_environment: staging
